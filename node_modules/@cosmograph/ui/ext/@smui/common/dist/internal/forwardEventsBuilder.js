const t=/^[a-z]+(?::(?:preventDefault|stopPropagation|passive|nonpassive|capture|once|self))+$/,e=/^[^$]+(?:\$(?:preventDefault|stopPropagation|passive|nonpassive|capture|once|self))+$/;function n(n){let s,r=[];function i(t){const e=n.$$.callbacks[t.type];e&&e.slice().forEach((e=>e.call(this,t)))}return n.$on=(e,n)=>{let o=e,i=()=>{};s?i=s(o,n):r.push([o,n]);return o.match(t)&&console&&console.warn('Event modifiers in SMUI now use "$" instead of ":", so that all events can be bound with modifiers. Please update your event binding: ',o),()=>{i()}},n=>{const a=[],c={};s=(s,r)=>{let l=s,u=r,p=!1;const f=l.match(t),h=l.match(e),v=f||h;if(l.match(/^SMUI:\w+:/)){const t=l.split(":");let e="";for(let n=0;n<t.length;n++)e+=n===t.length-1?":"+t[n]:t[n].split("-").map((t=>t.slice(0,1).toUpperCase()+t.slice(1))).join("");console.warn(`The event ${l.split("$")[0]} has been renamed to ${e.split("$")[0]}.`),l=e}if(v){const t=l.split(f?":":"$");l=t[0];const e=t.slice(1).reduce(((t,e)=>(t[e]=!0,t)),{});e.passive&&(p=p||{},p.passive=!0),e.nonpassive&&(p=p||{},p.passive=!1),e.capture&&(p=p||{},p.capture=!0),e.once&&(p=p||{},p.once=!0),e.preventDefault&&(d=u,u=function(t){return t.preventDefault(),d.call(this,t)}),e.stopPropagation&&(u=function(t){return function(e){return e.stopPropagation(),t.call(this,e)}}(u)),e.stopImmediatePropagation&&(u=function(t){return function(e){return e.stopImmediatePropagation(),t.call(this,e)}}(u)),e.self&&(u=function(t,e){return function(n){if(n.target===t)return e.call(this,n)}}(n,u)),e.trusted&&(u=function(t){return function(e){if(e.isTrusted)return t.call(this,e)}}(u))}var d;const m=o(n,l,u,p),$=()=>{m();const t=a.indexOf($);t>-1&&a.splice(t,1)};return a.push($),l in c||(c[l]=o(n,l,i)),$};for(let t=0;t<r.length;t++)s(r[t][0],r[t][1]);return{destroy:()=>{for(let t=0;t<a.length;t++)a[t]();for(let t of Object.entries(c))t[1]()}}}}function o(t,e,n,o){return t.addEventListener(e,n,o),()=>t.removeEventListener(e,n,o)}export{n as forwardEventsBuilder};
//# sourceMappingURL=forwardEventsBuilder.js.map
