import {
  CssLabel,
  LabelRenderer
} from "./chunk-3NUH4VZ6.js";
import {
  createClient
} from "./chunk-HSZSE5FX.js";
import {
  src_default
} from "./chunk-YD743BG4.js";
import {
  a,
  d,
  o,
  p
} from "./chunk-UWGFWYLP.js";
import {
  Graph
} from "./chunk-V7EMR6PC.js";
import "./chunk-FMA5RTTC.js";
import {
  color
} from "./chunk-SARWLFPZ.js";
import "./chunk-5H4R2CZR.js";
import "./chunk-V4OQ3NZ2.js";

// node_modules/@cosmograph/cosmograph/modules/cosmograph/watermark.js
var c = '<svg fill="currentColor" height="11" viewBox="0 0 163 11" width="163" xmlns="http://www.w3.org/2000/svg"><g fill="currentColor"><path d="m2.45674 8-1.925002-5.379h.924002l1.617 4.73h.154l1.617-4.73h.924l-1.925 5.379z"/><path d="m7.02243 8v-5.379h.869v5.379zm.44-6.215c-.19067 0-.352-.06233-.484-.187-.12467-.12467-.187-.28233-.187-.473 0-.198.06233-.359333.187-.484.132-.124667.29333-.187.484-.187.19066 0 .34833.062333.473.187.12466.124667.187.286.187.484 0 .19067-.06234.34833-.187.473-.12467.12467-.28234.187-.473.187z"/><path d="m11.8857 8.154c-.6673 0-1.232-.154-1.694-.462-.45465-.308-.72965-.79567-.82499-1.463l.82499-.187c.0587.352.1687.63067.33.836.1613.198.3593.341.594.429.242.08067.4987.121.77.121.4033 0 .7223-.08067.957-.242s.352-.37767.352-.649c0-.27867-.1137-.473-.341-.583-.22-.11733-.5243-.21267-.913-.286l-.451-.077c-.3447-.05867-.66-.15033-.946-.275s-.5133-.29333-.68199-.506c-.16866-.21267-.25299-.48033-.25299-.803 0-.484.18699-.86167.56098-1.133.374-.27133.869-.407 1.485-.407.6087 0 1.1.13933 1.474.418.3813.27133.627.65633.737 1.155l-.814.209c-.066-.38867-.2237-.66-.473-.814-.2493-.16133-.5573-.242-.924-.242s-.6563.06967-.869.209c-.2127.132-.319.33-.319.594 0 .25667.099.44733.297.572.2053.11733.4767.20533.814.264l.451.077c.3813.066.7223.15767 1.023.275.308.11.55.27133.726.484.1833.21267.275.49133.275.836 0 .528-.198.935-.594 1.221-.3887.286-.913.429-1.573.429z"/><path d="m17.5765 8.099c-.3887 0-.748-.08433-1.078-.253-.3227-.16867-.5793-.418-.77-.748-.1833-.33733-.275-.74433-.275-1.221v-3.256h.869v3.19c0 .53533.132.924.396 1.166.2713.242.6343.363 1.089.363.5133 0 .935-.16867 1.265-.506s.495-.83967.495-1.507v-2.706h.869v5.379h-.847v-.913h-.154c-.1173.25667-.319.49133-.605.704-.286.20533-.704.308-1.254.308z"/><path d="m23.9048 8.154c-.374 0-.715-.066-1.023-.198s-.55-.32267-.726-.572-.264-.55367-.264-.913c0-.36667.088-.66733.264-.902.176-.242.418-.42167.726-.539.308-.12467.6527-.187 1.034-.187h1.815v-.396c0-.38133-.1136-.682-.341-.902-.22-.22-.55-.33-.99-.33-.4326 0-.77.10633-1.012.319-.242.20533-.407.484-.495.836l-.814-.264c.088-.30067.2274-.572.418-.814.1907-.24933.4437-.44733.759-.594.3227-.154.7077-.231 1.155-.231.6894 0 1.2247.17967 1.606.539.3814.352.572.85067.572 1.496v2.431c0 .22.1027.33.308.33h.495v.737h-.759c-.242 0-.4363-.066-.583-.198-.1466-.13933-.22-.32267-.22-.55v-.055h-.132c-.0806.13933-.1906.286-.33.44-.132.14667-.3153.26767-.55.363-.2346.10267-.539.154-.913.154zm.099-.748c.5134 0 .9277-.15033 1.243-.451.3227-.308.484-.737.484-1.287v-.121h-1.782c-.3446 0-.6306.077-.858.231-.22.14667-.33.37033-.33.671s.1137.53533.341.704c.2347.16867.5354.253.902.253z"/><path d="m28.582 8v-7.7h.869v7.7z"/><path d="m31.2783 8v-5.379h.869v5.379zm.44-6.215c-.1907 0-.352-.06233-.484-.187-.1247-.12467-.187-.28233-.187-.473 0-.198.0623-.359333.187-.484.132-.124667.2933-.187.484-.187s.3483.062333.473.187.187.286.187.484c0 .19067-.0623.34833-.187.473s-.2823.187-.473.187z"/><path d="m33.7326 8v-1.122l3.421-3.377v-.121h-3.311v-.759h4.224v1.122l-3.432 3.377v.132h3.52v.748z"/><path d="m41.9601 8.154c-.5427 0-1.0194-.11367-1.43-.341-.4107-.23467-.7297-.561-.957-.979-.2274-.418-.341-.902-.341-1.452v-.132c0-.55733.1136-1.045.341-1.463.2273-.418.5426-.74067.946-.968.4033-.23467.8653-.352 1.386-.352.506 0 .9533.11 1.342.33.3886.21267.693.52067.913.924s.33.87633.33 1.419v.396h-4.389c.022.57933.209 1.034.561 1.364.352.32267.792.484 1.32.484.462 0 .8176-.10633 1.067-.319.2493-.21267.44-.46567.572-.759l.748.363c-.11.22733-.264.45467-.462.682-.1907.22733-.4437.418-.759.572-.308.154-.704.231-1.188.231zm-1.848-3.333h3.498c-.0294-.49867-.2017-.88733-.517-1.166-.308-.27867-.704-.418-1.188-.418-.4914 0-.8947.13933-1.21.418-.3154.27867-.5097.66733-.583 1.166z"/><path d="m48.2828 8.154c-.462 0-.8873-.11-1.276-.33-.3886-.22-.6966-.539-.924-.957-.2273-.418-.341-.913-.341-1.485v-.143c0-.572.1137-1.06333.341-1.474.2274-.418.5317-.737.913-.957.3887-.22733.8177-.341 1.287-.341.374 0 .6894.05133.946.154.264.09533.4767.22.638.374.1614.14667.286.30433.374.473h.154v-3.168h.869v7.7h-.847v-.891h-.154c-.1466.27133-.374.51333-.682.726s-.7406.319-1.298.319zm.231-.77c.5574 0 1.0084-.176 1.353-.528.352-.35933.528-.858.528-1.496v-.099c0-.638-.176-1.133-.528-1.485-.3446-.35933-.7956-.539-1.353-.539-.55 0-1.0046.17967-1.364.539-.352.352-.528.847-.528 1.485v.099c0 .638.176 1.13667.528 1.496.3594.352.814.528 1.364.528z"/><path d="m58.8911 8.154c-.5573 0-.9936-.10633-1.309-.319-.308-.21267-.5316-.45467-.671-.726h-.154v.891h-.847v-7.7h.869v3.168h.154c.088-.16867.2127-.32633.374-.473.1614-.154.3704-.27867.627-.374.264-.10267.583-.154.957-.154.4694 0 .8947.11367 1.276.341.3887.22.6967.539.924.957.2274.41067.341.902.341 1.474v.143c0 .572-.1173 1.067-.352 1.485-.2273.418-.5353.737-.924.957-.3813.22-.803.33-1.265.33zm-.231-.77c.5574 0 1.0084-.176 1.353-.528.352-.35933.528-.858.528-1.496v-.099c0-.638-.176-1.133-.528-1.485-.3446-.35933-.7956-.539-1.353-.539-.55 0-1.0046.17967-1.364.539-.352.352-.528.847-.528 1.485v.099c0 .638.176 1.13667.528 1.496.3594.352.814.528 1.364.528z"/><path d="m63.6382 10.2v-.77h3.08c.2127 0 .319-.11.319-.33v-1.958h-.154c-.0733.154-.187.308-.341.462-.1466.14667-.341.26767-.583.363-.242.088-.5463.132-.913.132-.3886 0-.748-.08433-1.078-.253-.3226-.16867-.5793-.418-.77-.748-.1833-.33-.275-.73333-.275-1.21v-3.267h.869v3.201c0 .528.132.913.396 1.155.2714.242.6344.363 1.089.363.5134 0 .935-.16867 1.265-.506s.495-.83967.495-1.507v-2.706h.869v6.633c0 .29333-.0843.52433-.253.693-.1613.1687-.3996.253-.715.253z"/><path d="m75.2998 8.154c-.9167 0-1.6464-.264-2.189-.792-.5427-.53533-.814-1.31267-.814-2.332v-1.76c0-1.01933.2713-1.793.814-2.321.5426-.535333 1.2723-.803 2.189-.803.9093 0 1.606.253 2.09.759.4913.506.737 1.199.737 2.079v.055h-.913v-.088c0-.57933-.1577-1.05233-.473-1.419-.308-.374-.7884-.561-1.441-.561-.6527 0-1.1624.20167-1.529.605-.3667.396-.55.95333-.55 1.672v1.804c0 .71867.1833 1.27967.55 1.683.3666.396.8763.594 1.529.594.6526 0 1.133-.18333 1.441-.55.3153-.374.473-.85067.473-1.43v-.176h.913v.143c0 .88-.2457 1.573-.737 2.079-.484.506-1.1807.759-2.09.759z"/><path d="m82.0934 8.154c-.5427 0-1.023-.11367-1.441-.341-.4107-.22733-.7333-.54633-.968-.957-.2273-.418-.341-.90933-.341-1.474v-.143c0-.55733.1137-1.045.341-1.463.2347-.418.5573-.74067.968-.968.418-.22733.8983-.341 1.441-.341s1.0193.11367 1.43.341c.418.22733.7407.55.968.968.2347.418.352.90567.352 1.463v.143c0 .56467-.1173 1.056-.352 1.474-.2273.41067-.55.72967-.968.957-.4107.22733-.8873.341-1.43.341zm0-.781c.572 0 1.0267-.17967 1.364-.539.3447-.36667.517-.858.517-1.474v-.099c0-.616-.1723-1.10367-.517-1.463-.3373-.36667-.792-.55-1.364-.55-.5647 0-1.0193.18333-1.364.55-.3447.35933-.517.847-.517 1.463v.099c0 .616.1723 1.10733.517 1.474.3447.35933.7993.539 1.364.539z"/><path d="m88.5742 8.154c-.6673 0-1.232-.154-1.694-.462-.4547-.308-.7297-.79567-.825-1.463l.825-.187c.0587.352.1687.63067.33.836.1613.198.3593.341.594.429.242.08067.4987.121.77.121.4033 0 .7223-.08067.957-.242s.352-.37767.352-.649c0-.27867-.1137-.473-.341-.583-.22-.11733-.5243-.21267-.913-.286l-.451-.077c-.3447-.05867-.66-.15033-.946-.275s-.5133-.29333-.682-.506-.253-.48033-.253-.803c0-.484.187-.86167.561-1.133s.869-.407 1.485-.407c.6087 0 1.1.13933 1.474.418.3813.27133.627.65633.737 1.155l-.814.209c-.066-.38867-.2237-.66-.473-.814-.2493-.16133-.5573-.242-.924-.242s-.6563.06967-.869.209c-.2127.132-.319.33-.319.594 0 .25667.099.44733.297.572.2053.11733.4767.20533.814.264l.451.077c.3813.066.7223.15767 1.023.275.308.11.55.27133.726.484.1833.21267.275.49133.275.836 0 .528-.198.935-.594 1.221-.3887.286-.913.429-1.573.429z"/><path d="m92.208 8v-5.379h.847v.671h.154c.1026-.19067.2713-.36667.506-.528.2346-.16133.5646-.242.99-.242.418 0 .7553.09167 1.012.275.264.18333.4546.407.572.671h.154c.1246-.264.3116-.48767.561-.671.2566-.18333.6123-.275 1.067-.275.3593 0 .6746.07333.946.22.2713.14667.484.35933.638.638.1613.27133.242.59767.242.979v3.641h-.869v-3.564c0-.35933-.1064-.64167-.319-.847-.2054-.21267-.495-.319-.869-.319-.396 0-.7224.12833-.979.385-.2494.25667-.374.627-.374 1.111v3.234h-.869v-3.564c0-.35933-.1064-.64167-.319-.847-.2054-.21267-.495-.319-.869-.319-.396 0-.7224.12833-.979.385-.2494.25667-.374.627-.374 1.111v3.234z"/><path d="m104.158 8.154c-.543 0-1.023-.11367-1.441-.341-.411-.22733-.733-.54633-.968-.957-.227-.418-.341-.90933-.341-1.474v-.143c0-.55733.114-1.045.341-1.463.235-.418.557-.74067.968-.968.418-.22733.898-.341 1.441-.341s1.019.11367 1.43.341c.418.22733.741.55.968.968.235.418.352.90567.352 1.463v.143c0 .56467-.117 1.056-.352 1.474-.227.41067-.55.72967-.968.957-.411.22733-.887.341-1.43.341zm0-.781c.572 0 1.027-.17967 1.364-.539.345-.36667.517-.858.517-1.474v-.099c0-.616-.172-1.10367-.517-1.463-.337-.36667-.792-.55-1.364-.55-.565 0-1.019.18333-1.364.55-.345.35933-.517.847-.517 1.463v.099c0 .616.172 1.10733.517 1.474.345.35933.799.539 1.364.539z"/><path d="m108.208 5.338v-.154c0-.56467.113-1.04867.341-1.452.227-.40333.535-.715.924-.935.388-.22.814-.33 1.276-.33.564 0 .997.11 1.298.33.308.21267.535.451.682.715h.154v-.891h.825v6.633c0 .29333-.081.52433-.242.693-.162.1687-.396.253-.704.253h-3.652v-.77h3.421c.22 0 .33-.11.33-.33v-2.046h-.154c-.088.16133-.213.319-.374.473-.162.154-.371.28233-.627.385-.257.09533-.576.143-.957.143-.462 0-.888-.11-1.276-.33-.389-.22-.697-.53167-.924-.935-.228-.41067-.341-.89467-.341-1.452zm2.772 1.947c.557 0 1.008-.176 1.353-.528.352-.352.528-.836.528-1.452v-.088c0-.62333-.176-1.10733-.528-1.452-.345-.352-.796-.528-1.353-.528-.55 0-1.005.176-1.364.528-.352.34467-.528.82867-.528 1.452v.088c0 .616.176 1.1.528 1.452.359.352.814.528 1.364.528z"/><path d="m115.529 8v-5.379h.847v.66h.154c.096-.23467.242-.407.44-.517s.459-.165.781-.165h.638v.792h-.693c-.388 0-.704.11-.946.33-.234.21267-.352.54633-.352 1.001v3.278z"/><path d="m121.143 8.154c-.374 0-.715-.066-1.023-.198s-.55-.32267-.726-.572-.264-.55367-.264-.913c0-.36667.088-.66733.264-.902.176-.242.418-.42167.726-.539.308-.12467.653-.187 1.034-.187h1.815v-.396c0-.38133-.114-.682-.341-.902-.22-.22-.55-.33-.99-.33-.433 0-.77.10633-1.012.319-.242.20533-.407.484-.495.836l-.814-.264c.088-.30067.227-.572.418-.814.191-.24933.444-.44733.759-.594.323-.154.708-.231 1.155-.231.689 0 1.225.17967 1.606.539.381.352.572.85067.572 1.496v2.431c0 .22.103.33.308.33h.495v.737h-.759c-.242 0-.436-.066-.583-.198-.147-.13933-.22-.32267-.22-.55v-.055h-.132c-.081.13933-.191.286-.33.44-.132.14667-.315.26767-.55.363-.235.10267-.539.154-.913.154zm.099-.748c.513 0 .928-.15033 1.243-.451.323-.308.484-.737.484-1.287v-.121h-1.782c-.345 0-.631.077-.858.231-.22.14667-.33.37033-.33.671s.114.53533.341.704c.235.16867.535.253.902.253z"/><path d="m125.82 10.2v-7.579h.847v.891h.154c.14-.27133.363-.51333.671-.726.316-.21267.752-.319 1.309-.319.462 0 .884.11367 1.265.341.389.22.697.53533.924.946.235.41067.352.90567.352 1.485v.143c0 .572-.113 1.067-.341 1.485-.227.418-.535.737-.924.957-.381.22-.806.33-1.276.33-.374 0-.693-.05133-.957-.154-.256-.09533-.465-.22-.627-.374-.161-.154-.286-.31167-.374-.473h-.154v3.047zm2.75-2.816c.558 0 1.009-.176 1.353-.528.352-.35933.528-.858.528-1.496v-.099c0-.638-.176-1.133-.528-1.485-.344-.35933-.795-.539-1.353-.539-.55 0-1.004.17967-1.364.539-.352.352-.528.847-.528 1.485v.099c0 .638.176 1.13667.528 1.496.36.352.814.528 1.364.528z"/><path d="m132.899 8v-7.7h.869v3.179h.154c.074-.16133.184-.31167.33-.451.154-.14667.349-.26767.583-.363.242-.09533.547-.143.913-.143.404 0 .763.088 1.078.264.323.16867.58.418.77.748.191.32267.286.726.286 1.21v3.256h-.869v-3.19c0-.53533-.135-.924-.407-1.166-.264-.242-.623-.363-1.078-.363-.52 0-.946.16867-1.276.506-.322.33733-.484.83967-.484 1.507v2.706z"/><path d="m140.118 8.154c-.212 0-.392-.06967-.539-.209-.139-.13933-.209-.319-.209-.539s.07-.39967.209-.539c.147-.13933.327-.209.539-.209.22 0 .4.06967.539.209.14.13933.209.319.209.539s-.069.39967-.209.539c-.139.13933-.319.209-.539.209z"/><path d="m144.078 8.154c-.374 0-.715-.066-1.023-.198s-.55-.32267-.726-.572-.264-.55367-.264-.913c0-.36667.088-.66733.264-.902.176-.242.418-.42167.726-.539.308-.12467.652-.187 1.034-.187h1.815v-.396c0-.38133-.114-.682-.341-.902-.22-.22-.55-.33-.99-.33-.433 0-.77.10633-1.012.319-.242.20533-.407.484-.495.836l-.814-.264c.088-.30067.227-.572.418-.814.19-.24933.443-.44733.759-.594.322-.154.707-.231 1.155-.231.689 0 1.224.17967 1.606.539.381.352.572.85067.572 1.496v2.431c0 .22.102.33.308.33h.495v.737h-.759c-.242 0-.437-.066-.583-.198-.147-.13933-.22-.32267-.22-.55v-.055h-.132c-.081.13933-.191.286-.33.44-.132.14667-.316.26767-.55.363-.235.10267-.539.154-.913.154zm.099-.748c.513 0 .927-.15033 1.243-.451.322-.308.484-.737.484-1.287v-.121h-1.782c-.345 0-.631.077-.858.231-.22.14667-.33.37033-.33.671s.113.53533.341.704c.234.16867.535.253.902.253z"/><path d="m148.755 10.2v-7.579h.847v.891h.154c.139-.27133.363-.51333.671-.726.315-.21267.752-.319 1.309-.319.462 0 .884.11367 1.265.341.389.22.697.53533.924.946.235.41067.352.90567.352 1.485v.143c0 .572-.114 1.067-.341 1.485s-.535.737-.924.957c-.381.22-.807.33-1.276.33-.374 0-.693-.05133-.957-.154-.257-.09533-.466-.22-.627-.374s-.286-.31167-.374-.473h-.154v3.047zm2.75-2.816c.557 0 1.008-.176 1.353-.528.352-.35933.528-.858.528-1.496v-.099c0-.638-.176-1.133-.528-1.485-.345-.35933-.796-.539-1.353-.539-.55 0-1.005.17967-1.364.539-.352.352-.528.847-.528 1.485v.099c0 .638.176 1.13667.528 1.496.359.352.814.528 1.364.528z"/><path d="m155.834 10.2v-7.579h.847v.891h.154c.139-.27133.363-.51333.671-.726.315-.21267.752-.319 1.309-.319.462 0 .884.11367 1.265.341.389.22.697.53533.924.946.235.41067.352.90567.352 1.485v.143c0 .572-.114 1.067-.341 1.485s-.535.737-.924.957c-.381.22-.807.33-1.276.33-.374 0-.693-.05133-.957-.154-.257-.09533-.466-.22-.627-.374s-.286-.31167-.374-.473h-.154v3.047zm2.75-2.816c.557 0 1.008-.176 1.353-.528.352-.35933.528-.858.528-1.496v-.099c0-.638-.176-1.133-.528-1.485-.345-.35933-.796-.539-1.353-.539-.55 0-1.005.17967-1.364.539-.352.352-.528.847-.528 1.485v.099c0 .638.176 1.13667.528 1.496.359.352.814.528 1.364.528z"/><path d="m71.6368 9.375h90.3682v.55h-90.3682z"/></g></svg>';

// node_modules/@cosmograph/cosmograph/api/supabase/supabase.js
var i = createClient("https://xovkkfhojasbjinfslpx.supabase.co", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhvdmtrZmhvamFzYmppbmZzbHB4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTM1ODQ0ODAsImV4cCI6MjAwOTE2MDQ4MH0.L3-X0p_un0oSTNubPwtfGo0D8g2bkPIfz7CaZ-iRYXY");
async function I(s3) {
  const { error: I2 } = await i.from("metrics").insert(s3);
  return I2;
}

// node_modules/@cosmograph/cosmograph/ext/rollup-plugin-styles/dist/runtime/inject-css.js
var e = [];
var t = [];
function n(n3, r) {
  if (n3 && "undefined" != typeof document) {
    var a3, s3 = true === r.prepend ? "prepend" : "append", d2 = true === r.singleTag, i4 = "string" == typeof r.container ? document.querySelector(r.container) : document.getElementsByTagName("head")[0];
    if (d2) {
      var u = e.indexOf(i4);
      -1 === u && (u = e.push(i4) - 1, t[u] = {}), a3 = t[u] && t[u][s3] ? t[u][s3] : t[u][s3] = c2();
    } else a3 = c2();
    65279 === n3.charCodeAt(0) && (n3 = n3.substring(1)), a3.styleSheet ? a3.styleSheet.cssText += n3 : a3.appendChild(document.createTextNode(n3));
  }
  function c2() {
    var e4 = document.createElement("style");
    if (e4.setAttribute("type", "text/css"), r.attributes) for (var t3 = Object.keys(r.attributes), n4 = 0; n4 < t3.length; n4++) e4.setAttribute(t3[n4], r.attributes[t3[n4]]);
    var a4 = "prepend" === s3 ? "afterbegin" : "beforeend";
    return i4.insertAdjacentElement(a4, e4), e4;
  }
}

// node_modules/@cosmograph/cosmograph/modules/cosmograph/style.module.css.js
var e2 = ":root{--cosmograph-watermark-color:#fff}.style_module_watermark__6b4371ae{bottom:0;color:var(--cosmograph-watermark-color);cursor:pointer;line-height:0;margin:0 .6rem .6rem 0;position:absolute;right:0;user-select:none}.style_module_cosmograph__6b4371ae{display:flex;height:100%;overflow:hidden;position:relative;width:100%}.style_module_cosmographShowLabelsFor__6b4371ae{opacity:1}.style_module_cosmographShowTopLabels__6b4371ae{opacity:.9}.style_module_cosmographShowDynamicLabels__6b4371ae{opacity:.7}";
var a2 = { watermark: "style_module_watermark__6b4371ae", cosmograph: "style_module_cosmograph__6b4371ae", cosmographShowLabelsFor: "style_module_cosmographShowLabelsFor__6b4371ae", cosmographShowTopLabels: "style_module_cosmographShowTopLabels__6b4371ae", cosmographShowDynamicLabels: "style_module_cosmographShowDynamicLabels__6b4371ae" };
n(e2, {});

// node_modules/@cosmograph/cosmograph/modules/cosmograph/config.js
var o2 = { disableSimulation: null, showDynamicLabels: true, showTopLabels: false, showTopLabelsLimit: 100, showTopLabelsValueKey: void 0, showLabelsFor: void 0, showHoveredNodeLabel: true, nodeLabelAccessor: (o5) => o5.id, nodeLabelClassName: void 0, nodeLabelColor: void 0, hoveredNodeLabelClassName: void 0, hoveredNodeLabelColor: void 0, onSetData: void 0, onNodesFiltered: void 0, onLinksFiltered: void 0, onLabelClick: void 0 };

// node_modules/@cosmograph/cosmograph/modules/cosmograph/crossfilter.js
var i2 = class {
  constructor(s3, i4, e4) {
    this._crossfilter = s3, this._selfRemove = i4, this._syncUp = e4;
  }
  setAccessor(s3) {
    const { _crossfilter: i4 } = this;
    this.dispose(), this._dimension = i4.dimension(s3);
  }
  applyFilter(s3) {
    var i4, e4;
    null === (i4 = this._dimension) || void 0 === i4 || i4.filter(s3), null === (e4 = this._syncUp) || void 0 === e4 || e4.call(this);
  }
  clear() {
    var s3, i4;
    null === (s3 = this._dimension) || void 0 === s3 || s3.filterAll(), null === (i4 = this._syncUp) || void 0 === i4 || i4.call(this);
  }
  getAllValues() {
    const { _crossfilter: s3, _dimension: i4 } = this;
    if (i4) return s3.all().map(i4.accessor);
  }
  getFilteredValues() {
    const { _crossfilter: s3, _dimension: i4 } = this;
    if (i4) return s3.allFiltered().map(i4.accessor);
  }
  getFilteredRecords() {
    return this._crossfilter.allFiltered([this._dimension]);
  }
  isActive() {
    var s3;
    return (null === (s3 = this._dimension) || void 0 === s3 ? void 0 : s3.hasCurrentFilter()) || false;
  }
  dispose() {
    var s3;
    null === (s3 = this._dimension) || void 0 === s3 || s3.dispose();
  }
  remove() {
    this.dispose(), this._selfRemove();
  }
};
var e3 = class {
  constructor(i4) {
    this._crossfilter = src_default(), this._filters = /* @__PURE__ */ new Set(), this._syncUpFunction = i4, this._crossfilter.onChange(((s3) => {
      var i5, e4, t3;
      switch (s3) {
        case "filtered":
          null === (i5 = this.onFiltered) || void 0 === i5 || i5.call(this), this._filters.forEach(((s4) => {
            var i6;
            null === (i6 = s4.onFiltered) || void 0 === i6 || i6.call(s4);
          }));
          break;
        case "dataAdded":
          null === (e4 = this.onDataAdded) || void 0 === e4 || e4.call(this), this._filters.forEach(((s4) => {
            var i6;
            null === (i6 = s4.onDataAdded) || void 0 === i6 || i6.call(s4);
          }));
          break;
        case "dataRemoved":
          null === (t3 = this.onDataRemoved) || void 0 === t3 || t3.call(this), this._filters.forEach(((s4) => {
            var i6;
            null === (i6 = s4.onDataRemoved) || void 0 === i6 || i6.call(s4);
          }));
      }
    }));
  }
  addRecords(s3) {
    const { _crossfilter: i4 } = this;
    this._records = s3, i4.remove(), i4.add(s3);
  }
  getFilteredRecords(s3) {
    const { _crossfilter: i4 } = this;
    return (null == s3 ? void 0 : s3.getFilteredRecords()) || i4.allFiltered();
  }
  addFilter(s3 = true) {
    const e4 = new i2(this._crossfilter, (() => {
      this._filters.delete(e4);
    }), s3 ? this._syncUpFunction : void 0);
    return this._filters.add(e4), e4;
  }
  clearFilters() {
    this._filters.forEach(((s3) => {
      s3.clear();
    }));
  }
  isAnyFiltersActive(s3) {
    for (const i4 of this._filters.values()) if (i4 !== s3 && i4.isActive()) return true;
    return false;
  }
  getAllRecords() {
    return this._records;
  }
};

// node_modules/@cosmograph/cosmograph/modules/cosmograph/index.js
var h = class {
  constructor(s3, i4) {
    var l;
    this._data = { nodes: [], links: [] }, this._previousData = { nodes: [], links: [] }, this._cosmographConfig = {}, this._cosmosConfig = {}, this._nodesForTopLabels = /* @__PURE__ */ new Set(), this._nodesForForcedLabels = /* @__PURE__ */ new Set(), this._trackedNodeToLabel = /* @__PURE__ */ new Map(), this._isLabelsDestroyed = false, this._svgParser = new DOMParser(), this._nodesCrossfilter = new e3(this._applyLinksFilter.bind(this)), this._linksCrossfilter = new e3(this._applyNodesFilter.bind(this)), this._nodesFilter = this._nodesCrossfilter.addFilter(false), this._linksFilter = this._linksCrossfilter.addFilter(false), this._selectedNodesFilter = this._nodesCrossfilter.addFilter(), this._isDataDifferent = () => {
      const s4 = JSON.stringify(this._data.nodes), e4 = JSON.stringify(this._previousData.nodes), o5 = JSON.stringify(this._data.links), t3 = JSON.stringify(this._previousData.links);
      return s4 !== e4 || o5 !== t3;
    }, this._onClick = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onClick) || void 0 === o5 || o5.call(e4, ...s4);
    }, this._onLabelClick = (s4, e4) => {
      var o5, t3, i5;
      const n3 = null === (o5 = this._cosmos) || void 0 === o5 ? void 0 : o5.graph.getNodeById(e4.id);
      n3 && (null === (i5 = (t3 = this._cosmographConfig).onLabelClick) || void 0 === i5 || i5.call(t3, n3, s4));
    }, this._onHoveredNodeClick = (s4) => {
      var e4, o5;
      this._hoveredNode && (null === (o5 = (e4 = this._cosmographConfig).onLabelClick) || void 0 === o5 || o5.call(e4, this._hoveredNode, s4));
    }, this._onNodeMouseOver = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onNodeMouseOver) || void 0 === o5 || o5.call(e4, ...s4);
      const [t3, , i5] = s4;
      this._hoveredNode = t3, this._renderLabelForHovered(t3, i5);
    }, this._onNodeMouseOut = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onNodeMouseOut) || void 0 === o5 || o5.call(e4, ...s4), this._renderLabelForHovered();
    }, this._onMouseMove = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onMouseMove) || void 0 === o5 || o5.call(e4, ...s4);
      const [t3, , i5] = s4;
      this._renderLabelForHovered(t3, i5);
    }, this._onZoomStart = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onZoomStart) || void 0 === o5 || o5.call(e4, ...s4);
    }, this._onZoom = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onZoom) || void 0 === o5 || o5.call(e4, ...s4), this._renderLabelForHovered(), this._renderLabels();
    }, this._onZoomEnd = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onZoomEnd) || void 0 === o5 || o5.call(e4, ...s4);
    }, this._onStart = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onSimulationStart) || void 0 === o5 || o5.call(e4, ...s4);
    }, this._onTick = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onSimulationTick) || void 0 === o5 || o5.call(e4, ...s4), this._renderLabels();
    }, this._onEnd = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onSimulationEnd) || void 0 === o5 || o5.call(e4, ...s4);
    }, this._onPause = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onSimulationPause) || void 0 === o5 || o5.call(e4, ...s4);
    }, this._onRestart = (...s4) => {
      var e4, o5;
      null === (o5 = (e4 = this._cosmographConfig).onSimulationRestart) || void 0 === o5 || o5.call(e4, ...s4);
    }, this._containerNode = s3, this._containerNode.classList.add(a2.cosmograph), this._cosmographConfig = a(o2, null != i4 ? i4 : {}), this._cosmosConfig = this._createCosmosConfig(i4), this._canvasElement = document.createElement("canvas"), this._labelsDivElement = document.createElement("div"), this._watermarkDivElement = document.createElement("div"), this._watermarkDivElement.classList.add(a2.watermark), this._watermarkDivElement.onclick = () => {
      var s4;
      return null === (s4 = window.open("https://cosmograph.app/", "_blank")) || void 0 === s4 ? void 0 : s4.focus();
    }, s3.appendChild(this._canvasElement), s3.appendChild(this._labelsDivElement), s3.appendChild(this._watermarkDivElement), this._cssLabelsRenderer = new LabelRenderer(this._labelsDivElement, { dispatchWheelEventElement: this._canvasElement, pointerEvents: "all", onLabelClick: this._onLabelClick.bind(this) }), this._hoveredCssLabel = new CssLabel(this._labelsDivElement), this._hoveredCssLabel.setPointerEvents("all"), this._hoveredCssLabel.element.addEventListener("click", this._onHoveredNodeClick.bind(this)), this._linksFilter.setAccessor(((s4) => [s4.source, s4.target])), this._nodesFilter.setAccessor(((s4) => s4.id)), this._selectedNodesFilter.setAccessor(((s4) => s4.id)), this._nodesCrossfilter.onFiltered = () => {
      var s4, e4, o5, t3;
      let i5;
      this._nodesCrossfilter.isAnyFiltersActive() ? (i5 = this._nodesCrossfilter.getFilteredRecords(), null === (s4 = this._cosmos) || void 0 === s4 || s4.selectNodesByIds(i5.map(((s5) => s5.id)))) : null === (e4 = this._cosmos) || void 0 === e4 || e4.unselectNodes(), this._updateSelectedNodesSet(i5), null === (t3 = (o5 = this._cosmographConfig).onNodesFiltered) || void 0 === t3 || t3.call(o5, i5);
    }, this._linksCrossfilter.onFiltered = () => {
      var s4, e4;
      let o5;
      this._linksCrossfilter.isAnyFiltersActive() && (o5 = this._linksCrossfilter.getFilteredRecords()), null === (e4 = (s4 = this._cosmographConfig).onLinksFiltered) || void 0 === e4 || e4.call(s4, o5);
    };
    const h2 = this._svgParser.parseFromString(c, "image/svg+xml").firstChild;
    null === (l = this._watermarkDivElement) || void 0 === l || l.appendChild(h2);
  }
  get data() {
    return this._data;
  }
  get progress() {
    var s3;
    return null === (s3 = this._cosmos) || void 0 === s3 ? void 0 : s3.progress;
  }
  get isSimulationRunning() {
    var s3;
    return null === (s3 = this._cosmos) || void 0 === s3 ? void 0 : s3.isSimulationRunning;
  }
  get maxPointSize() {
    var s3;
    return null === (s3 = this._cosmos) || void 0 === s3 ? void 0 : s3.maxPointSize;
  }
  setData(e4, o5, t3 = true) {
    var i4, n3, r, a3;
    const { _cosmographConfig: d2 } = this;
    this._data = { nodes: e4, links: o5 };
    const h2 = null === d2.disableSimulation ? !o5.length : d2.disableSimulation;
    this._cosmos || (this._disableSimulation = h2, this._cosmosConfig.disableSimulation = this._disableSimulation, this._cosmos = new Graph(this._canvasElement, this._cosmosConfig), this.cosmos = this._cosmos), this._disableSimulation !== h2 && console.warn(`The \`disableSimulation\` was initialized to \`${this._disableSimulation}\` during initialization and will not be modified.`), this._cosmos.setData(e4, o5, t3), this._nodesCrossfilter.addRecords(e4), this._linksCrossfilter.addRecords(o5), this._updateLabels(), null === (n3 = (i4 = this._cosmographConfig).onSetData) || void 0 === n3 || n3.call(i4, e4, o5), this._isDataDifferent() && (["cosmograph.app"].includes(window.location.hostname) || I({ browser: navigator.userAgent, hostname: window.location.hostname, mode: null, is_library_metric: true, links_count: o5.length, links_have_time: null, links_raw_columns: o5.length && null !== (r = Object.keys(null == o5 ? void 0 : o5[0]).length) && void 0 !== r ? r : 0, links_raw_lines: null, nodes_count: e4.length, nodes_have_time: null, nodes_raw_columns: e4.length && null !== (a3 = Object.keys(null == e4 ? void 0 : e4[0]).length) && void 0 !== a3 ? a3 : 0, nodes_raw_lines: null })), this._previousData = { nodes: e4, links: o5 };
  }
  setConfig(s3) {
    var e4, o5;
    if (this._cosmographConfig = a(o2, null != s3 ? s3 : {}), this._cosmosConfig = this._createCosmosConfig(s3), null === (e4 = this._cosmos) || void 0 === e4 || e4.setConfig(this._cosmosConfig), null == s3 ? void 0 : s3.backgroundColor) {
      const e5 = null === (o5 = color(null == s3 ? void 0 : s3.backgroundColor)) || void 0 === o5 ? void 0 : o5.formatHex();
      if (e5) {
        const s4 = this._checkBrightness(e5), o6 = document.querySelector(":root");
        s4 > 0.65 ? null == o6 || o6.style.setProperty("--cosmograph-watermark-color", "#000000") : null == o6 || o6.style.setProperty("--cosmograph-watermark-color", "#ffffff");
      }
    }
    this._updateLabels();
  }
  addNodesFilter() {
    return this._nodesCrossfilter.addFilter();
  }
  addLinksFilter() {
    return this._linksCrossfilter.addFilter();
  }
  selectNodesInRange(s3) {
    var e4;
    if (!this._cosmos) return;
    this._cosmos.selectNodesInRange(s3);
    const o5 = new Set((null !== (e4 = this.getSelectedNodes()) && void 0 !== e4 ? e4 : []).map(((s4) => s4.id)));
    this._selectedNodesFilter.applyFilter(((s4) => o5.has(s4)));
  }
  selectNodes(s3) {
    if (!this._cosmos) return;
    const e4 = new Set(s3.map(((s4) => s4.id)));
    this._selectedNodesFilter.applyFilter(((s4) => e4.has(s4)));
  }
  selectNode(s3, e4 = false) {
    if (!this._cosmos) return;
    const o5 = new Set([s3, ...e4 && this._cosmos.getAdjacentNodes(s3.id) || []].map(((s4) => s4.id)));
    this._selectedNodesFilter.applyFilter(((s4) => o5.has(s4)));
  }
  unselectNodes() {
    this._cosmos && this._selectedNodesFilter.clear();
  }
  getSelectedNodes() {
    if (this._cosmos) return this._cosmos.getSelectedNodes();
  }
  zoomToNode(s3) {
    this._cosmos && this._cosmos.zoomToNodeById(s3.id);
  }
  setZoomLevel(s3, e4 = 0) {
    this._cosmos && this._cosmos.setZoomLevel(s3, e4);
  }
  getZoomLevel() {
    if (this._cosmos) return this._cosmos.getZoomLevel();
  }
  getNodePositions() {
    if (this._cosmos) return this._cosmos.getNodePositions();
  }
  getNodePositionsMap() {
    if (this._cosmos) return this._cosmos.getNodePositionsMap();
  }
  getNodePositionsArray() {
    if (this._cosmos) return this._cosmos.getNodePositionsArray();
  }
  fitView(s3 = 250) {
    this._cosmos && this._cosmos.fitView(s3);
  }
  fitViewByNodeIds(s3, e4 = 250) {
    this._cosmos && this._cosmos.fitViewByNodeIds(s3, e4);
  }
  focusNode(s3) {
    this._cosmos && this._cosmos.setFocusedNodeById(null == s3 ? void 0 : s3.id);
  }
  getAdjacentNodes(s3) {
    if (this._cosmos) return this._cosmos.getAdjacentNodes(s3);
  }
  spaceToScreenPosition(s3) {
    if (this._cosmos) return this._cosmos.spaceToScreenPosition(s3);
  }
  spaceToScreenRadius(s3) {
    if (this._cosmos) return this._cosmos.spaceToScreenRadius(s3);
  }
  getNodeRadiusByIndex(s3) {
    if (this._cosmos) return this._cosmos.getNodeRadiusByIndex(s3);
  }
  getNodeRadiusById(s3) {
    if (this._cosmos) return this._cosmos.getNodeRadiusById(s3);
  }
  getSampledNodePositionsMap() {
    if (this._cosmos) return this._cosmos.getSampledNodePositionsMap();
  }
  start(s3 = 1) {
    this._cosmos && this._cosmos.start(s3);
  }
  pause() {
    this._cosmos && this._cosmos.pause();
  }
  restart() {
    this._cosmos && this._cosmos.restart();
  }
  step() {
    this._cosmos && this._cosmos.step();
  }
  remove() {
    var s3;
    null === (s3 = this._cosmos) || void 0 === s3 || s3.destroy(), this._isLabelsDestroyed || (this._containerNode.innerHTML = "", this._isLabelsDestroyed = true, this._hoveredCssLabel.element.removeEventListener("click", this._onHoveredNodeClick.bind(this)), this._hoveredCssLabel.destroy(), this._cssLabelsRenderer.destroy());
  }
  create() {
    this._cosmos && this._cosmos.create();
  }
  getNodeDegrees() {
    if (this._cosmos) return this._cosmos.graph.degree;
  }
  _createCosmosConfig(s3) {
    const e4 = { ...s3, simulation: { ...Object.keys(null != s3 ? s3 : {}).filter(((s4) => -1 !== s4.indexOf("simulation"))).reduce(((e5, o5) => {
      const t3 = o5.replace("simulation", "");
      return e5[t3.charAt(0).toLowerCase() + t3.slice(1)] = null == s3 ? void 0 : s3[o5], e5;
    }), {}), onStart: this._onStart.bind(this), onTick: this._onTick.bind(this), onEnd: this._onEnd.bind(this), onPause: this._onPause.bind(this), onRestart: this._onRestart.bind(this) }, events: { onClick: this._onClick.bind(this), onNodeMouseOver: this._onNodeMouseOver.bind(this), onNodeMouseOut: this._onNodeMouseOut.bind(this), onMouseMove: this._onMouseMove.bind(this), onZoomStart: this._onZoomStart.bind(this), onZoom: this._onZoom.bind(this), onZoomEnd: this._onZoomEnd.bind(this) } };
    return delete e4.disableSimulation, e4;
  }
  _updateLabels() {
    if (this._isLabelsDestroyed || !this._cosmos) return;
    const { _cosmos: s3, data: { nodes: e4 }, _cosmographConfig: { showTopLabels: o5, showTopLabelsLimit: t3, showLabelsFor: i4, showTopLabelsValueKey: n3, nodeLabelAccessor: l } } = this;
    if (this._nodesForTopLabels.clear(), o5 && t3) {
      let o6;
      o6 = n3 ? [...e4].sort(((s4, e5) => {
        const o7 = s4[n3], t4 = e5[n3];
        return "number" == typeof o7 && "number" == typeof t4 ? t4 - o7 : 0;
      })) : Object.entries(s3.graph.degree).sort(((s4, e5) => e5[1] - s4[1])).slice(0, t3).map(((e5) => s3.graph.getNodeByIndex(+e5[0])));
      for (let s4 = 0; s4 < t3 && !(s4 >= e4.length); s4++) {
        const e5 = o6[s4];
        e5 && this._nodesForTopLabels.add(e5);
      }
    }
    this._nodesForForcedLabels.clear(), null == i4 || i4.forEach(this._nodesForForcedLabels.add, this._nodesForForcedLabels), this._trackedNodeToLabel.clear(), s3.trackNodePositionsByIds([...o5 ? this._nodesForTopLabels : [], ...this._nodesForForcedLabels].map(((s4) => {
      var e5;
      return this._trackedNodeToLabel.set(s4, null !== (e5 = null == l ? void 0 : l(s4)) && void 0 !== e5 ? e5 : s4.id), s4.id;
    }))), this._renderLabels();
  }
  _updateSelectedNodesSet(s3) {
    this._isLabelsDestroyed || (s3 ? (this._selectedNodesSet = /* @__PURE__ */ new Set(), null == s3 || s3.forEach(this._selectedNodesSet.add, this._selectedNodesSet)) : this._selectedNodesSet = void 0, this._renderLabels());
  }
  _renderLabels() {
    if (this._isLabelsDestroyed || !this._cosmos) return;
    const { _cosmos: s3, _selectedNodesSet: e4, _cosmographConfig: { showDynamicLabels: o5, nodeLabelAccessor: t3, nodeLabelColor: i4, nodeLabelClassName: n3 } } = this;
    let l = [];
    const a3 = s3.getTrackedNodePositionsMap(), d2 = /* @__PURE__ */ new Map();
    if (o5) {
      const e5 = this.getSampledNodePositionsMap();
      null == e5 || e5.forEach(((e6, o6) => {
        var i5;
        const n4 = s3.graph.getNodeById(o6);
        n4 && d2.set(n4, [null !== (i5 = null == t3 ? void 0 : t3(n4)) && void 0 !== i5 ? i5 : n4.id, e6, a2.cosmographShowDynamicLabels, 0.7]);
      }));
    }
    this._nodesForTopLabels.forEach(((s4) => {
      d2.set(s4, [this._trackedNodeToLabel.get(s4), a3.get(s4.id), a2.cosmographShowTopLabels, 0.9]);
    })), this._nodesForForcedLabels.forEach(((s4) => {
      d2.set(s4, [this._trackedNodeToLabel.get(s4), a3.get(s4.id), a2.cosmographShowLabelsFor, 1]);
    })), l = [...d2.entries()].map((([o6, [t4, l2, r, a4]]) => {
      var d3, h2, c2;
      const _ = this.spaceToScreenPosition([null !== (d3 = null == l2 ? void 0 : l2[0]) && void 0 !== d3 ? d3 : 0, null !== (h2 = null == l2 ? void 0 : l2[1]) && void 0 !== h2 ? h2 : 0]), m = this.spaceToScreenRadius(s3.config.nodeSizeScale * this.getNodeRadiusById(o6.id)), u = !!e4, v = null == e4 ? void 0 : e4.has(o6);
      return { id: o6.id, text: null != t4 ? t4 : "", x: _[0], y: _[1] - m / 2 - 0.1 * m, weight: u && !v ? 0.1 : a4, shouldBeShown: this._nodesForForcedLabels.has(o6), style: u && !v ? "opacity: 0.1;" : "", color: i4 && ("string" == typeof i4 ? i4 : null == i4 ? void 0 : i4(o6)), className: null !== (c2 = "string" == typeof n3 ? n3 : null == n3 ? void 0 : n3(o6)) && void 0 !== c2 ? c2 : r };
    })), this._cssLabelsRenderer.setLabels(l), this._cssLabelsRenderer.draw(true);
  }
  _renderLabelForHovered(s3, e4) {
    var o5, t3;
    if (!this._cosmos) return;
    const { _cosmographConfig: { showHoveredNodeLabel: i4, nodeLabelAccessor: n3, hoveredNodeLabelClassName: l, hoveredNodeLabelColor: r } } = this;
    if (!this._isLabelsDestroyed) {
      if (i4 && s3 && e4) {
        const i5 = this.spaceToScreenPosition(e4), a3 = this.spaceToScreenRadius(this.getNodeRadiusById(s3.id));
        this._hoveredCssLabel.setText(null !== (o5 = null == n3 ? void 0 : n3(s3)) && void 0 !== o5 ? o5 : s3.id), this._hoveredCssLabel.setVisibility(true), this._hoveredCssLabel.setPosition(i5[0], i5[1] - a3 / 2 - 0.1 * a3), this._hoveredCssLabel.setClassName("string" == typeof l ? l : null !== (t3 = null == l ? void 0 : l(s3)) && void 0 !== t3 ? t3 : "");
        const d2 = r && ("string" == typeof r ? r : null == r ? void 0 : r(s3));
        d2 && this._hoveredCssLabel.setColor(d2);
      } else this._hoveredCssLabel.setVisibility(false);
      this._hoveredCssLabel.draw();
    }
  }
  _applyLinksFilter() {
    if (this._nodesCrossfilter.isAnyFiltersActive(this._nodesFilter)) {
      const s3 = this._nodesCrossfilter.getFilteredRecords(this._nodesFilter), e4 = new Set(s3.map(((s4) => s4.id)));
      this._linksFilter.applyFilter(((s4) => {
        const o5 = null == s4 ? void 0 : s4[0], t3 = null == s4 ? void 0 : s4[1];
        return e4.has(o5) && e4.has(t3);
      }));
    } else this._linksFilter.clear();
  }
  _applyNodesFilter() {
    if (this._linksCrossfilter.isAnyFiltersActive(this._linksFilter)) {
      const s3 = this._linksCrossfilter.getFilteredRecords(this._linksFilter), e4 = new Set(s3.map(((s4) => [s4.source, s4.target])).flat());
      this._nodesFilter.applyFilter(((s4) => e4.has(s4)));
    } else this._nodesFilter.clear();
  }
  _checkBrightness(s3) {
    const e4 = ((s4) => {
      const e5 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(s4);
      return e5 ? { r: parseInt((e5[1] || 0).toString(), 16), g: parseInt((e5[2] || 0).toString(), 16), b: parseInt((e5[3] || 0).toString(), 16) } : { r: 0, g: 0, b: 0 };
    })(s3);
    return (0.2126 * e4.r + 0.7152 * e4.g + 0.0722 * e4.b) / 255;
  }
};

// node_modules/@cosmograph/cosmograph/modules/search/config.js
var o3 = { onSelectResult: void 0, accessors: void 0 };

// node_modules/@cosmograph/cosmograph/modules/search/index.js
var i3 = class {
  constructor(i4, o5, c2) {
    this._config = {}, this._data = [], this._defaultAccessors = [], this._createDefaultAccessorOptions = (s3) => s3.length > 0 && s3[0] ? Object.keys(s3[0]).map(((s4) => ({ label: s4, accessor: (t3) => String(t3[s4]) }))) : [{ label: "id", accessor: (s4) => s4.id }], this._onSelect = (...s3) => {
      this._onSelectResult(...s3);
    }, this._onSearch = (...s3) => {
      var t3, e4;
      null === (e4 = (t3 = this._config).onSearch) || void 0 === e4 || e4.call(t3, ...s3);
    }, this._onEnter = (...s3) => {
      var t3, e4;
      null === (e4 = (t3 = this._config).onEnter) || void 0 === e4 || e4.call(t3, ...s3);
    }, this._onAccessorSelect = (...s3) => {
      var t3, e4;
      null === (e4 = (t3 = this._config).onAccessorSelect) || void 0 === e4 || e4.call(t3, ...s3);
    }, this._cosmograph = i4, this._config = a(o3, null != c2 ? c2 : {}), this.search = new o(o5, this._createSearchConfig(c2)), this._filter = this._cosmograph.addNodesFilter(), this._filter.onDataAdded = () => {
      this._updateData();
    }, this._updateData();
  }
  setConfig(t3) {
    const i4 = a(o3, null != t3 ? t3 : {});
    this._data.length && void 0 === i4.accessors && (i4.accessors = this._defaultAccessors), this.search.setConfig(this._createSearchConfig(i4)), this._config = i4;
  }
  _updateData() {
    const s3 = this._cosmograph.data.nodes;
    (null == s3 ? void 0 : s3.length) && (this._data = s3, this.search.setData(this._data), void 0 === this._config.accessors && (this._defaultAccessors = this._createDefaultAccessorOptions(this._data), this.setConfig({ accessors: this._defaultAccessors })));
  }
  getConfig() {
    return this._config;
  }
  remove() {
    this.search.destroy();
  }
  setListState(s3) {
    this.search.setListState(s3);
  }
  clearInput() {
    this.search.clearInput();
  }
  _onSelectResult(s3) {
    var t3, e4;
    this._cosmograph.pause(), this._cosmograph.zoomToNode(s3), this._cosmograph.selectNode(s3), null === (e4 = (t3 = this._config).onSelectResult) || void 0 === e4 || e4.call(t3, s3);
  }
  _createSearchConfig(s3) {
    return { ...s3, events: { onSelect: this._onSelect.bind(this), onSearch: this._onSearch.bind(this), onEnter: this._onEnter.bind(this), onAccessorSelect: this._onAccessorSelect.bind(this) } };
  }
};

// node_modules/@cosmograph/cosmograph/modules/cosmograph/types.js
var n2;
!(function(n3) {
  n3.Nodes = "nodes", n3.Links = "links";
})(n2 || (n2 = {}));

// node_modules/@cosmograph/cosmograph/modules/timeline/config.js
var s = { accessor: (o5) => o5.date, filterType: n2.Links };

// node_modules/@cosmograph/cosmograph/modules/timeline/index.js
var s2 = class {
  constructor(s3, o5, a3) {
    this._config = {}, this.playAnimation = () => {
      this.timeline.playAnimation();
    }, this.pauseAnimation = () => {
      this.timeline.pauseAnimation();
    }, this.stopAnimation = () => {
      this.timeline.stopAnimation();
    }, this._onBrush = (i4, t3) => {
      var e4, n3;
      this._applyFilter(i4), null === (n3 = (e4 = this._config).onSelection) || void 0 === n3 || n3.call(e4, i4, t3);
    }, this._onBarHover = (...i4) => {
      var t3, e4;
      null === (e4 = (t3 = this._config).onBarHover) || void 0 === e4 || e4.call(t3, ...i4);
    }, this._onAnimationPlay = (...i4) => {
      var t3, e4;
      null === (e4 = (t3 = this._config).onAnimationPlay) || void 0 === e4 || e4.call(t3, ...i4);
    }, this._onAnimationPause = (...i4) => {
      var t3, e4;
      null === (e4 = (t3 = this._config).onAnimationPause) || void 0 === e4 || e4.call(t3, ...i4);
    }, this._config = a(s, null != a3 ? a3 : {}), this.timeline = new p(o5, this._createTimelineConfig(a3)), this._cosmograph = s3, this._filter = this._config.filterType === n2.Nodes ? this._cosmograph.addNodesFilter() : this._cosmograph.addLinksFilter(), this._filter.onDataAdded = () => {
      this._updateData();
    }, this._updateDimension(), this._updateData();
  }
  setConfig(t3) {
    var e4, s3;
    const o5 = a(s, null != t3 ? t3 : {});
    this.timeline.setConfig(this._createTimelineConfig(t3)), (null === (e4 = this._config.accessor) || void 0 === e4 ? void 0 : e4.toString()) !== (null === (s3 = o5.accessor) || void 0 === s3 ? void 0 : s3.toString()) && this._updateData(), this._config = o5;
  }
  getCurrentSelection() {
    return this.timeline.getCurrentSelection();
  }
  getCurrentSelectionInPixels() {
    return this.timeline.getCurrentSelectionInPixels();
  }
  getBarWidth() {
    return this.timeline.getBarWidth();
  }
  getIsAnimationRunning() {
    return this.timeline.getIsAnimationRunning();
  }
  setSelection(i4) {
    this.timeline.setSelection(i4);
  }
  setSelectionInPixels(i4) {
    this.timeline.setSelectionInPixels(i4);
  }
  _updateData() {
    const i4 = this._filter.getAllValues();
    i4 && this.timeline.setTimeData(i4), this.timeline.render(), this.timeline.resize();
  }
  _updateDimension() {
    const { _config: { accessor: i4 }, _filter: t3 } = this;
    t3.setAccessor(i4);
  }
  _applyFilter(i4) {
    const { _filter: t3 } = this;
    i4 ? t3.applyFilter(((t4) => t4 >= i4[0] && t4 <= i4[1])) : t3.clear();
  }
  getConfig() {
    return this._config;
  }
  remove() {
    this.timeline.destroy();
  }
  _createTimelineConfig(i4) {
    return { ...i4, events: { onBrush: this._onBrush.bind(this), onBarHover: this._onBarHover.bind(this), onAnimationPlay: this._onAnimationPlay.bind(this), onAnimationPause: this._onAnimationPause.bind(this) } };
  }
};

// node_modules/@cosmograph/cosmograph/modules/histogram/config.js
var t2 = { accessor: (o5) => o5.value, customExtent: void 0, data: void 0, filterFunction: void 0, filterType: n2.Nodes, onSelection: void 0, highlightCrossfiltered: true };

// node_modules/@cosmograph/cosmograph/modules/histogram/index.js
var o4 = class {
  constructor(o5, r, a3) {
    this._onBrush = (t3, i4) => {
      var e4, s3;
      this._applyFilter(t3), null === (s3 = (e4 = this._config).onSelection) || void 0 === s3 || s3.call(e4, t3, i4);
    }, this._onBarHover = (...t3) => {
      var i4, e4;
      null === (e4 = (i4 = this._config).onBarHover) || void 0 === e4 || e4.call(i4, ...t3);
    }, this._cosmograph = o5, this._config = a(t2, null != a3 ? a3 : {}), this._histogram = new d(r, this._createHistogramConfig(a3)), this._filter = this._config.filterType === n2.Nodes ? this._cosmograph.addNodesFilter() : this._cosmograph.addLinksFilter(), this._filter.onDataAdded = () => {
      this._updateData();
    }, this._filter.onFiltered = () => {
      this._config.highlightCrossfiltered && this._updateDynamicData();
    }, this._updateDimension(), this._updateData();
  }
  setConfig(i4) {
    const e4 = a(t2, null != i4 ? i4 : {});
    this._histogram.setConfig(this._createHistogramConfig(i4)), e4.accessor === this._config.accessor && e4.data === this._config.data && e4.filterFunction === this._config.filterFunction || (this._updateDimension(), this._updateData(), this.setSelection()), this._config = e4;
  }
  getCurrentSelection() {
    return this._histogram.getCurrentSelection;
  }
  getCurrentSelectionInPixels() {
    return this._histogram.getCurrentSelectionInPixels;
  }
  getBarWidth() {
    return this._histogram.getBarWidth();
  }
  setSelection(t3) {
    this._histogram.setSelection(t3);
  }
  getConfig() {
    return this._config;
  }
  remove() {
    this._histogram.destroy();
  }
  _createHistogramConfig(t3) {
    return { ...t3, events: { onBrush: this._onBrush.bind(this), onBarHover: this._onBarHover.bind(this) } };
  }
  _updateDimension() {
    const { _config: { accessor: t3, filterFunction: i4, data: s3, filterType: o5 }, _filter: r } = this;
    if (!t3) return;
    i4 && s3 ? o5 === n2.Nodes ? r.setAccessor(((t4) => t4.id)) : r.setAccessor(((t4) => [t4.source, t4.target])) : r.setAccessor(t3);
  }
  _applyFilter(t3) {
    const { _filter: i4, _config: { filterFunction: s3, data: o5, filterType: r } } = this;
    if (t3) {
      if (s3 && o5) {
        const a3 = i4.getFilteredRecords();
        if (r === n2.Nodes) {
          const e4 = s3(t3, o5, a3), r2 = new Set(e4.map(((t4) => t4.id)));
          i4.applyFilter(((t4) => r2.has(t4)));
        } else {
          const e4 = s3(t3, o5, a3), r2 = new Set(e4.map(((t4) => [t4.source, t4.target])).flat());
          i4.applyFilter(((t4) => {
            const i5 = null == t4 ? void 0 : t4[0], e5 = null == t4 ? void 0 : t4[1];
            return r2.has(i5) && r2.has(e5);
          }));
        }
      } else i4.applyFilter(((i5) => i5 >= t3[0] && i5 <= t3[1]));
    } else i4.clear();
  }
  _updateData() {
    const { _config: { data: t3, filterFunction: i4, accessor: e4 } } = this, s3 = i4 && t3 && e4 ? t3.map(e4) : this._filter.getAllValues();
    s3 && this._histogram.setHistogramData(s3, this._config.customExtent);
  }
  _updateDynamicData() {
    const t3 = this._filter.getFilteredValues();
    this._histogram.setHighlightedData(t3);
  }
};
export {
  h as Cosmograph,
  o4 as CosmographHistogram,
  i3 as CosmographSearch,
  s2 as CosmographTimeline
};
//# sourceMappingURL=@cosmograph_cosmograph.js.map
