{
  "version": 3,
  "sources": ["../../regl/dist/regl.unchecked.js", "../../seedrandom/lib/alea.js", "../../seedrandom/lib/xor128.js", "../../seedrandom/lib/xorwow.js", "../../seedrandom/lib/xorshift7.js", "../../seedrandom/lib/xor4096.js", "../../seedrandom/lib/tychei.js", "browser-external:crypto", "../../seedrandom/seedrandom.js", "../../seedrandom/index.js", "../../gl-matrix/esm/common.js", "../../gl-matrix/esm/mat3.js", "../../gl-matrix/esm/vec3.js", "../../gl-matrix/esm/vec4.js", "../../gl-matrix/esm/quat.js", "../../gl-matrix/esm/vec2.js", "../../random/src/rng.ts", "../../random/src/generators/function.ts", "../../random/src/rng-factory.ts", "../../random/src/distributions/uniform.ts", "../../random/src/validation.ts", "../../random/src/distributions/uniform-int.ts", "../../random/src/distributions/uniform-boolean.ts", "../../random/src/distributions/normal.ts", "../../random/src/distributions/log-normal.ts", "../../random/src/distributions/bernoulli.ts", "../../random/src/distributions/binomial.ts", "../../random/src/distributions/geometric.ts", "../../random/src/distributions/poisson.ts", "../../random/src/distributions/exponential.ts", "../../random/src/distributions/irwin-hall.ts", "../../random/src/distributions/bates.ts", "../../random/src/distributions/pareto.ts", "../../random/src/generators/math-random.ts", "../../random/src/random.ts", "../../d3-zoom/src/constant.js", "../../d3-zoom/src/event.js", "../../d3-zoom/src/transform.js", "../../d3-zoom/src/noevent.js", "../../d3-zoom/src/zoom.js", "../../@cosmograph/cosmos/node_modules/gl-bench/dist/gl-bench.js"],
  "sourcesContent": ["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.createREGL = factory());\n}(this, (function () { 'use strict';\n\nvar extend = function (base, opts) {\n  var keys = Object.keys(opts)\n  for (var i = 0; i < keys.length; ++i) {\n    base[keys[i]] = opts[keys[i]]\n  }\n  return base\n}\n\nvar VARIABLE_COUNTER = 0\n\nvar DYN_FUNC = 0\nvar DYN_CONSTANT = 5\nvar DYN_ARRAY = 6\n\nfunction DynamicVariable (type, data) {\n  this.id = (VARIABLE_COUNTER++)\n  this.type = type\n  this.data = data\n}\n\nfunction escapeStr (str) {\n  return str.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n}\n\nfunction splitParts (str) {\n  if (str.length === 0) {\n    return []\n  }\n\n  var firstChar = str.charAt(0)\n  var lastChar = str.charAt(str.length - 1)\n\n  if (str.length > 1 &&\n      firstChar === lastChar &&\n      (firstChar === '\"' || firstChar === \"'\")) {\n    return ['\"' + escapeStr(str.substr(1, str.length - 2)) + '\"']\n  }\n\n  var parts = /\\[(false|true|null|\\d+|'[^']*'|\"[^\"]*\")\\]/.exec(str)\n  if (parts) {\n    return (\n      splitParts(str.substr(0, parts.index))\n        .concat(splitParts(parts[1]))\n        .concat(splitParts(str.substr(parts.index + parts[0].length)))\n    )\n  }\n\n  var subparts = str.split('.')\n  if (subparts.length === 1) {\n    return ['\"' + escapeStr(str) + '\"']\n  }\n\n  var result = []\n  for (var i = 0; i < subparts.length; ++i) {\n    result = result.concat(splitParts(subparts[i]))\n  }\n  return result\n}\n\nfunction toAccessorString (str) {\n  return '[' + splitParts(str).join('][') + ']'\n}\n\nfunction defineDynamic (type, data) {\n  return new DynamicVariable(type, toAccessorString(data + ''))\n}\n\nfunction isDynamic (x) {\n  return (typeof x === 'function' && !x._reglType) || (x instanceof DynamicVariable)\n}\n\nfunction unbox (x, path) {\n  if (typeof x === 'function') {\n    return new DynamicVariable(DYN_FUNC, x)\n  } else if (typeof x === 'number' || typeof x === 'boolean') {\n    return new DynamicVariable(DYN_CONSTANT, x)\n  } else if (Array.isArray(x)) {\n    return new DynamicVariable(DYN_ARRAY, x.map(function (y, i) { return unbox(y, path + '[' + i + ']') }))\n  } else if (x instanceof DynamicVariable) {\n    return x\n  }\n  \n}\n\nvar dynamic = {\n  DynamicVariable: DynamicVariable,\n  define: defineDynamic,\n  isDynamic: isDynamic,\n  unbox: unbox,\n  accessor: toAccessorString\n};\n\n/* globals requestAnimationFrame, cancelAnimationFrame */\nvar raf = {\n  next: typeof requestAnimationFrame === 'function'\n    ? function (cb) { return requestAnimationFrame(cb) }\n    : function (cb) { return setTimeout(cb, 16) },\n  cancel: typeof cancelAnimationFrame === 'function'\n    ? function (raf) { return cancelAnimationFrame(raf) }\n    : clearTimeout\n};\n\n/* globals performance */\nvar clock = (typeof performance !== 'undefined' && performance.now)\n    ? function () { return performance.now() }\n    : function () { return +(new Date()) };\n\nfunction createStringStore () {\n  var stringIds = { '': 0 }\n  var stringValues = ['']\n  return {\n    id: function (str) {\n      var result = stringIds[str]\n      if (result) {\n        return result\n      }\n      result = stringIds[str] = stringValues.length\n      stringValues.push(str)\n      return result\n    },\n\n    str: function (id) {\n      return stringValues[id]\n    }\n  }\n}\n\n// Context and canvas creation helper functions\n\nfunction createCanvas (element, onDone, pixelRatio) {\n  var canvas = document.createElement('canvas')\n  extend(canvas.style, {\n    border: 0,\n    margin: 0,\n    padding: 0,\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%'\n  })\n  element.appendChild(canvas)\n\n  if (element === document.body) {\n    canvas.style.position = 'absolute'\n    extend(element.style, {\n      margin: 0,\n      padding: 0\n    })\n  }\n\n  function resize () {\n    var w = window.innerWidth\n    var h = window.innerHeight\n    if (element !== document.body) {\n      var bounds = canvas.getBoundingClientRect()\n      w = bounds.right - bounds.left\n      h = bounds.bottom - bounds.top\n    }\n    canvas.width = pixelRatio * w\n    canvas.height = pixelRatio * h\n  }\n\n  var resizeObserver\n  if (element !== document.body && typeof ResizeObserver === 'function') {\n    // ignore 'ResizeObserver' is not defined\n    // eslint-disable-next-line\n    resizeObserver = new ResizeObserver(function () {\n      // setTimeout to avoid flicker\n      setTimeout(resize)\n    })\n    resizeObserver.observe(element)\n  } else {\n    window.addEventListener('resize', resize, false)\n  }\n\n  function onDestroy () {\n    if (resizeObserver) {\n      resizeObserver.disconnect()\n    } else {\n      window.removeEventListener('resize', resize)\n    }\n    element.removeChild(canvas)\n  }\n\n  resize()\n\n  return {\n    canvas: canvas,\n    onDestroy: onDestroy\n  }\n}\n\nfunction createContext (canvas, contextAttributes) {\n  function get (name) {\n    try {\n      return canvas.getContext(name, contextAttributes)\n    } catch (e) {\n      return null\n    }\n  }\n  return (\n    get('webgl') ||\n    get('experimental-webgl') ||\n    get('webgl-experimental')\n  )\n}\n\nfunction isHTMLElement (obj) {\n  return (\n    typeof obj.nodeName === 'string' &&\n    typeof obj.appendChild === 'function' &&\n    typeof obj.getBoundingClientRect === 'function'\n  )\n}\n\nfunction isWebGLContext (obj) {\n  return (\n    typeof obj.drawArrays === 'function' ||\n    typeof obj.drawElements === 'function'\n  )\n}\n\nfunction parseExtensions (input) {\n  if (typeof input === 'string') {\n    return input.split()\n  }\n  \n  return input\n}\n\nfunction getElement (desc) {\n  if (typeof desc === 'string') {\n    \n    return document.querySelector(desc)\n  }\n  return desc\n}\n\nfunction parseArgs (args_) {\n  var args = args_ || {}\n  var element, container, canvas, gl\n  var contextAttributes = {}\n  var extensions = []\n  var optionalExtensions = []\n  var pixelRatio = (typeof window === 'undefined' ? 1 : window.devicePixelRatio)\n  var profile = false\n  var cachedCode = {}\n  var onDone = function (err) {\n    if (err) {\n      \n    }\n  }\n  var onDestroy = function () {}\n  if (typeof args === 'string') {\n    \n    element = document.querySelector(args)\n    \n  } else if (typeof args === 'object') {\n    if (isHTMLElement(args)) {\n      element = args\n    } else if (isWebGLContext(args)) {\n      gl = args\n      canvas = gl.canvas\n    } else {\n      \n      if ('gl' in args) {\n        gl = args.gl\n      } else if ('canvas' in args) {\n        canvas = getElement(args.canvas)\n      } else if ('container' in args) {\n        container = getElement(args.container)\n      }\n      if ('attributes' in args) {\n        contextAttributes = args.attributes\n        \n      }\n      if ('extensions' in args) {\n        extensions = parseExtensions(args.extensions)\n      }\n      if ('optionalExtensions' in args) {\n        optionalExtensions = parseExtensions(args.optionalExtensions)\n      }\n      if ('onDone' in args) {\n        \n        onDone = args.onDone\n      }\n      if ('profile' in args) {\n        profile = !!args.profile\n      }\n      if ('pixelRatio' in args) {\n        pixelRatio = +args.pixelRatio\n        \n      }\n      if ('cachedCode' in args) {\n        \n        cachedCode = args.cachedCode\n      }\n    }\n  } else {\n    \n  }\n\n  if (element) {\n    if (element.nodeName.toLowerCase() === 'canvas') {\n      canvas = element\n    } else {\n      container = element\n    }\n  }\n\n  if (!gl) {\n    if (!canvas) {\n      \n      var result = createCanvas(container || document.body, onDone, pixelRatio)\n      if (!result) {\n        return null\n      }\n      canvas = result.canvas\n      onDestroy = result.onDestroy\n    }\n    // workaround for chromium bug, premultiplied alpha value is platform dependent\n    if (contextAttributes.premultipliedAlpha === undefined) contextAttributes.premultipliedAlpha = true\n    gl = createContext(canvas, contextAttributes)\n  }\n\n  if (!gl) {\n    onDestroy()\n    onDone('webgl not supported, try upgrading your browser or graphics drivers http://get.webgl.org')\n    return null\n  }\n\n  return {\n    gl: gl,\n    canvas: canvas,\n    container: container,\n    extensions: extensions,\n    optionalExtensions: optionalExtensions,\n    pixelRatio: pixelRatio,\n    profile: profile,\n    cachedCode: cachedCode,\n    onDone: onDone,\n    onDestroy: onDestroy\n  }\n}\n\nfunction createExtensionCache (gl, config) {\n  var extensions = {}\n\n  function tryLoadExtension (name_) {\n    \n    var name = name_.toLowerCase()\n    var ext\n    try {\n      ext = extensions[name] = gl.getExtension(name)\n    } catch (e) {}\n    return !!ext\n  }\n\n  for (var i = 0; i < config.extensions.length; ++i) {\n    var name = config.extensions[i]\n    if (!tryLoadExtension(name)) {\n      config.onDestroy()\n      config.onDone('\"' + name + '\" extension is not supported by the current WebGL context, try upgrading your system or a different browser')\n      return null\n    }\n  }\n\n  config.optionalExtensions.forEach(tryLoadExtension)\n\n  return {\n    extensions: extensions,\n    restore: function () {\n      Object.keys(extensions).forEach(function (name) {\n        if (extensions[name] && !tryLoadExtension(name)) {\n          throw new Error('(regl): error restoring extension ' + name)\n        }\n      })\n    }\n  }\n}\n\nfunction loop (n, f) {\n  var result = Array(n)\n  for (var i = 0; i < n; ++i) {\n    result[i] = f(i)\n  }\n  return result\n}\n\nvar GL_BYTE = 5120\nvar GL_UNSIGNED_BYTE$1 = 5121\nvar GL_SHORT = 5122\nvar GL_UNSIGNED_SHORT = 5123\nvar GL_INT = 5124\nvar GL_UNSIGNED_INT = 5125\nvar GL_FLOAT$1 = 5126\n\nfunction nextPow16 (v) {\n  for (var i = 16; i <= (1 << 28); i *= 16) {\n    if (v <= i) {\n      return i\n    }\n  }\n  return 0\n}\n\nfunction log2 (v) {\n  var r, shift\n  r = (v > 0xFFFF) << 4\n  v >>>= r\n  shift = (v > 0xFF) << 3\n  v >>>= shift; r |= shift\n  shift = (v > 0xF) << 2\n  v >>>= shift; r |= shift\n  shift = (v > 0x3) << 1\n  v >>>= shift; r |= shift\n  return r | (v >> 1)\n}\n\nfunction createPool () {\n  var bufferPool = loop(8, function () {\n    return []\n  })\n\n  function alloc (n) {\n    var sz = nextPow16(n)\n    var bin = bufferPool[log2(sz) >> 2]\n    if (bin.length > 0) {\n      return bin.pop()\n    }\n    return new ArrayBuffer(sz)\n  }\n\n  function free (buf) {\n    bufferPool[log2(buf.byteLength) >> 2].push(buf)\n  }\n\n  function allocType (type, n) {\n    var result = null\n    switch (type) {\n      case GL_BYTE:\n        result = new Int8Array(alloc(n), 0, n)\n        break\n      case GL_UNSIGNED_BYTE$1:\n        result = new Uint8Array(alloc(n), 0, n)\n        break\n      case GL_SHORT:\n        result = new Int16Array(alloc(2 * n), 0, n)\n        break\n      case GL_UNSIGNED_SHORT:\n        result = new Uint16Array(alloc(2 * n), 0, n)\n        break\n      case GL_INT:\n        result = new Int32Array(alloc(4 * n), 0, n)\n        break\n      case GL_UNSIGNED_INT:\n        result = new Uint32Array(alloc(4 * n), 0, n)\n        break\n      case GL_FLOAT$1:\n        result = new Float32Array(alloc(4 * n), 0, n)\n        break\n      default:\n        return null\n    }\n    if (result.length !== n) {\n      return result.subarray(0, n)\n    }\n    return result\n  }\n\n  function freeType (array) {\n    free(array.buffer)\n  }\n\n  return {\n    alloc: alloc,\n    free: free,\n    allocType: allocType,\n    freeType: freeType\n  }\n}\n\nvar pool = createPool()\n\n// zero pool for initial zero data\npool.zero = createPool()\n\nvar GL_SUBPIXEL_BITS = 0x0D50\nvar GL_RED_BITS = 0x0D52\nvar GL_GREEN_BITS = 0x0D53\nvar GL_BLUE_BITS = 0x0D54\nvar GL_ALPHA_BITS = 0x0D55\nvar GL_DEPTH_BITS = 0x0D56\nvar GL_STENCIL_BITS = 0x0D57\n\nvar GL_ALIASED_POINT_SIZE_RANGE = 0x846D\nvar GL_ALIASED_LINE_WIDTH_RANGE = 0x846E\n\nvar GL_MAX_TEXTURE_SIZE = 0x0D33\nvar GL_MAX_VIEWPORT_DIMS = 0x0D3A\nvar GL_MAX_VERTEX_ATTRIBS = 0x8869\nvar GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB\nvar GL_MAX_VARYING_VECTORS = 0x8DFC\nvar GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D\nvar GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C\nvar GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872\nvar GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD\nvar GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C\nvar GL_MAX_RENDERBUFFER_SIZE = 0x84E8\n\nvar GL_VENDOR = 0x1F00\nvar GL_RENDERER = 0x1F01\nvar GL_VERSION = 0x1F02\nvar GL_SHADING_LANGUAGE_VERSION = 0x8B8C\n\nvar GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF\n\nvar GL_MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF\nvar GL_MAX_DRAW_BUFFERS_WEBGL = 0x8824\n\nvar GL_TEXTURE_2D = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP = 0x8513\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515\nvar GL_TEXTURE0 = 0x84C0\nvar GL_RGBA = 0x1908\nvar GL_FLOAT = 0x1406\nvar GL_UNSIGNED_BYTE = 0x1401\nvar GL_FRAMEBUFFER = 0x8D40\nvar GL_FRAMEBUFFER_COMPLETE = 0x8CD5\nvar GL_COLOR_ATTACHMENT0 = 0x8CE0\nvar GL_COLOR_BUFFER_BIT$1 = 0x4000\n\nvar wrapLimits = function (gl, extensions) {\n  var maxAnisotropic = 1\n  if (extensions.ext_texture_filter_anisotropic) {\n    maxAnisotropic = gl.getParameter(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n  }\n\n  var maxDrawbuffers = 1\n  var maxColorAttachments = 1\n  if (extensions.webgl_draw_buffers) {\n    maxDrawbuffers = gl.getParameter(GL_MAX_DRAW_BUFFERS_WEBGL)\n    maxColorAttachments = gl.getParameter(GL_MAX_COLOR_ATTACHMENTS_WEBGL)\n  }\n\n  // detect if reading float textures is available (Safari doesn't support)\n  var readFloat = !!extensions.oes_texture_float\n  if (readFloat) {\n    var readFloatTexture = gl.createTexture()\n    gl.bindTexture(GL_TEXTURE_2D, readFloatTexture)\n    gl.texImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 1, 1, 0, GL_RGBA, GL_FLOAT, null)\n\n    var fbo = gl.createFramebuffer()\n    gl.bindFramebuffer(GL_FRAMEBUFFER, fbo)\n    gl.framebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, readFloatTexture, 0)\n    gl.bindTexture(GL_TEXTURE_2D, null)\n\n    if (gl.checkFramebufferStatus(GL_FRAMEBUFFER) !== GL_FRAMEBUFFER_COMPLETE) readFloat = false\n\n    else {\n      gl.viewport(0, 0, 1, 1)\n      gl.clearColor(1.0, 0.0, 0.0, 1.0)\n      gl.clear(GL_COLOR_BUFFER_BIT$1)\n      var pixels = pool.allocType(GL_FLOAT, 4)\n      gl.readPixels(0, 0, 1, 1, GL_RGBA, GL_FLOAT, pixels)\n\n      if (gl.getError()) readFloat = false\n      else {\n        gl.deleteFramebuffer(fbo)\n        gl.deleteTexture(readFloatTexture)\n\n        readFloat = pixels[0] === 1.0\n      }\n\n      pool.freeType(pixels)\n    }\n  }\n\n  // detect non power of two cube textures support (IE doesn't support)\n  var isIE = typeof navigator !== 'undefined' && (/MSIE/.test(navigator.userAgent) || /Trident\\//.test(navigator.appVersion) || /Edge/.test(navigator.userAgent))\n\n  var npotTextureCube = true\n\n  if (!isIE) {\n    var cubeTexture = gl.createTexture()\n    var data = pool.allocType(GL_UNSIGNED_BYTE, 36)\n    gl.activeTexture(GL_TEXTURE0)\n    gl.bindTexture(GL_TEXTURE_CUBE_MAP, cubeTexture)\n    gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X, 0, GL_RGBA, 3, 3, 0, GL_RGBA, GL_UNSIGNED_BYTE, data)\n    pool.freeType(data)\n    gl.bindTexture(GL_TEXTURE_CUBE_MAP, null)\n    gl.deleteTexture(cubeTexture)\n    npotTextureCube = !gl.getError()\n  }\n\n  return {\n    // drawing buffer bit depth\n    colorBits: [\n      gl.getParameter(GL_RED_BITS),\n      gl.getParameter(GL_GREEN_BITS),\n      gl.getParameter(GL_BLUE_BITS),\n      gl.getParameter(GL_ALPHA_BITS)\n    ],\n    depthBits: gl.getParameter(GL_DEPTH_BITS),\n    stencilBits: gl.getParameter(GL_STENCIL_BITS),\n    subpixelBits: gl.getParameter(GL_SUBPIXEL_BITS),\n\n    // supported extensions\n    extensions: Object.keys(extensions).filter(function (ext) {\n      return !!extensions[ext]\n    }),\n\n    // max aniso samples\n    maxAnisotropic: maxAnisotropic,\n\n    // max draw buffers\n    maxDrawbuffers: maxDrawbuffers,\n    maxColorAttachments: maxColorAttachments,\n\n    // point and line size ranges\n    pointSizeDims: gl.getParameter(GL_ALIASED_POINT_SIZE_RANGE),\n    lineWidthDims: gl.getParameter(GL_ALIASED_LINE_WIDTH_RANGE),\n    maxViewportDims: gl.getParameter(GL_MAX_VIEWPORT_DIMS),\n    maxCombinedTextureUnits: gl.getParameter(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS),\n    maxCubeMapSize: gl.getParameter(GL_MAX_CUBE_MAP_TEXTURE_SIZE),\n    maxRenderbufferSize: gl.getParameter(GL_MAX_RENDERBUFFER_SIZE),\n    maxTextureUnits: gl.getParameter(GL_MAX_TEXTURE_IMAGE_UNITS),\n    maxTextureSize: gl.getParameter(GL_MAX_TEXTURE_SIZE),\n    maxAttributes: gl.getParameter(GL_MAX_VERTEX_ATTRIBS),\n    maxVertexUniforms: gl.getParameter(GL_MAX_VERTEX_UNIFORM_VECTORS),\n    maxVertexTextureUnits: gl.getParameter(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS),\n    maxVaryingVectors: gl.getParameter(GL_MAX_VARYING_VECTORS),\n    maxFragmentUniforms: gl.getParameter(GL_MAX_FRAGMENT_UNIFORM_VECTORS),\n\n    // vendor info\n    glsl: gl.getParameter(GL_SHADING_LANGUAGE_VERSION),\n    renderer: gl.getParameter(GL_RENDERER),\n    vendor: gl.getParameter(GL_VENDOR),\n    version: gl.getParameter(GL_VERSION),\n\n    // quirks\n    readFloat: readFloat,\n    npotTextureCube: npotTextureCube\n  }\n}\n\nvar isTypedArray = function (x) {\n  return (\n    x instanceof Uint8Array ||\n    x instanceof Uint16Array ||\n    x instanceof Uint32Array ||\n    x instanceof Int8Array ||\n    x instanceof Int16Array ||\n    x instanceof Int32Array ||\n    x instanceof Float32Array ||\n    x instanceof Float64Array ||\n    x instanceof Uint8ClampedArray\n  )\n}\n\nfunction isNDArrayLike (obj) {\n  return (\n    !!obj &&\n    typeof obj === 'object' &&\n    Array.isArray(obj.shape) &&\n    Array.isArray(obj.stride) &&\n    typeof obj.offset === 'number' &&\n    obj.shape.length === obj.stride.length &&\n    (Array.isArray(obj.data) ||\n      isTypedArray(obj.data)))\n}\n\nvar values = function (obj) {\n  return Object.keys(obj).map(function (key) { return obj[key] })\n}\n\nvar flattenUtils = {\n  shape: arrayShape$1,\n  flatten: flattenArray\n};\n\nfunction flatten1D (array, nx, out) {\n  for (var i = 0; i < nx; ++i) {\n    out[i] = array[i]\n  }\n}\n\nfunction flatten2D (array, nx, ny, out) {\n  var ptr = 0\n  for (var i = 0; i < nx; ++i) {\n    var row = array[i]\n    for (var j = 0; j < ny; ++j) {\n      out[ptr++] = row[j]\n    }\n  }\n}\n\nfunction flatten3D (array, nx, ny, nz, out, ptr_) {\n  var ptr = ptr_\n  for (var i = 0; i < nx; ++i) {\n    var row = array[i]\n    for (var j = 0; j < ny; ++j) {\n      var col = row[j]\n      for (var k = 0; k < nz; ++k) {\n        out[ptr++] = col[k]\n      }\n    }\n  }\n}\n\nfunction flattenRec (array, shape, level, out, ptr) {\n  var stride = 1\n  for (var i = level + 1; i < shape.length; ++i) {\n    stride *= shape[i]\n  }\n  var n = shape[level]\n  if (shape.length - level === 4) {\n    var nx = shape[level + 1]\n    var ny = shape[level + 2]\n    var nz = shape[level + 3]\n    for (i = 0; i < n; ++i) {\n      flatten3D(array[i], nx, ny, nz, out, ptr)\n      ptr += stride\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      flattenRec(array[i], shape, level + 1, out, ptr)\n      ptr += stride\n    }\n  }\n}\n\nfunction flattenArray (array, shape, type, out_) {\n  var sz = 1\n  if (shape.length) {\n    for (var i = 0; i < shape.length; ++i) {\n      sz *= shape[i]\n    }\n  } else {\n    sz = 0\n  }\n  var out = out_ || pool.allocType(type, sz)\n  switch (shape.length) {\n    case 0:\n      break\n    case 1:\n      flatten1D(array, shape[0], out)\n      break\n    case 2:\n      flatten2D(array, shape[0], shape[1], out)\n      break\n    case 3:\n      flatten3D(array, shape[0], shape[1], shape[2], out, 0)\n      break\n    default:\n      flattenRec(array, shape, 0, out, 0)\n  }\n  return out\n}\n\nfunction arrayShape$1 (array_) {\n  var shape = []\n  for (var array = array_; array.length; array = array[0]) {\n    shape.push(array.length)\n  }\n  return shape\n}\n\nvar arrayTypes = {\n\t\"[object Int8Array]\": 5120,\n\t\"[object Int16Array]\": 5122,\n\t\"[object Int32Array]\": 5124,\n\t\"[object Uint8Array]\": 5121,\n\t\"[object Uint8ClampedArray]\": 5121,\n\t\"[object Uint16Array]\": 5123,\n\t\"[object Uint32Array]\": 5125,\n\t\"[object Float32Array]\": 5126,\n\t\"[object Float64Array]\": 5121,\n\t\"[object ArrayBuffer]\": 5121\n};\n\nvar int8 = 5120;\nvar int16 = 5122;\nvar int32 = 5124;\nvar uint8 = 5121;\nvar uint16 = 5123;\nvar uint32 = 5125;\nvar float = 5126;\nvar float32 = 5126;\nvar glTypes = {\n\tint8: int8,\n\tint16: int16,\n\tint32: int32,\n\tuint8: uint8,\n\tuint16: uint16,\n\tuint32: uint32,\n\tfloat: float,\n\tfloat32: float32\n};\n\nvar dynamic$1 = 35048;\nvar stream = 35040;\nvar usageTypes = {\n\tdynamic: dynamic$1,\n\tstream: stream,\n\t\"static\": 35044\n};\n\nvar arrayFlatten = flattenUtils.flatten\nvar arrayShape = flattenUtils.shape\n\nvar GL_STATIC_DRAW = 0x88E4\nvar GL_STREAM_DRAW = 0x88E0\n\nvar GL_UNSIGNED_BYTE$2 = 5121\nvar GL_FLOAT$2 = 5126\n\nvar DTYPES_SIZES = []\nDTYPES_SIZES[5120] = 1 // int8\nDTYPES_SIZES[5122] = 2 // int16\nDTYPES_SIZES[5124] = 4 // int32\nDTYPES_SIZES[5121] = 1 // uint8\nDTYPES_SIZES[5123] = 2 // uint16\nDTYPES_SIZES[5125] = 4 // uint32\nDTYPES_SIZES[5126] = 4 // float32\n\nfunction typedArrayCode (data) {\n  return arrayTypes[Object.prototype.toString.call(data)] | 0\n}\n\nfunction copyArray (out, inp) {\n  for (var i = 0; i < inp.length; ++i) {\n    out[i] = inp[i]\n  }\n}\n\nfunction transpose (\n  result, data, shapeX, shapeY, strideX, strideY, offset) {\n  var ptr = 0\n  for (var i = 0; i < shapeX; ++i) {\n    for (var j = 0; j < shapeY; ++j) {\n      result[ptr++] = data[strideX * i + strideY * j + offset]\n    }\n  }\n}\n\nfunction wrapBufferState (gl, stats, config, destroyBuffer) {\n  var bufferCount = 0\n  var bufferSet = {}\n\n  function REGLBuffer (type) {\n    this.id = bufferCount++\n    this.buffer = gl.createBuffer()\n    this.type = type\n    this.usage = GL_STATIC_DRAW\n    this.byteLength = 0\n    this.dimension = 1\n    this.dtype = GL_UNSIGNED_BYTE$2\n\n    this.persistentData = null\n\n    if (config.profile) {\n      this.stats = { size: 0 }\n    }\n  }\n\n  REGLBuffer.prototype.bind = function () {\n    gl.bindBuffer(this.type, this.buffer)\n  }\n\n  REGLBuffer.prototype.destroy = function () {\n    destroy(this)\n  }\n\n  var streamPool = []\n\n  function createStream (type, data) {\n    var buffer = streamPool.pop()\n    if (!buffer) {\n      buffer = new REGLBuffer(type)\n    }\n    buffer.bind()\n    initBufferFromData(buffer, data, GL_STREAM_DRAW, 0, 1, false)\n    return buffer\n  }\n\n  function destroyStream (stream$$1) {\n    streamPool.push(stream$$1)\n  }\n\n  function initBufferFromTypedArray (buffer, data, usage) {\n    buffer.byteLength = data.byteLength\n    gl.bufferData(buffer.type, data, usage)\n  }\n\n  function initBufferFromData (buffer, data, usage, dtype, dimension, persist) {\n    var shape\n    buffer.usage = usage\n    if (Array.isArray(data)) {\n      buffer.dtype = dtype || GL_FLOAT$2\n      if (data.length > 0) {\n        var flatData\n        if (Array.isArray(data[0])) {\n          shape = arrayShape(data)\n          var dim = 1\n          for (var i = 1; i < shape.length; ++i) {\n            dim *= shape[i]\n          }\n          buffer.dimension = dim\n          flatData = arrayFlatten(data, shape, buffer.dtype)\n          initBufferFromTypedArray(buffer, flatData, usage)\n          if (persist) {\n            buffer.persistentData = flatData\n          } else {\n            pool.freeType(flatData)\n          }\n        } else if (typeof data[0] === 'number') {\n          buffer.dimension = dimension\n          var typedData = pool.allocType(buffer.dtype, data.length)\n          copyArray(typedData, data)\n          initBufferFromTypedArray(buffer, typedData, usage)\n          if (persist) {\n            buffer.persistentData = typedData\n          } else {\n            pool.freeType(typedData)\n          }\n        } else if (isTypedArray(data[0])) {\n          buffer.dimension = data[0].length\n          buffer.dtype = dtype || typedArrayCode(data[0]) || GL_FLOAT$2\n          flatData = arrayFlatten(\n            data,\n            [data.length, data[0].length],\n            buffer.dtype)\n          initBufferFromTypedArray(buffer, flatData, usage)\n          if (persist) {\n            buffer.persistentData = flatData\n          } else {\n            pool.freeType(flatData)\n          }\n        } else {\n          \n        }\n      }\n    } else if (isTypedArray(data)) {\n      buffer.dtype = dtype || typedArrayCode(data)\n      buffer.dimension = dimension\n      initBufferFromTypedArray(buffer, data, usage)\n      if (persist) {\n        buffer.persistentData = new Uint8Array(new Uint8Array(data.buffer))\n      }\n    } else if (isNDArrayLike(data)) {\n      shape = data.shape\n      var stride = data.stride\n      var offset = data.offset\n\n      var shapeX = 0\n      var shapeY = 0\n      var strideX = 0\n      var strideY = 0\n      if (shape.length === 1) {\n        shapeX = shape[0]\n        shapeY = 1\n        strideX = stride[0]\n        strideY = 0\n      } else if (shape.length === 2) {\n        shapeX = shape[0]\n        shapeY = shape[1]\n        strideX = stride[0]\n        strideY = stride[1]\n      } else {\n        \n      }\n\n      buffer.dtype = dtype || typedArrayCode(data.data) || GL_FLOAT$2\n      buffer.dimension = shapeY\n\n      var transposeData = pool.allocType(buffer.dtype, shapeX * shapeY)\n      transpose(transposeData,\n        data.data,\n        shapeX, shapeY,\n        strideX, strideY,\n        offset)\n      initBufferFromTypedArray(buffer, transposeData, usage)\n      if (persist) {\n        buffer.persistentData = transposeData\n      } else {\n        pool.freeType(transposeData)\n      }\n    } else if (data instanceof ArrayBuffer) {\n      buffer.dtype = GL_UNSIGNED_BYTE$2\n      buffer.dimension = dimension\n      initBufferFromTypedArray(buffer, data, usage)\n      if (persist) {\n        buffer.persistentData = new Uint8Array(new Uint8Array(data))\n      }\n    } else {\n      \n    }\n  }\n\n  function destroy (buffer) {\n    stats.bufferCount--\n\n    // remove attribute link\n    destroyBuffer(buffer)\n\n    var handle = buffer.buffer\n    \n    gl.deleteBuffer(handle)\n    buffer.buffer = null\n    delete bufferSet[buffer.id]\n  }\n\n  function createBuffer (options, type, deferInit, persistent) {\n    stats.bufferCount++\n\n    var buffer = new REGLBuffer(type)\n    bufferSet[buffer.id] = buffer\n\n    function reglBuffer (options) {\n      var usage = GL_STATIC_DRAW\n      var data = null\n      var byteLength = 0\n      var dtype = 0\n      var dimension = 1\n      if (Array.isArray(options) ||\n          isTypedArray(options) ||\n          isNDArrayLike(options) ||\n          options instanceof ArrayBuffer) {\n        data = options\n      } else if (typeof options === 'number') {\n        byteLength = options | 0\n      } else if (options) {\n        \n\n        if ('data' in options) {\n          \n          data = options.data\n        }\n\n        if ('usage' in options) {\n          \n          usage = usageTypes[options.usage]\n        }\n\n        if ('type' in options) {\n          \n          dtype = glTypes[options.type]\n        }\n\n        if ('dimension' in options) {\n          \n          dimension = options.dimension | 0\n        }\n\n        if ('length' in options) {\n          \n          byteLength = options.length | 0\n        }\n      }\n\n      buffer.bind()\n      if (!data) {\n        // #475\n        if (byteLength) gl.bufferData(buffer.type, byteLength, usage)\n        buffer.dtype = dtype || GL_UNSIGNED_BYTE$2\n        buffer.usage = usage\n        buffer.dimension = dimension\n        buffer.byteLength = byteLength\n      } else {\n        initBufferFromData(buffer, data, usage, dtype, dimension, persistent)\n      }\n\n      if (config.profile) {\n        buffer.stats.size = buffer.byteLength * DTYPES_SIZES[buffer.dtype]\n      }\n\n      return reglBuffer\n    }\n\n    function setSubData (data, offset) {\n      \n\n      gl.bufferSubData(buffer.type, offset, data)\n    }\n\n    function subdata (data, offset_) {\n      var offset = (offset_ || 0) | 0\n      var shape\n      buffer.bind()\n      if (isTypedArray(data) || data instanceof ArrayBuffer) {\n        setSubData(data, offset)\n      } else if (Array.isArray(data)) {\n        if (data.length > 0) {\n          if (typeof data[0] === 'number') {\n            var converted = pool.allocType(buffer.dtype, data.length)\n            copyArray(converted, data)\n            setSubData(converted, offset)\n            pool.freeType(converted)\n          } else if (Array.isArray(data[0]) || isTypedArray(data[0])) {\n            shape = arrayShape(data)\n            var flatData = arrayFlatten(data, shape, buffer.dtype)\n            setSubData(flatData, offset)\n            pool.freeType(flatData)\n          } else {\n            \n          }\n        }\n      } else if (isNDArrayLike(data)) {\n        shape = data.shape\n        var stride = data.stride\n\n        var shapeX = 0\n        var shapeY = 0\n        var strideX = 0\n        var strideY = 0\n        if (shape.length === 1) {\n          shapeX = shape[0]\n          shapeY = 1\n          strideX = stride[0]\n          strideY = 0\n        } else if (shape.length === 2) {\n          shapeX = shape[0]\n          shapeY = shape[1]\n          strideX = stride[0]\n          strideY = stride[1]\n        } else {\n          \n        }\n        var dtype = Array.isArray(data.data)\n          ? buffer.dtype\n          : typedArrayCode(data.data)\n\n        var transposeData = pool.allocType(dtype, shapeX * shapeY)\n        transpose(transposeData,\n          data.data,\n          shapeX, shapeY,\n          strideX, strideY,\n          data.offset)\n        setSubData(transposeData, offset)\n        pool.freeType(transposeData)\n      } else {\n        \n      }\n      return reglBuffer\n    }\n\n    if (!deferInit) {\n      reglBuffer(options)\n    }\n\n    reglBuffer._reglType = 'buffer'\n    reglBuffer._buffer = buffer\n    reglBuffer.subdata = subdata\n    if (config.profile) {\n      reglBuffer.stats = buffer.stats\n    }\n    reglBuffer.destroy = function () { destroy(buffer) }\n\n    return reglBuffer\n  }\n\n  function restoreBuffers () {\n    values(bufferSet).forEach(function (buffer) {\n      buffer.buffer = gl.createBuffer()\n      gl.bindBuffer(buffer.type, buffer.buffer)\n      gl.bufferData(\n        buffer.type, buffer.persistentData || buffer.byteLength, buffer.usage)\n    })\n  }\n\n  if (config.profile) {\n    stats.getTotalBufferSize = function () {\n      var total = 0\n      // TODO: Right now, the streams are not part of the total count.\n      Object.keys(bufferSet).forEach(function (key) {\n        total += bufferSet[key].stats.size\n      })\n      return total\n    }\n  }\n\n  return {\n    create: createBuffer,\n\n    createStream: createStream,\n    destroyStream: destroyStream,\n\n    clear: function () {\n      values(bufferSet).forEach(destroy)\n      streamPool.forEach(destroy)\n    },\n\n    getBuffer: function (wrapper) {\n      if (wrapper && wrapper._buffer instanceof REGLBuffer) {\n        return wrapper._buffer\n      }\n      return null\n    },\n\n    restore: restoreBuffers,\n\n    _initBuffer: initBufferFromData\n  }\n}\n\nvar points = 0;\nvar point = 0;\nvar lines = 1;\nvar line = 1;\nvar triangles = 4;\nvar triangle = 4;\nvar primTypes = {\n\tpoints: points,\n\tpoint: point,\n\tlines: lines,\n\tline: line,\n\ttriangles: triangles,\n\ttriangle: triangle,\n\t\"line loop\": 2,\n\t\"line strip\": 3,\n\t\"triangle strip\": 5,\n\t\"triangle fan\": 6\n};\n\nvar GL_POINTS = 0\nvar GL_LINES = 1\nvar GL_TRIANGLES = 4\n\nvar GL_BYTE$1 = 5120\nvar GL_UNSIGNED_BYTE$3 = 5121\nvar GL_SHORT$1 = 5122\nvar GL_UNSIGNED_SHORT$1 = 5123\nvar GL_INT$1 = 5124\nvar GL_UNSIGNED_INT$1 = 5125\n\nvar GL_ELEMENT_ARRAY_BUFFER = 34963\n\nvar GL_STREAM_DRAW$1 = 0x88E0\nvar GL_STATIC_DRAW$1 = 0x88E4\n\nfunction wrapElementsState (gl, extensions, bufferState, stats) {\n  var elementSet = {}\n  var elementCount = 0\n\n  var elementTypes = {\n    'uint8': GL_UNSIGNED_BYTE$3,\n    'uint16': GL_UNSIGNED_SHORT$1\n  }\n\n  if (extensions.oes_element_index_uint) {\n    elementTypes.uint32 = GL_UNSIGNED_INT$1\n  }\n\n  function REGLElementBuffer (buffer) {\n    this.id = elementCount++\n    elementSet[this.id] = this\n    this.buffer = buffer\n    this.primType = GL_TRIANGLES\n    this.vertCount = 0\n    this.type = 0\n  }\n\n  REGLElementBuffer.prototype.bind = function () {\n    this.buffer.bind()\n  }\n\n  var bufferPool = []\n\n  function createElementStream (data) {\n    var result = bufferPool.pop()\n    if (!result) {\n      result = new REGLElementBuffer(bufferState.create(\n        null,\n        GL_ELEMENT_ARRAY_BUFFER,\n        true,\n        false)._buffer)\n    }\n    initElements(result, data, GL_STREAM_DRAW$1, -1, -1, 0, 0)\n    return result\n  }\n\n  function destroyElementStream (elements) {\n    bufferPool.push(elements)\n  }\n\n  function initElements (\n    elements,\n    data,\n    usage,\n    prim,\n    count,\n    byteLength,\n    type) {\n    elements.buffer.bind()\n    var dtype\n    if (data) {\n      var predictedType = type\n      if (!type && (\n        !isTypedArray(data) ||\n         (isNDArrayLike(data) && !isTypedArray(data.data)))) {\n        predictedType = extensions.oes_element_index_uint\n          ? GL_UNSIGNED_INT$1\n          : GL_UNSIGNED_SHORT$1\n      }\n      bufferState._initBuffer(\n        elements.buffer,\n        data,\n        usage,\n        predictedType,\n        3)\n    } else {\n      gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, byteLength, usage)\n      elements.buffer.dtype = dtype || GL_UNSIGNED_BYTE$3\n      elements.buffer.usage = usage\n      elements.buffer.dimension = 3\n      elements.buffer.byteLength = byteLength\n    }\n\n    dtype = type\n    if (!type) {\n      switch (elements.buffer.dtype) {\n        case GL_UNSIGNED_BYTE$3:\n        case GL_BYTE$1:\n          dtype = GL_UNSIGNED_BYTE$3\n          break\n\n        case GL_UNSIGNED_SHORT$1:\n        case GL_SHORT$1:\n          dtype = GL_UNSIGNED_SHORT$1\n          break\n\n        case GL_UNSIGNED_INT$1:\n        case GL_INT$1:\n          dtype = GL_UNSIGNED_INT$1\n          break\n\n        default:\n          \n      }\n      elements.buffer.dtype = dtype\n    }\n    elements.type = dtype\n\n    // Check oes_element_index_uint extension\n    \n\n    // try to guess default primitive type and arguments\n    var vertCount = count\n    if (vertCount < 0) {\n      vertCount = elements.buffer.byteLength\n      if (dtype === GL_UNSIGNED_SHORT$1) {\n        vertCount >>= 1\n      } else if (dtype === GL_UNSIGNED_INT$1) {\n        vertCount >>= 2\n      }\n    }\n    elements.vertCount = vertCount\n\n    // try to guess primitive type from cell dimension\n    var primType = prim\n    if (prim < 0) {\n      primType = GL_TRIANGLES\n      var dimension = elements.buffer.dimension\n      if (dimension === 1) primType = GL_POINTS\n      if (dimension === 2) primType = GL_LINES\n      if (dimension === 3) primType = GL_TRIANGLES\n    }\n    elements.primType = primType\n  }\n\n  function destroyElements (elements) {\n    stats.elementsCount--\n\n    \n    delete elementSet[elements.id]\n    elements.buffer.destroy()\n    elements.buffer = null\n  }\n\n  function createElements (options, persistent) {\n    var buffer = bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true)\n    var elements = new REGLElementBuffer(buffer._buffer)\n    stats.elementsCount++\n\n    function reglElements (options) {\n      if (!options) {\n        buffer()\n        elements.primType = GL_TRIANGLES\n        elements.vertCount = 0\n        elements.type = GL_UNSIGNED_BYTE$3\n      } else if (typeof options === 'number') {\n        buffer(options)\n        elements.primType = GL_TRIANGLES\n        elements.vertCount = options | 0\n        elements.type = GL_UNSIGNED_BYTE$3\n      } else {\n        var data = null\n        var usage = GL_STATIC_DRAW$1\n        var primType = -1\n        var vertCount = -1\n        var byteLength = 0\n        var dtype = 0\n        if (Array.isArray(options) ||\n            isTypedArray(options) ||\n            isNDArrayLike(options)) {\n          data = options\n        } else {\n          \n          if ('data' in options) {\n            data = options.data\n            \n          }\n          if ('usage' in options) {\n            \n            usage = usageTypes[options.usage]\n          }\n          if ('primitive' in options) {\n            \n            primType = primTypes[options.primitive]\n          }\n          if ('count' in options) {\n            \n            vertCount = options.count | 0\n          }\n          if ('type' in options) {\n            \n            dtype = elementTypes[options.type]\n          }\n          if ('length' in options) {\n            byteLength = options.length | 0\n          } else {\n            byteLength = vertCount\n            if (dtype === GL_UNSIGNED_SHORT$1 || dtype === GL_SHORT$1) {\n              byteLength *= 2\n            } else if (dtype === GL_UNSIGNED_INT$1 || dtype === GL_INT$1) {\n              byteLength *= 4\n            }\n          }\n        }\n        initElements(\n          elements,\n          data,\n          usage,\n          primType,\n          vertCount,\n          byteLength,\n          dtype)\n      }\n\n      return reglElements\n    }\n\n    reglElements(options)\n\n    reglElements._reglType = 'elements'\n    reglElements._elements = elements\n    reglElements.subdata = function (data, offset) {\n      buffer.subdata(data, offset)\n      return reglElements\n    }\n    reglElements.destroy = function () {\n      destroyElements(elements)\n    }\n\n    return reglElements\n  }\n\n  return {\n    create: createElements,\n    createStream: createElementStream,\n    destroyStream: destroyElementStream,\n    getElements: function (elements) {\n      if (typeof elements === 'function' &&\n          elements._elements instanceof REGLElementBuffer) {\n        return elements._elements\n      }\n      return null\n    },\n    clear: function () {\n      values(elementSet).forEach(destroyElements)\n    }\n  }\n}\n\nvar FLOAT = new Float32Array(1)\nvar INT = new Uint32Array(FLOAT.buffer)\n\nvar GL_UNSIGNED_SHORT$3 = 5123\n\nfunction convertToHalfFloat (array) {\n  var ushorts = pool.allocType(GL_UNSIGNED_SHORT$3, array.length)\n\n  for (var i = 0; i < array.length; ++i) {\n    if (isNaN(array[i])) {\n      ushorts[i] = 0xffff\n    } else if (array[i] === Infinity) {\n      ushorts[i] = 0x7c00\n    } else if (array[i] === -Infinity) {\n      ushorts[i] = 0xfc00\n    } else {\n      FLOAT[0] = array[i]\n      var x = INT[0]\n\n      var sgn = (x >>> 31) << 15\n      var exp = ((x << 1) >>> 24) - 127\n      var frac = (x >> 13) & ((1 << 10) - 1)\n\n      if (exp < -24) {\n        // round non-representable denormals to 0\n        ushorts[i] = sgn\n      } else if (exp < -14) {\n        // handle denormals\n        var s = -14 - exp\n        ushorts[i] = sgn + ((frac + (1 << 10)) >> s)\n      } else if (exp > 15) {\n        // round overflow to +/- Infinity\n        ushorts[i] = sgn + 0x7c00\n      } else {\n        // otherwise convert directly\n        ushorts[i] = sgn + ((exp + 15) << 10) + frac\n      }\n    }\n  }\n\n  return ushorts\n}\n\nfunction isArrayLike (s) {\n  return Array.isArray(s) || isTypedArray(s)\n}\n\nvar GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3\n\nvar GL_TEXTURE_2D$1 = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP$1 = 0x8513\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 = 0x8515\n\nvar GL_RGBA$1 = 0x1908\nvar GL_ALPHA = 0x1906\nvar GL_RGB = 0x1907\nvar GL_LUMINANCE = 0x1909\nvar GL_LUMINANCE_ALPHA = 0x190A\n\nvar GL_RGBA4 = 0x8056\nvar GL_RGB5_A1 = 0x8057\nvar GL_RGB565 = 0x8D62\n\nvar GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033\nvar GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034\nvar GL_UNSIGNED_SHORT_5_6_5 = 0x8363\nvar GL_UNSIGNED_INT_24_8_WEBGL = 0x84FA\n\nvar GL_DEPTH_COMPONENT = 0x1902\nvar GL_DEPTH_STENCIL = 0x84F9\n\nvar GL_SRGB_EXT = 0x8C40\nvar GL_SRGB_ALPHA_EXT = 0x8C42\n\nvar GL_HALF_FLOAT_OES = 0x8D61\n\nvar GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0\nvar GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1\nvar GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2\nvar GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3\n\nvar GL_COMPRESSED_RGB_ATC_WEBGL = 0x8C92\nvar GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8C93\nvar GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87EE\n\nvar GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00\nvar GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01\nvar GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02\nvar GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03\n\nvar GL_COMPRESSED_RGB_ETC1_WEBGL = 0x8D64\n\nvar GL_UNSIGNED_BYTE$4 = 0x1401\nvar GL_UNSIGNED_SHORT$2 = 0x1403\nvar GL_UNSIGNED_INT$2 = 0x1405\nvar GL_FLOAT$3 = 0x1406\n\nvar GL_TEXTURE_WRAP_S = 0x2802\nvar GL_TEXTURE_WRAP_T = 0x2803\n\nvar GL_REPEAT = 0x2901\nvar GL_CLAMP_TO_EDGE = 0x812F\nvar GL_MIRRORED_REPEAT = 0x8370\n\nvar GL_TEXTURE_MAG_FILTER = 0x2800\nvar GL_TEXTURE_MIN_FILTER = 0x2801\n\nvar GL_NEAREST = 0x2600\nvar GL_LINEAR = 0x2601\nvar GL_NEAREST_MIPMAP_NEAREST = 0x2700\nvar GL_LINEAR_MIPMAP_NEAREST = 0x2701\nvar GL_NEAREST_MIPMAP_LINEAR = 0x2702\nvar GL_LINEAR_MIPMAP_LINEAR = 0x2703\n\nvar GL_GENERATE_MIPMAP_HINT = 0x8192\nvar GL_DONT_CARE = 0x1100\nvar GL_FASTEST = 0x1101\nvar GL_NICEST = 0x1102\n\nvar GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE\n\nvar GL_UNPACK_ALIGNMENT = 0x0CF5\nvar GL_UNPACK_FLIP_Y_WEBGL = 0x9240\nvar GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241\nvar GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243\n\nvar GL_BROWSER_DEFAULT_WEBGL = 0x9244\n\nvar GL_TEXTURE0$1 = 0x84C0\n\nvar MIPMAP_FILTERS = [\n  GL_NEAREST_MIPMAP_NEAREST,\n  GL_NEAREST_MIPMAP_LINEAR,\n  GL_LINEAR_MIPMAP_NEAREST,\n  GL_LINEAR_MIPMAP_LINEAR\n]\n\nvar CHANNELS_FORMAT = [\n  0,\n  GL_LUMINANCE,\n  GL_LUMINANCE_ALPHA,\n  GL_RGB,\n  GL_RGBA$1\n]\n\nvar FORMAT_CHANNELS = {}\nFORMAT_CHANNELS[GL_LUMINANCE] =\nFORMAT_CHANNELS[GL_ALPHA] =\nFORMAT_CHANNELS[GL_DEPTH_COMPONENT] = 1\nFORMAT_CHANNELS[GL_DEPTH_STENCIL] =\nFORMAT_CHANNELS[GL_LUMINANCE_ALPHA] = 2\nFORMAT_CHANNELS[GL_RGB] =\nFORMAT_CHANNELS[GL_SRGB_EXT] = 3\nFORMAT_CHANNELS[GL_RGBA$1] =\nFORMAT_CHANNELS[GL_SRGB_ALPHA_EXT] = 4\n\nfunction objectName (str) {\n  return '[object ' + str + ']'\n}\n\nvar CANVAS_CLASS = objectName('HTMLCanvasElement')\nvar OFFSCREENCANVAS_CLASS = objectName('OffscreenCanvas')\nvar CONTEXT2D_CLASS = objectName('CanvasRenderingContext2D')\nvar BITMAP_CLASS = objectName('ImageBitmap')\nvar IMAGE_CLASS = objectName('HTMLImageElement')\nvar VIDEO_CLASS = objectName('HTMLVideoElement')\n\nvar PIXEL_CLASSES = Object.keys(arrayTypes).concat([\n  CANVAS_CLASS,\n  OFFSCREENCANVAS_CLASS,\n  CONTEXT2D_CLASS,\n  BITMAP_CLASS,\n  IMAGE_CLASS,\n  VIDEO_CLASS\n])\n\n// for every texture type, store\n// the size in bytes.\nvar TYPE_SIZES = []\nTYPE_SIZES[GL_UNSIGNED_BYTE$4] = 1\nTYPE_SIZES[GL_FLOAT$3] = 4\nTYPE_SIZES[GL_HALF_FLOAT_OES] = 2\n\nTYPE_SIZES[GL_UNSIGNED_SHORT$2] = 2\nTYPE_SIZES[GL_UNSIGNED_INT$2] = 4\n\nvar FORMAT_SIZES_SPECIAL = []\nFORMAT_SIZES_SPECIAL[GL_RGBA4] = 2\nFORMAT_SIZES_SPECIAL[GL_RGB5_A1] = 2\nFORMAT_SIZES_SPECIAL[GL_RGB565] = 2\nFORMAT_SIZES_SPECIAL[GL_DEPTH_STENCIL] = 4\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_S3TC_DXT1_EXT] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT1_EXT] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT3_EXT] = 1\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT5_EXT] = 1\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ATC_WEBGL] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL] = 1\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL] = 1\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG] = 0.25\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG] = 0.5\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG] = 0.25\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ETC1_WEBGL] = 0.5\n\nfunction isNumericArray (arr) {\n  return (\n    Array.isArray(arr) &&\n    (arr.length === 0 ||\n    typeof arr[0] === 'number'))\n}\n\nfunction isRectArray (arr) {\n  if (!Array.isArray(arr)) {\n    return false\n  }\n  var width = arr.length\n  if (width === 0 || !isArrayLike(arr[0])) {\n    return false\n  }\n  return true\n}\n\nfunction classString (x) {\n  return Object.prototype.toString.call(x)\n}\n\nfunction isCanvasElement (object) {\n  return classString(object) === CANVAS_CLASS\n}\n\nfunction isOffscreenCanvas (object) {\n  return classString(object) === OFFSCREENCANVAS_CLASS\n}\n\nfunction isContext2D (object) {\n  return classString(object) === CONTEXT2D_CLASS\n}\n\nfunction isBitmap (object) {\n  return classString(object) === BITMAP_CLASS\n}\n\nfunction isImageElement (object) {\n  return classString(object) === IMAGE_CLASS\n}\n\nfunction isVideoElement (object) {\n  return classString(object) === VIDEO_CLASS\n}\n\nfunction isPixelData (object) {\n  if (!object) {\n    return false\n  }\n  var className = classString(object)\n  if (PIXEL_CLASSES.indexOf(className) >= 0) {\n    return true\n  }\n  return (\n    isNumericArray(object) ||\n    isRectArray(object) ||\n    isNDArrayLike(object))\n}\n\nfunction typedArrayCode$1 (data) {\n  return arrayTypes[Object.prototype.toString.call(data)] | 0\n}\n\nfunction convertData (result, data) {\n  var n = data.length\n  switch (result.type) {\n    case GL_UNSIGNED_BYTE$4:\n    case GL_UNSIGNED_SHORT$2:\n    case GL_UNSIGNED_INT$2:\n    case GL_FLOAT$3:\n      var converted = pool.allocType(result.type, n)\n      converted.set(data)\n      result.data = converted\n      break\n\n    case GL_HALF_FLOAT_OES:\n      result.data = convertToHalfFloat(data)\n      break\n\n    default:\n      \n  }\n}\n\nfunction preConvert (image, n) {\n  return pool.allocType(\n    image.type === GL_HALF_FLOAT_OES\n      ? GL_FLOAT$3\n      : image.type, n)\n}\n\nfunction postConvert (image, data) {\n  if (image.type === GL_HALF_FLOAT_OES) {\n    image.data = convertToHalfFloat(data)\n    pool.freeType(data)\n  } else {\n    image.data = data\n  }\n}\n\nfunction transposeData (image, array, strideX, strideY, strideC, offset) {\n  var w = image.width\n  var h = image.height\n  var c = image.channels\n  var n = w * h * c\n  var data = preConvert(image, n)\n\n  var p = 0\n  for (var i = 0; i < h; ++i) {\n    for (var j = 0; j < w; ++j) {\n      for (var k = 0; k < c; ++k) {\n        data[p++] = array[strideX * j + strideY * i + strideC * k + offset]\n      }\n    }\n  }\n\n  postConvert(image, data)\n}\n\nfunction getTextureSize (format, type, width, height, isMipmap, isCube) {\n  var s\n  if (typeof FORMAT_SIZES_SPECIAL[format] !== 'undefined') {\n    // we have a special array for dealing with weird color formats such as RGB5A1\n    s = FORMAT_SIZES_SPECIAL[format]\n  } else {\n    s = FORMAT_CHANNELS[format] * TYPE_SIZES[type]\n  }\n\n  if (isCube) {\n    s *= 6\n  }\n\n  if (isMipmap) {\n    // compute the total size of all the mipmaps.\n    var total = 0\n\n    var w = width\n    while (w >= 1) {\n      // we can only use mipmaps on a square image,\n      // so we can simply use the width and ignore the height:\n      total += s * w * w\n      w /= 2\n    }\n    return total\n  } else {\n    return s * width * height\n  }\n}\n\nfunction createTextureSet (\n  gl, extensions, limits, reglPoll, contextState, stats, config) {\n  // -------------------------------------------------------\n  // Initialize constants and parameter tables here\n  // -------------------------------------------------------\n  var mipmapHint = {\n    \"don't care\": GL_DONT_CARE,\n    'dont care': GL_DONT_CARE,\n    'nice': GL_NICEST,\n    'fast': GL_FASTEST\n  }\n\n  var wrapModes = {\n    'repeat': GL_REPEAT,\n    'clamp': GL_CLAMP_TO_EDGE,\n    'mirror': GL_MIRRORED_REPEAT\n  }\n\n  var magFilters = {\n    'nearest': GL_NEAREST,\n    'linear': GL_LINEAR\n  }\n\n  var minFilters = extend({\n    'mipmap': GL_LINEAR_MIPMAP_LINEAR,\n    'nearest mipmap nearest': GL_NEAREST_MIPMAP_NEAREST,\n    'linear mipmap nearest': GL_LINEAR_MIPMAP_NEAREST,\n    'nearest mipmap linear': GL_NEAREST_MIPMAP_LINEAR,\n    'linear mipmap linear': GL_LINEAR_MIPMAP_LINEAR\n  }, magFilters)\n\n  var colorSpace = {\n    'none': 0,\n    'browser': GL_BROWSER_DEFAULT_WEBGL\n  }\n\n  var textureTypes = {\n    'uint8': GL_UNSIGNED_BYTE$4,\n    'rgba4': GL_UNSIGNED_SHORT_4_4_4_4,\n    'rgb565': GL_UNSIGNED_SHORT_5_6_5,\n    'rgb5 a1': GL_UNSIGNED_SHORT_5_5_5_1\n  }\n\n  var textureFormats = {\n    'alpha': GL_ALPHA,\n    'luminance': GL_LUMINANCE,\n    'luminance alpha': GL_LUMINANCE_ALPHA,\n    'rgb': GL_RGB,\n    'rgba': GL_RGBA$1,\n    'rgba4': GL_RGBA4,\n    'rgb5 a1': GL_RGB5_A1,\n    'rgb565': GL_RGB565\n  }\n\n  var compressedTextureFormats = {}\n\n  if (extensions.ext_srgb) {\n    textureFormats.srgb = GL_SRGB_EXT\n    textureFormats.srgba = GL_SRGB_ALPHA_EXT\n  }\n\n  if (extensions.oes_texture_float) {\n    textureTypes.float32 = textureTypes.float = GL_FLOAT$3\n  }\n\n  if (extensions.oes_texture_half_float) {\n    textureTypes['float16'] = textureTypes['half float'] = GL_HALF_FLOAT_OES\n  }\n\n  if (extensions.webgl_depth_texture) {\n    extend(textureFormats, {\n      'depth': GL_DEPTH_COMPONENT,\n      'depth stencil': GL_DEPTH_STENCIL\n    })\n\n    extend(textureTypes, {\n      'uint16': GL_UNSIGNED_SHORT$2,\n      'uint32': GL_UNSIGNED_INT$2,\n      'depth stencil': GL_UNSIGNED_INT_24_8_WEBGL\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_s3tc) {\n    extend(compressedTextureFormats, {\n      'rgb s3tc dxt1': GL_COMPRESSED_RGB_S3TC_DXT1_EXT,\n      'rgba s3tc dxt1': GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,\n      'rgba s3tc dxt3': GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,\n      'rgba s3tc dxt5': GL_COMPRESSED_RGBA_S3TC_DXT5_EXT\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_atc) {\n    extend(compressedTextureFormats, {\n      'rgb atc': GL_COMPRESSED_RGB_ATC_WEBGL,\n      'rgba atc explicit alpha': GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n      'rgba atc interpolated alpha': GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_pvrtc) {\n    extend(compressedTextureFormats, {\n      'rgb pvrtc 4bppv1': GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\n      'rgb pvrtc 2bppv1': GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,\n      'rgba pvrtc 4bppv1': GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n      'rgba pvrtc 2bppv1': GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\n    })\n  }\n\n  if (extensions.webgl_compressed_texture_etc1) {\n    compressedTextureFormats['rgb etc1'] = GL_COMPRESSED_RGB_ETC1_WEBGL\n  }\n\n  // Copy over all texture formats\n  var supportedCompressedFormats = Array.prototype.slice.call(\n    gl.getParameter(GL_COMPRESSED_TEXTURE_FORMATS))\n  Object.keys(compressedTextureFormats).forEach(function (name) {\n    var format = compressedTextureFormats[name]\n    if (supportedCompressedFormats.indexOf(format) >= 0) {\n      textureFormats[name] = format\n    }\n  })\n\n  var supportedFormats = Object.keys(textureFormats)\n  limits.textureFormats = supportedFormats\n\n  // associate with every format string its\n  // corresponding GL-value.\n  var textureFormatsInvert = []\n  Object.keys(textureFormats).forEach(function (key) {\n    var val = textureFormats[key]\n    textureFormatsInvert[val] = key\n  })\n\n  // associate with every type string its\n  // corresponding GL-value.\n  var textureTypesInvert = []\n  Object.keys(textureTypes).forEach(function (key) {\n    var val = textureTypes[key]\n    textureTypesInvert[val] = key\n  })\n\n  var magFiltersInvert = []\n  Object.keys(magFilters).forEach(function (key) {\n    var val = magFilters[key]\n    magFiltersInvert[val] = key\n  })\n\n  var minFiltersInvert = []\n  Object.keys(minFilters).forEach(function (key) {\n    var val = minFilters[key]\n    minFiltersInvert[val] = key\n  })\n\n  var wrapModesInvert = []\n  Object.keys(wrapModes).forEach(function (key) {\n    var val = wrapModes[key]\n    wrapModesInvert[val] = key\n  })\n\n  // colorFormats[] gives the format (channels) associated to an\n  // internalformat\n  var colorFormats = supportedFormats.reduce(function (color, key) {\n    var glenum = textureFormats[key]\n    if (glenum === GL_LUMINANCE ||\n        glenum === GL_ALPHA ||\n        glenum === GL_LUMINANCE ||\n        glenum === GL_LUMINANCE_ALPHA ||\n        glenum === GL_DEPTH_COMPONENT ||\n        glenum === GL_DEPTH_STENCIL ||\n        (extensions.ext_srgb &&\n                (glenum === GL_SRGB_EXT ||\n                 glenum === GL_SRGB_ALPHA_EXT))) {\n      color[glenum] = glenum\n    } else if (glenum === GL_RGB5_A1 || key.indexOf('rgba') >= 0) {\n      color[glenum] = GL_RGBA$1\n    } else {\n      color[glenum] = GL_RGB\n    }\n    return color\n  }, {})\n\n  function TexFlags () {\n    // format info\n    this.internalformat = GL_RGBA$1\n    this.format = GL_RGBA$1\n    this.type = GL_UNSIGNED_BYTE$4\n    this.compressed = false\n\n    // pixel storage\n    this.premultiplyAlpha = false\n    this.flipY = false\n    this.unpackAlignment = 1\n    this.colorSpace = GL_BROWSER_DEFAULT_WEBGL\n\n    // shape info\n    this.width = 0\n    this.height = 0\n    this.channels = 0\n  }\n\n  function copyFlags (result, other) {\n    result.internalformat = other.internalformat\n    result.format = other.format\n    result.type = other.type\n    result.compressed = other.compressed\n\n    result.premultiplyAlpha = other.premultiplyAlpha\n    result.flipY = other.flipY\n    result.unpackAlignment = other.unpackAlignment\n    result.colorSpace = other.colorSpace\n\n    result.width = other.width\n    result.height = other.height\n    result.channels = other.channels\n  }\n\n  function parseFlags (flags, options) {\n    if (typeof options !== 'object' || !options) {\n      return\n    }\n\n    if ('premultiplyAlpha' in options) {\n      \n      flags.premultiplyAlpha = options.premultiplyAlpha\n    }\n\n    if ('flipY' in options) {\n      \n      flags.flipY = options.flipY\n    }\n\n    if ('alignment' in options) {\n      \n      flags.unpackAlignment = options.alignment\n    }\n\n    if ('colorSpace' in options) {\n      \n      flags.colorSpace = colorSpace[options.colorSpace]\n    }\n\n    if ('type' in options) {\n      var type = options.type\n      \n      \n      \n      \n      flags.type = textureTypes[type]\n    }\n\n    var w = flags.width\n    var h = flags.height\n    var c = flags.channels\n    var hasChannels = false\n    if ('shape' in options) {\n      \n      w = options.shape[0]\n      h = options.shape[1]\n      if (options.shape.length === 3) {\n        c = options.shape[2]\n        \n        hasChannels = true\n      }\n      \n      \n    } else {\n      if ('radius' in options) {\n        w = h = options.radius\n        \n      }\n      if ('width' in options) {\n        w = options.width\n        \n      }\n      if ('height' in options) {\n        h = options.height\n        \n      }\n      if ('channels' in options) {\n        c = options.channels\n        \n        hasChannels = true\n      }\n    }\n    flags.width = w | 0\n    flags.height = h | 0\n    flags.channels = c | 0\n\n    var hasFormat = false\n    if ('format' in options) {\n      var formatStr = options.format\n      \n      \n      var internalformat = flags.internalformat = textureFormats[formatStr]\n      flags.format = colorFormats[internalformat]\n      if (formatStr in textureTypes) {\n        if (!('type' in options)) {\n          flags.type = textureTypes[formatStr]\n        }\n      }\n      if (formatStr in compressedTextureFormats) {\n        flags.compressed = true\n      }\n      hasFormat = true\n    }\n\n    // Reconcile channels and format\n    if (!hasChannels && hasFormat) {\n      flags.channels = FORMAT_CHANNELS[flags.format]\n    } else if (hasChannels && !hasFormat) {\n      if (flags.channels !== CHANNELS_FORMAT[flags.format]) {\n        flags.format = flags.internalformat = CHANNELS_FORMAT[flags.channels]\n      }\n    } else if (hasFormat && hasChannels) {\n      \n    }\n  }\n\n  function setFlags (flags) {\n    gl.pixelStorei(GL_UNPACK_FLIP_Y_WEBGL, flags.flipY)\n    gl.pixelStorei(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, flags.premultiplyAlpha)\n    gl.pixelStorei(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, flags.colorSpace)\n    gl.pixelStorei(GL_UNPACK_ALIGNMENT, flags.unpackAlignment)\n  }\n\n  // -------------------------------------------------------\n  // Tex image data\n  // -------------------------------------------------------\n  function TexImage () {\n    TexFlags.call(this)\n\n    this.xOffset = 0\n    this.yOffset = 0\n\n    // data\n    this.data = null\n    this.needsFree = false\n\n    // html element\n    this.element = null\n\n    // copyTexImage info\n    this.needsCopy = false\n  }\n\n  function parseImage (image, options) {\n    var data = null\n    if (isPixelData(options)) {\n      data = options\n    } else if (options) {\n      \n      parseFlags(image, options)\n      if ('x' in options) {\n        image.xOffset = options.x | 0\n      }\n      if ('y' in options) {\n        image.yOffset = options.y | 0\n      }\n      if (isPixelData(options.data)) {\n        data = options.data\n      }\n    }\n\n    \n\n    if (options.copy) {\n      \n      var viewW = contextState.viewportWidth\n      var viewH = contextState.viewportHeight\n      image.width = image.width || (viewW - image.xOffset)\n      image.height = image.height || (viewH - image.yOffset)\n      image.needsCopy = true\n      \n    } else if (!data) {\n      image.width = image.width || 1\n      image.height = image.height || 1\n      image.channels = image.channels || 4\n    } else if (isTypedArray(data)) {\n      image.channels = image.channels || 4\n      image.data = data\n      if (!('type' in options) && image.type === GL_UNSIGNED_BYTE$4) {\n        image.type = typedArrayCode$1(data)\n      }\n    } else if (isNumericArray(data)) {\n      image.channels = image.channels || 4\n      convertData(image, data)\n      image.alignment = 1\n      image.needsFree = true\n    } else if (isNDArrayLike(data)) {\n      var array = data.data\n      if (!Array.isArray(array) && image.type === GL_UNSIGNED_BYTE$4) {\n        image.type = typedArrayCode$1(array)\n      }\n      var shape = data.shape\n      var stride = data.stride\n      var shapeX, shapeY, shapeC, strideX, strideY, strideC\n      if (shape.length === 3) {\n        shapeC = shape[2]\n        strideC = stride[2]\n      } else {\n        \n        shapeC = 1\n        strideC = 1\n      }\n      shapeX = shape[0]\n      shapeY = shape[1]\n      strideX = stride[0]\n      strideY = stride[1]\n      image.alignment = 1\n      image.width = shapeX\n      image.height = shapeY\n      image.channels = shapeC\n      image.format = image.internalformat = CHANNELS_FORMAT[shapeC]\n      image.needsFree = true\n      transposeData(image, array, strideX, strideY, strideC, data.offset)\n    } else if (isCanvasElement(data) || isOffscreenCanvas(data) || isContext2D(data)) {\n      if (isCanvasElement(data) || isOffscreenCanvas(data)) {\n        image.element = data\n      } else {\n        image.element = data.canvas\n      }\n      image.width = image.element.width\n      image.height = image.element.height\n      image.channels = 4\n    } else if (isBitmap(data)) {\n      image.element = data\n      image.width = data.width\n      image.height = data.height\n      image.channels = 4\n    } else if (isImageElement(data)) {\n      image.element = data\n      image.width = data.naturalWidth\n      image.height = data.naturalHeight\n      image.channels = 4\n    } else if (isVideoElement(data)) {\n      image.element = data\n      image.width = data.videoWidth\n      image.height = data.videoHeight\n      image.channels = 4\n    } else if (isRectArray(data)) {\n      var w = image.width || data[0].length\n      var h = image.height || data.length\n      var c = image.channels\n      if (isArrayLike(data[0][0])) {\n        c = c || data[0][0].length\n      } else {\n        c = c || 1\n      }\n      var arrayShape = flattenUtils.shape(data)\n      var n = 1\n      for (var dd = 0; dd < arrayShape.length; ++dd) {\n        n *= arrayShape[dd]\n      }\n      var allocData = preConvert(image, n)\n      flattenUtils.flatten(data, arrayShape, '', allocData)\n      postConvert(image, allocData)\n      image.alignment = 1\n      image.width = w\n      image.height = h\n      image.channels = c\n      image.format = image.internalformat = CHANNELS_FORMAT[c]\n      image.needsFree = true\n    }\n\n    if (image.type === GL_FLOAT$3) {\n      \n    } else if (image.type === GL_HALF_FLOAT_OES) {\n      \n    }\n\n    // do compressed texture  validation here.\n  }\n\n  function setImage (info, target, miplevel) {\n    var element = info.element\n    var data = info.data\n    var internalformat = info.internalformat\n    var format = info.format\n    var type = info.type\n    var width = info.width\n    var height = info.height\n\n    setFlags(info)\n\n    if (element) {\n      gl.texImage2D(target, miplevel, format, format, type, element)\n    } else if (info.compressed) {\n      gl.compressedTexImage2D(target, miplevel, internalformat, width, height, 0, data)\n    } else if (info.needsCopy) {\n      reglPoll()\n      gl.copyTexImage2D(\n        target, miplevel, format, info.xOffset, info.yOffset, width, height, 0)\n    } else {\n      gl.texImage2D(target, miplevel, format, width, height, 0, format, type, data || null)\n    }\n  }\n\n  function setSubImage (info, target, x, y, miplevel) {\n    var element = info.element\n    var data = info.data\n    var internalformat = info.internalformat\n    var format = info.format\n    var type = info.type\n    var width = info.width\n    var height = info.height\n\n    setFlags(info)\n\n    if (element) {\n      gl.texSubImage2D(\n        target, miplevel, x, y, format, type, element)\n    } else if (info.compressed) {\n      gl.compressedTexSubImage2D(\n        target, miplevel, x, y, internalformat, width, height, data)\n    } else if (info.needsCopy) {\n      reglPoll()\n      gl.copyTexSubImage2D(\n        target, miplevel, x, y, info.xOffset, info.yOffset, width, height)\n    } else {\n      gl.texSubImage2D(\n        target, miplevel, x, y, width, height, format, type, data)\n    }\n  }\n\n  // texImage pool\n  var imagePool = []\n\n  function allocImage () {\n    return imagePool.pop() || new TexImage()\n  }\n\n  function freeImage (image) {\n    if (image.needsFree) {\n      pool.freeType(image.data)\n    }\n    TexImage.call(image)\n    imagePool.push(image)\n  }\n\n  // -------------------------------------------------------\n  // Mip map\n  // -------------------------------------------------------\n  function MipMap () {\n    TexFlags.call(this)\n\n    this.genMipmaps = false\n    this.mipmapHint = GL_DONT_CARE\n    this.mipmask = 0\n    this.images = Array(16)\n  }\n\n  function parseMipMapFromShape (mipmap, width, height) {\n    var img = mipmap.images[0] = allocImage()\n    mipmap.mipmask = 1\n    img.width = mipmap.width = width\n    img.height = mipmap.height = height\n    img.channels = mipmap.channels = 4\n  }\n\n  function parseMipMapFromObject (mipmap, options) {\n    var imgData = null\n    if (isPixelData(options)) {\n      imgData = mipmap.images[0] = allocImage()\n      copyFlags(imgData, mipmap)\n      parseImage(imgData, options)\n      mipmap.mipmask = 1\n    } else {\n      parseFlags(mipmap, options)\n      if (Array.isArray(options.mipmap)) {\n        var mipData = options.mipmap\n        for (var i = 0; i < mipData.length; ++i) {\n          imgData = mipmap.images[i] = allocImage()\n          copyFlags(imgData, mipmap)\n          imgData.width >>= i\n          imgData.height >>= i\n          parseImage(imgData, mipData[i])\n          mipmap.mipmask |= (1 << i)\n        }\n      } else {\n        imgData = mipmap.images[0] = allocImage()\n        copyFlags(imgData, mipmap)\n        parseImage(imgData, options)\n        mipmap.mipmask = 1\n      }\n    }\n    copyFlags(mipmap, mipmap.images[0])\n\n    // For textures of the compressed format WEBGL_compressed_texture_s3tc\n    // we must have that\n    //\n    // \"When level equals zero width and height must be a multiple of 4.\n    // When level is greater than 0 width and height must be 0, 1, 2 or a multiple of 4. \"\n    //\n    // but we do not yet support having multiple mipmap levels for compressed textures,\n    // so we only test for level zero.\n\n    if (\n      mipmap.compressed &&\n      (\n        mipmap.internalformat === GL_COMPRESSED_RGB_S3TC_DXT1_EXT ||\n        mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT1_EXT ||\n        mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT3_EXT ||\n        mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT5_EXT\n      )\n    ) {\n      \n    }\n  }\n\n  function setMipMap (mipmap, target) {\n    var images = mipmap.images\n    for (var i = 0; i < images.length; ++i) {\n      if (!images[i]) {\n        return\n      }\n      setImage(images[i], target, i)\n    }\n  }\n\n  var mipPool = []\n\n  function allocMipMap () {\n    var result = mipPool.pop() || new MipMap()\n    TexFlags.call(result)\n    result.mipmask = 0\n    for (var i = 0; i < 16; ++i) {\n      result.images[i] = null\n    }\n    return result\n  }\n\n  function freeMipMap (mipmap) {\n    var images = mipmap.images\n    for (var i = 0; i < images.length; ++i) {\n      if (images[i]) {\n        freeImage(images[i])\n      }\n      images[i] = null\n    }\n    mipPool.push(mipmap)\n  }\n\n  // -------------------------------------------------------\n  // Tex info\n  // -------------------------------------------------------\n  function TexInfo () {\n    this.minFilter = GL_NEAREST\n    this.magFilter = GL_NEAREST\n\n    this.wrapS = GL_CLAMP_TO_EDGE\n    this.wrapT = GL_CLAMP_TO_EDGE\n\n    this.anisotropic = 1\n\n    this.genMipmaps = false\n    this.mipmapHint = GL_DONT_CARE\n  }\n\n  function parseTexInfo (info, options) {\n    if ('min' in options) {\n      var minFilter = options.min\n      \n      info.minFilter = minFilters[minFilter]\n      if (MIPMAP_FILTERS.indexOf(info.minFilter) >= 0 && !('faces' in options)) {\n        info.genMipmaps = true\n      }\n    }\n\n    if ('mag' in options) {\n      var magFilter = options.mag\n      \n      info.magFilter = magFilters[magFilter]\n    }\n\n    var wrapS = info.wrapS\n    var wrapT = info.wrapT\n    if ('wrap' in options) {\n      var wrap = options.wrap\n      if (typeof wrap === 'string') {\n        \n        wrapS = wrapT = wrapModes[wrap]\n      } else if (Array.isArray(wrap)) {\n        \n        \n        wrapS = wrapModes[wrap[0]]\n        wrapT = wrapModes[wrap[1]]\n      }\n    } else {\n      if ('wrapS' in options) {\n        var optWrapS = options.wrapS\n        \n        wrapS = wrapModes[optWrapS]\n      }\n      if ('wrapT' in options) {\n        var optWrapT = options.wrapT\n        \n        wrapT = wrapModes[optWrapT]\n      }\n    }\n    info.wrapS = wrapS\n    info.wrapT = wrapT\n\n    if ('anisotropic' in options) {\n      var anisotropic = options.anisotropic\n      \n      info.anisotropic = options.anisotropic\n    }\n\n    if ('mipmap' in options) {\n      var hasMipMap = false\n      switch (typeof options.mipmap) {\n        case 'string':\n          \n          info.mipmapHint = mipmapHint[options.mipmap]\n          info.genMipmaps = true\n          hasMipMap = true\n          break\n\n        case 'boolean':\n          hasMipMap = info.genMipmaps = options.mipmap\n          break\n\n        case 'object':\n          \n          info.genMipmaps = false\n          hasMipMap = true\n          break\n\n        default:\n          \n      }\n      if (hasMipMap && !('min' in options)) {\n        info.minFilter = GL_NEAREST_MIPMAP_NEAREST\n      }\n    }\n  }\n\n  function setTexInfo (info, target) {\n    gl.texParameteri(target, GL_TEXTURE_MIN_FILTER, info.minFilter)\n    gl.texParameteri(target, GL_TEXTURE_MAG_FILTER, info.magFilter)\n    gl.texParameteri(target, GL_TEXTURE_WRAP_S, info.wrapS)\n    gl.texParameteri(target, GL_TEXTURE_WRAP_T, info.wrapT)\n    if (extensions.ext_texture_filter_anisotropic) {\n      gl.texParameteri(target, GL_TEXTURE_MAX_ANISOTROPY_EXT, info.anisotropic)\n    }\n    if (info.genMipmaps) {\n      gl.hint(GL_GENERATE_MIPMAP_HINT, info.mipmapHint)\n      gl.generateMipmap(target)\n    }\n  }\n\n  // -------------------------------------------------------\n  // Full texture object\n  // -------------------------------------------------------\n  var textureCount = 0\n  var textureSet = {}\n  var numTexUnits = limits.maxTextureUnits\n  var textureUnits = Array(numTexUnits).map(function () {\n    return null\n  })\n\n  function REGLTexture (target) {\n    TexFlags.call(this)\n    this.mipmask = 0\n    this.internalformat = GL_RGBA$1\n\n    this.id = textureCount++\n\n    this.refCount = 1\n\n    this.target = target\n    this.texture = gl.createTexture()\n\n    this.unit = -1\n    this.bindCount = 0\n\n    this.texInfo = new TexInfo()\n\n    if (config.profile) {\n      this.stats = { size: 0 }\n    }\n  }\n\n  function tempBind (texture) {\n    gl.activeTexture(GL_TEXTURE0$1)\n    gl.bindTexture(texture.target, texture.texture)\n  }\n\n  function tempRestore () {\n    var prev = textureUnits[0]\n    if (prev) {\n      gl.bindTexture(prev.target, prev.texture)\n    } else {\n      gl.bindTexture(GL_TEXTURE_2D$1, null)\n    }\n  }\n\n  function destroy (texture) {\n    var handle = texture.texture\n    \n    var unit = texture.unit\n    var target = texture.target\n    if (unit >= 0) {\n      gl.activeTexture(GL_TEXTURE0$1 + unit)\n      gl.bindTexture(target, null)\n      textureUnits[unit] = null\n    }\n    gl.deleteTexture(handle)\n    texture.texture = null\n    texture.params = null\n    texture.pixels = null\n    texture.refCount = 0\n    delete textureSet[texture.id]\n    stats.textureCount--\n  }\n\n  extend(REGLTexture.prototype, {\n    bind: function () {\n      var texture = this\n      texture.bindCount += 1\n      var unit = texture.unit\n      if (unit < 0) {\n        for (var i = 0; i < numTexUnits; ++i) {\n          var other = textureUnits[i]\n          if (other) {\n            if (other.bindCount > 0) {\n              continue\n            }\n            other.unit = -1\n          }\n          textureUnits[i] = texture\n          unit = i\n          break\n        }\n        if (unit >= numTexUnits) {\n          \n        }\n        if (config.profile && stats.maxTextureUnits < (unit + 1)) {\n          stats.maxTextureUnits = unit + 1 // +1, since the units are zero-based\n        }\n        texture.unit = unit\n        gl.activeTexture(GL_TEXTURE0$1 + unit)\n        gl.bindTexture(texture.target, texture.texture)\n      }\n      return unit\n    },\n\n    unbind: function () {\n      this.bindCount -= 1\n    },\n\n    decRef: function () {\n      if (--this.refCount <= 0) {\n        destroy(this)\n      }\n    }\n  })\n\n  function createTexture2D (a, b) {\n    var texture = new REGLTexture(GL_TEXTURE_2D$1)\n    textureSet[texture.id] = texture\n    stats.textureCount++\n\n    function reglTexture2D (a, b) {\n      var texInfo = texture.texInfo\n      TexInfo.call(texInfo)\n      var mipData = allocMipMap()\n\n      if (typeof a === 'number') {\n        if (typeof b === 'number') {\n          parseMipMapFromShape(mipData, a | 0, b | 0)\n        } else {\n          parseMipMapFromShape(mipData, a | 0, a | 0)\n        }\n      } else if (a) {\n        \n        parseTexInfo(texInfo, a)\n        parseMipMapFromObject(mipData, a)\n      } else {\n        // empty textures get assigned a default shape of 1x1\n        parseMipMapFromShape(mipData, 1, 1)\n      }\n\n      if (texInfo.genMipmaps) {\n        mipData.mipmask = (mipData.width << 1) - 1\n      }\n      texture.mipmask = mipData.mipmask\n\n      copyFlags(texture, mipData)\n\n      \n      texture.internalformat = mipData.internalformat\n\n      reglTexture2D.width = mipData.width\n      reglTexture2D.height = mipData.height\n\n      tempBind(texture)\n      setMipMap(mipData, GL_TEXTURE_2D$1)\n      setTexInfo(texInfo, GL_TEXTURE_2D$1)\n      tempRestore()\n\n      freeMipMap(mipData)\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          mipData.width,\n          mipData.height,\n          texInfo.genMipmaps,\n          false)\n      }\n      reglTexture2D.format = textureFormatsInvert[texture.internalformat]\n      reglTexture2D.type = textureTypesInvert[texture.type]\n\n      reglTexture2D.mag = magFiltersInvert[texInfo.magFilter]\n      reglTexture2D.min = minFiltersInvert[texInfo.minFilter]\n\n      reglTexture2D.wrapS = wrapModesInvert[texInfo.wrapS]\n      reglTexture2D.wrapT = wrapModesInvert[texInfo.wrapT]\n\n      return reglTexture2D\n    }\n\n    function subimage (image, x_, y_, level_) {\n      \n\n      var x = x_ | 0\n      var y = y_ | 0\n      var level = level_ | 0\n\n      var imageData = allocImage()\n      copyFlags(imageData, texture)\n      imageData.width = 0\n      imageData.height = 0\n      parseImage(imageData, image)\n      imageData.width = imageData.width || ((texture.width >> level) - x)\n      imageData.height = imageData.height || ((texture.height >> level) - y)\n\n      \n      \n      \n      \n\n      tempBind(texture)\n      setSubImage(imageData, GL_TEXTURE_2D$1, x, y, level)\n      tempRestore()\n\n      freeImage(imageData)\n\n      return reglTexture2D\n    }\n\n    function resize (w_, h_) {\n      var w = w_ | 0\n      var h = (h_ | 0) || w\n      if (w === texture.width && h === texture.height) {\n        return reglTexture2D\n      }\n\n      reglTexture2D.width = texture.width = w\n      reglTexture2D.height = texture.height = h\n\n      tempBind(texture)\n\n      for (var i = 0; texture.mipmask >> i; ++i) {\n        var _w = w >> i\n        var _h = h >> i\n        if (!_w || !_h) break\n        gl.texImage2D(\n          GL_TEXTURE_2D$1,\n          i,\n          texture.format,\n          _w,\n          _h,\n          0,\n          texture.format,\n          texture.type,\n          null)\n      }\n      tempRestore()\n\n      // also, recompute the texture size.\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          w,\n          h,\n          false,\n          false)\n      }\n\n      return reglTexture2D\n    }\n\n    reglTexture2D(a, b)\n\n    reglTexture2D.subimage = subimage\n    reglTexture2D.resize = resize\n    reglTexture2D._reglType = 'texture2d'\n    reglTexture2D._texture = texture\n    if (config.profile) {\n      reglTexture2D.stats = texture.stats\n    }\n    reglTexture2D.destroy = function () {\n      texture.decRef()\n    }\n\n    return reglTexture2D\n  }\n\n  function createTextureCube (a0, a1, a2, a3, a4, a5) {\n    var texture = new REGLTexture(GL_TEXTURE_CUBE_MAP$1)\n    textureSet[texture.id] = texture\n    stats.cubeCount++\n\n    var faces = new Array(6)\n\n    function reglTextureCube (a0, a1, a2, a3, a4, a5) {\n      var i\n      var texInfo = texture.texInfo\n      TexInfo.call(texInfo)\n      for (i = 0; i < 6; ++i) {\n        faces[i] = allocMipMap()\n      }\n\n      if (typeof a0 === 'number' || !a0) {\n        var s = (a0 | 0) || 1\n        for (i = 0; i < 6; ++i) {\n          parseMipMapFromShape(faces[i], s, s)\n        }\n      } else if (typeof a0 === 'object') {\n        if (a1) {\n          parseMipMapFromObject(faces[0], a0)\n          parseMipMapFromObject(faces[1], a1)\n          parseMipMapFromObject(faces[2], a2)\n          parseMipMapFromObject(faces[3], a3)\n          parseMipMapFromObject(faces[4], a4)\n          parseMipMapFromObject(faces[5], a5)\n        } else {\n          parseTexInfo(texInfo, a0)\n          parseFlags(texture, a0)\n          if ('faces' in a0) {\n            var faceInput = a0.faces\n            \n            for (i = 0; i < 6; ++i) {\n              \n              copyFlags(faces[i], texture)\n              parseMipMapFromObject(faces[i], faceInput[i])\n            }\n          } else {\n            for (i = 0; i < 6; ++i) {\n              parseMipMapFromObject(faces[i], a0)\n            }\n          }\n        }\n      } else {\n        \n      }\n\n      copyFlags(texture, faces[0])\n      \n\n      if (texInfo.genMipmaps) {\n        texture.mipmask = (faces[0].width << 1) - 1\n      } else {\n        texture.mipmask = faces[0].mipmask\n      }\n\n      \n      texture.internalformat = faces[0].internalformat\n\n      reglTextureCube.width = faces[0].width\n      reglTextureCube.height = faces[0].height\n\n      tempBind(texture)\n      for (i = 0; i < 6; ++i) {\n        setMipMap(faces[i], GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i)\n      }\n      setTexInfo(texInfo, GL_TEXTURE_CUBE_MAP$1)\n      tempRestore()\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          reglTextureCube.width,\n          reglTextureCube.height,\n          texInfo.genMipmaps,\n          true)\n      }\n\n      reglTextureCube.format = textureFormatsInvert[texture.internalformat]\n      reglTextureCube.type = textureTypesInvert[texture.type]\n\n      reglTextureCube.mag = magFiltersInvert[texInfo.magFilter]\n      reglTextureCube.min = minFiltersInvert[texInfo.minFilter]\n\n      reglTextureCube.wrapS = wrapModesInvert[texInfo.wrapS]\n      reglTextureCube.wrapT = wrapModesInvert[texInfo.wrapT]\n\n      for (i = 0; i < 6; ++i) {\n        freeMipMap(faces[i])\n      }\n\n      return reglTextureCube\n    }\n\n    function subimage (face, image, x_, y_, level_) {\n      \n      \n\n      var x = x_ | 0\n      var y = y_ | 0\n      var level = level_ | 0\n\n      var imageData = allocImage()\n      copyFlags(imageData, texture)\n      imageData.width = 0\n      imageData.height = 0\n      parseImage(imageData, image)\n      imageData.width = imageData.width || ((texture.width >> level) - x)\n      imageData.height = imageData.height || ((texture.height >> level) - y)\n\n      \n      \n      \n      \n\n      tempBind(texture)\n      setSubImage(imageData, GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + face, x, y, level)\n      tempRestore()\n\n      freeImage(imageData)\n\n      return reglTextureCube\n    }\n\n    function resize (radius_) {\n      var radius = radius_ | 0\n      if (radius === texture.width) {\n        return\n      }\n\n      reglTextureCube.width = texture.width = radius\n      reglTextureCube.height = texture.height = radius\n\n      tempBind(texture)\n      for (var i = 0; i < 6; ++i) {\n        for (var j = 0; texture.mipmask >> j; ++j) {\n          gl.texImage2D(\n            GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i,\n            j,\n            texture.format,\n            radius >> j,\n            radius >> j,\n            0,\n            texture.format,\n            texture.type,\n            null)\n        }\n      }\n      tempRestore()\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          reglTextureCube.width,\n          reglTextureCube.height,\n          false,\n          true)\n      }\n\n      return reglTextureCube\n    }\n\n    reglTextureCube(a0, a1, a2, a3, a4, a5)\n\n    reglTextureCube.subimage = subimage\n    reglTextureCube.resize = resize\n    reglTextureCube._reglType = 'textureCube'\n    reglTextureCube._texture = texture\n    if (config.profile) {\n      reglTextureCube.stats = texture.stats\n    }\n    reglTextureCube.destroy = function () {\n      texture.decRef()\n    }\n\n    return reglTextureCube\n  }\n\n  // Called when regl is destroyed\n  function destroyTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      gl.activeTexture(GL_TEXTURE0$1 + i)\n      gl.bindTexture(GL_TEXTURE_2D$1, null)\n      textureUnits[i] = null\n    }\n    values(textureSet).forEach(destroy)\n\n    stats.cubeCount = 0\n    stats.textureCount = 0\n  }\n\n  if (config.profile) {\n    stats.getTotalTextureSize = function () {\n      var total = 0\n      Object.keys(textureSet).forEach(function (key) {\n        total += textureSet[key].stats.size\n      })\n      return total\n    }\n  }\n\n  function restoreTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      var tex = textureUnits[i]\n      if (tex) {\n        tex.bindCount = 0\n        tex.unit = -1\n        textureUnits[i] = null\n      }\n    }\n\n    values(textureSet).forEach(function (texture) {\n      texture.texture = gl.createTexture()\n      gl.bindTexture(texture.target, texture.texture)\n      for (var i = 0; i < 32; ++i) {\n        if ((texture.mipmask & (1 << i)) === 0) {\n          continue\n        }\n        if (texture.target === GL_TEXTURE_2D$1) {\n          gl.texImage2D(GL_TEXTURE_2D$1,\n            i,\n            texture.internalformat,\n            texture.width >> i,\n            texture.height >> i,\n            0,\n            texture.internalformat,\n            texture.type,\n            null)\n        } else {\n          for (var j = 0; j < 6; ++j) {\n            gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + j,\n              i,\n              texture.internalformat,\n              texture.width >> i,\n              texture.height >> i,\n              0,\n              texture.internalformat,\n              texture.type,\n              null)\n          }\n        }\n      }\n      setTexInfo(texture.texInfo, texture.target)\n    })\n  }\n\n  function refreshTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      var tex = textureUnits[i]\n      if (tex) {\n        tex.bindCount = 0\n        tex.unit = -1\n        textureUnits[i] = null\n      }\n      gl.activeTexture(GL_TEXTURE0$1 + i)\n      gl.bindTexture(GL_TEXTURE_2D$1, null)\n      gl.bindTexture(GL_TEXTURE_CUBE_MAP$1, null)\n    }\n  }\n\n  return {\n    create2D: createTexture2D,\n    createCube: createTextureCube,\n    clear: destroyTextures,\n    getTexture: function (wrapper) {\n      return null\n    },\n    restore: restoreTextures,\n    refresh: refreshTextures\n  }\n}\n\nvar GL_RENDERBUFFER = 0x8D41\n\nvar GL_RGBA4$1 = 0x8056\nvar GL_RGB5_A1$1 = 0x8057\nvar GL_RGB565$1 = 0x8D62\nvar GL_DEPTH_COMPONENT16 = 0x81A5\nvar GL_STENCIL_INDEX8 = 0x8D48\nvar GL_DEPTH_STENCIL$1 = 0x84F9\n\nvar GL_SRGB8_ALPHA8_EXT = 0x8C43\n\nvar GL_RGBA32F_EXT = 0x8814\n\nvar GL_RGBA16F_EXT = 0x881A\nvar GL_RGB16F_EXT = 0x881B\n\nvar FORMAT_SIZES = []\n\nFORMAT_SIZES[GL_RGBA4$1] = 2\nFORMAT_SIZES[GL_RGB5_A1$1] = 2\nFORMAT_SIZES[GL_RGB565$1] = 2\n\nFORMAT_SIZES[GL_DEPTH_COMPONENT16] = 2\nFORMAT_SIZES[GL_STENCIL_INDEX8] = 1\nFORMAT_SIZES[GL_DEPTH_STENCIL$1] = 4\n\nFORMAT_SIZES[GL_SRGB8_ALPHA8_EXT] = 4\nFORMAT_SIZES[GL_RGBA32F_EXT] = 16\nFORMAT_SIZES[GL_RGBA16F_EXT] = 8\nFORMAT_SIZES[GL_RGB16F_EXT] = 6\n\nfunction getRenderbufferSize (format, width, height) {\n  return FORMAT_SIZES[format] * width * height\n}\n\nvar wrapRenderbuffers = function (gl, extensions, limits, stats, config) {\n  var formatTypes = {\n    'rgba4': GL_RGBA4$1,\n    'rgb565': GL_RGB565$1,\n    'rgb5 a1': GL_RGB5_A1$1,\n    'depth': GL_DEPTH_COMPONENT16,\n    'stencil': GL_STENCIL_INDEX8,\n    'depth stencil': GL_DEPTH_STENCIL$1\n  }\n\n  if (extensions.ext_srgb) {\n    formatTypes['srgba'] = GL_SRGB8_ALPHA8_EXT\n  }\n\n  if (extensions.ext_color_buffer_half_float) {\n    formatTypes['rgba16f'] = GL_RGBA16F_EXT\n    formatTypes['rgb16f'] = GL_RGB16F_EXT\n  }\n\n  if (extensions.webgl_color_buffer_float) {\n    formatTypes['rgba32f'] = GL_RGBA32F_EXT\n  }\n\n  var formatTypesInvert = []\n  Object.keys(formatTypes).forEach(function (key) {\n    var val = formatTypes[key]\n    formatTypesInvert[val] = key\n  })\n\n  var renderbufferCount = 0\n  var renderbufferSet = {}\n\n  function REGLRenderbuffer (renderbuffer) {\n    this.id = renderbufferCount++\n    this.refCount = 1\n\n    this.renderbuffer = renderbuffer\n\n    this.format = GL_RGBA4$1\n    this.width = 0\n    this.height = 0\n\n    if (config.profile) {\n      this.stats = { size: 0 }\n    }\n  }\n\n  REGLRenderbuffer.prototype.decRef = function () {\n    if (--this.refCount <= 0) {\n      destroy(this)\n    }\n  }\n\n  function destroy (rb) {\n    var handle = rb.renderbuffer\n    \n    gl.bindRenderbuffer(GL_RENDERBUFFER, null)\n    gl.deleteRenderbuffer(handle)\n    rb.renderbuffer = null\n    rb.refCount = 0\n    delete renderbufferSet[rb.id]\n    stats.renderbufferCount--\n  }\n\n  function createRenderbuffer (a, b) {\n    var renderbuffer = new REGLRenderbuffer(gl.createRenderbuffer())\n    renderbufferSet[renderbuffer.id] = renderbuffer\n    stats.renderbufferCount++\n\n    function reglRenderbuffer (a, b) {\n      var w = 0\n      var h = 0\n      var format = GL_RGBA4$1\n\n      if (typeof a === 'object' && a) {\n        var options = a\n        if ('shape' in options) {\n          var shape = options.shape\n          \n          w = shape[0] | 0\n          h = shape[1] | 0\n        } else {\n          if ('radius' in options) {\n            w = h = options.radius | 0\n          }\n          if ('width' in options) {\n            w = options.width | 0\n          }\n          if ('height' in options) {\n            h = options.height | 0\n          }\n        }\n        if ('format' in options) {\n          \n          format = formatTypes[options.format]\n        }\n      } else if (typeof a === 'number') {\n        w = a | 0\n        if (typeof b === 'number') {\n          h = b | 0\n        } else {\n          h = w\n        }\n      } else if (!a) {\n        w = h = 1\n      } else {\n        \n      }\n\n      // check shape\n      \n\n      if (w === renderbuffer.width &&\n          h === renderbuffer.height &&\n          format === renderbuffer.format) {\n        return\n      }\n\n      reglRenderbuffer.width = renderbuffer.width = w\n      reglRenderbuffer.height = renderbuffer.height = h\n      renderbuffer.format = format\n\n      gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer)\n      gl.renderbufferStorage(GL_RENDERBUFFER, format, w, h)\n\n      \n\n      if (config.profile) {\n        renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height)\n      }\n      reglRenderbuffer.format = formatTypesInvert[renderbuffer.format]\n\n      return reglRenderbuffer\n    }\n\n    function resize (w_, h_) {\n      var w = w_ | 0\n      var h = (h_ | 0) || w\n\n      if (w === renderbuffer.width && h === renderbuffer.height) {\n        return reglRenderbuffer\n      }\n\n      // check shape\n      \n\n      reglRenderbuffer.width = renderbuffer.width = w\n      reglRenderbuffer.height = renderbuffer.height = h\n\n      gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer)\n      gl.renderbufferStorage(GL_RENDERBUFFER, renderbuffer.format, w, h)\n\n      \n\n      // also, recompute size.\n      if (config.profile) {\n        renderbuffer.stats.size = getRenderbufferSize(\n          renderbuffer.format, renderbuffer.width, renderbuffer.height)\n      }\n\n      return reglRenderbuffer\n    }\n\n    reglRenderbuffer(a, b)\n\n    reglRenderbuffer.resize = resize\n    reglRenderbuffer._reglType = 'renderbuffer'\n    reglRenderbuffer._renderbuffer = renderbuffer\n    if (config.profile) {\n      reglRenderbuffer.stats = renderbuffer.stats\n    }\n    reglRenderbuffer.destroy = function () {\n      renderbuffer.decRef()\n    }\n\n    return reglRenderbuffer\n  }\n\n  if (config.profile) {\n    stats.getTotalRenderbufferSize = function () {\n      var total = 0\n      Object.keys(renderbufferSet).forEach(function (key) {\n        total += renderbufferSet[key].stats.size\n      })\n      return total\n    }\n  }\n\n  function restoreRenderbuffers () {\n    values(renderbufferSet).forEach(function (rb) {\n      rb.renderbuffer = gl.createRenderbuffer()\n      gl.bindRenderbuffer(GL_RENDERBUFFER, rb.renderbuffer)\n      gl.renderbufferStorage(GL_RENDERBUFFER, rb.format, rb.width, rb.height)\n    })\n    gl.bindRenderbuffer(GL_RENDERBUFFER, null)\n  }\n\n  return {\n    create: createRenderbuffer,\n    clear: function () {\n      values(renderbufferSet).forEach(destroy)\n    },\n    restore: restoreRenderbuffers\n  }\n}\n\n// We store these constants so that the minifier can inline them\nvar GL_FRAMEBUFFER$1 = 0x8D40\nvar GL_RENDERBUFFER$1 = 0x8D41\n\nvar GL_TEXTURE_2D$2 = 0x0DE1\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 = 0x8515\n\nvar GL_COLOR_ATTACHMENT0$1 = 0x8CE0\nvar GL_DEPTH_ATTACHMENT = 0x8D00\nvar GL_STENCIL_ATTACHMENT = 0x8D20\nvar GL_DEPTH_STENCIL_ATTACHMENT = 0x821A\n\nvar GL_FRAMEBUFFER_COMPLETE$1 = 0x8CD5\nvar GL_HALF_FLOAT_OES$1 = 0x8D61\nvar GL_UNSIGNED_BYTE$5 = 0x1401\nvar GL_FLOAT$4 = 0x1406\n\nvar GL_RGB$1 = 0x1907\nvar GL_RGBA$2 = 0x1908\n\n// for every texture format, store\n// the number of channels\nvar textureFormatChannels = []\ntextureFormatChannels[GL_RGBA$2] = 4\ntextureFormatChannels[GL_RGB$1] = 3\n\n// for every texture type, store\n// the size in bytes.\nvar textureTypeSizes = []\ntextureTypeSizes[GL_UNSIGNED_BYTE$5] = 1\ntextureTypeSizes[GL_FLOAT$4] = 4\ntextureTypeSizes[GL_HALF_FLOAT_OES$1] = 2\n\nfunction wrapFBOState (\n  gl,\n  extensions,\n  limits,\n  textureState,\n  renderbufferState,\n  stats) {\n  var framebufferState = {\n    cur: null,\n    next: null,\n    dirty: false,\n    setFBO: null\n  }\n\n  var colorTextureFormats = ['rgba']\n  var colorRenderbufferFormats = ['rgba4', 'rgb565', 'rgb5 a1']\n\n  if (extensions.ext_srgb) {\n    colorRenderbufferFormats.push('srgba')\n  }\n\n  if (extensions.ext_color_buffer_half_float) {\n    colorRenderbufferFormats.push('rgba16f', 'rgb16f')\n  }\n\n  if (extensions.webgl_color_buffer_float) {\n    colorRenderbufferFormats.push('rgba32f')\n  }\n\n  var colorTypes = ['uint8']\n  if (extensions.oes_texture_half_float) {\n    colorTypes.push('half float', 'float16')\n  }\n  if (extensions.oes_texture_float) {\n    colorTypes.push('float', 'float32')\n  }\n\n  function FramebufferAttachment (target, texture, renderbuffer) {\n    this.target = target\n    this.texture = texture\n    this.renderbuffer = renderbuffer\n\n    var w = 0\n    var h = 0\n    if (texture) {\n      w = texture.width\n      h = texture.height\n    } else if (renderbuffer) {\n      w = renderbuffer.width\n      h = renderbuffer.height\n    }\n    this.width = w\n    this.height = h\n  }\n\n  function decRef (attachment) {\n    if (attachment) {\n      if (attachment.texture) {\n        attachment.texture._texture.decRef()\n      }\n      if (attachment.renderbuffer) {\n        attachment.renderbuffer._renderbuffer.decRef()\n      }\n    }\n  }\n\n  function incRefAndCheckShape (attachment, width, height) {\n    if (!attachment) {\n      return\n    }\n    if (attachment.texture) {\n      var texture = attachment.texture._texture\n      var tw = Math.max(1, texture.width)\n      var th = Math.max(1, texture.height)\n      \n      texture.refCount += 1\n    } else {\n      var renderbuffer = attachment.renderbuffer._renderbuffer\n      \n      renderbuffer.refCount += 1\n    }\n  }\n\n  function attach (location, attachment) {\n    if (attachment) {\n      if (attachment.texture) {\n        gl.framebufferTexture2D(\n          GL_FRAMEBUFFER$1,\n          location,\n          attachment.target,\n          attachment.texture._texture.texture,\n          0)\n      } else {\n        gl.framebufferRenderbuffer(\n          GL_FRAMEBUFFER$1,\n          location,\n          GL_RENDERBUFFER$1,\n          attachment.renderbuffer._renderbuffer.renderbuffer)\n      }\n    }\n  }\n\n  function parseAttachment (attachment) {\n    var target = GL_TEXTURE_2D$2\n    var texture = null\n    var renderbuffer = null\n\n    var data = attachment\n    if (typeof attachment === 'object') {\n      data = attachment.data\n      if ('target' in attachment) {\n        target = attachment.target | 0\n      }\n    }\n\n    \n\n    var type = data._reglType\n    if (type === 'texture2d') {\n      texture = data\n      \n    } else if (type === 'textureCube') {\n      texture = data\n      \n    } else if (type === 'renderbuffer') {\n      renderbuffer = data\n      target = GL_RENDERBUFFER$1\n    } else {\n      \n    }\n\n    return new FramebufferAttachment(target, texture, renderbuffer)\n  }\n\n  function allocAttachment (\n    width,\n    height,\n    isTexture,\n    format,\n    type) {\n    if (isTexture) {\n      var texture = textureState.create2D({\n        width: width,\n        height: height,\n        format: format,\n        type: type\n      })\n      texture._texture.refCount = 0\n      return new FramebufferAttachment(GL_TEXTURE_2D$2, texture, null)\n    } else {\n      var rb = renderbufferState.create({\n        width: width,\n        height: height,\n        format: format\n      })\n      rb._renderbuffer.refCount = 0\n      return new FramebufferAttachment(GL_RENDERBUFFER$1, null, rb)\n    }\n  }\n\n  function unwrapAttachment (attachment) {\n    return attachment && (attachment.texture || attachment.renderbuffer)\n  }\n\n  function resizeAttachment (attachment, w, h) {\n    if (attachment) {\n      if (attachment.texture) {\n        attachment.texture.resize(w, h)\n      } else if (attachment.renderbuffer) {\n        attachment.renderbuffer.resize(w, h)\n      }\n      attachment.width = w\n      attachment.height = h\n    }\n  }\n\n  var framebufferCount = 0\n  var framebufferSet = {}\n\n  function REGLFramebuffer () {\n    this.id = framebufferCount++\n    framebufferSet[this.id] = this\n\n    this.framebuffer = gl.createFramebuffer()\n    this.width = 0\n    this.height = 0\n\n    this.colorAttachments = []\n    this.depthAttachment = null\n    this.stencilAttachment = null\n    this.depthStencilAttachment = null\n  }\n\n  function decFBORefs (framebuffer) {\n    framebuffer.colorAttachments.forEach(decRef)\n    decRef(framebuffer.depthAttachment)\n    decRef(framebuffer.stencilAttachment)\n    decRef(framebuffer.depthStencilAttachment)\n  }\n\n  function destroy (framebuffer) {\n    var handle = framebuffer.framebuffer\n    \n    gl.deleteFramebuffer(handle)\n    framebuffer.framebuffer = null\n    stats.framebufferCount--\n    delete framebufferSet[framebuffer.id]\n  }\n\n  function updateFramebuffer (framebuffer) {\n    var i\n\n    gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebuffer.framebuffer)\n    var colorAttachments = framebuffer.colorAttachments\n    for (i = 0; i < colorAttachments.length; ++i) {\n      attach(GL_COLOR_ATTACHMENT0$1 + i, colorAttachments[i])\n    }\n    for (i = colorAttachments.length; i < limits.maxColorAttachments; ++i) {\n      gl.framebufferTexture2D(\n        GL_FRAMEBUFFER$1,\n        GL_COLOR_ATTACHMENT0$1 + i,\n        GL_TEXTURE_2D$2,\n        null,\n        0)\n    }\n\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER$1,\n      GL_DEPTH_STENCIL_ATTACHMENT,\n      GL_TEXTURE_2D$2,\n      null,\n      0)\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER$1,\n      GL_DEPTH_ATTACHMENT,\n      GL_TEXTURE_2D$2,\n      null,\n      0)\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER$1,\n      GL_STENCIL_ATTACHMENT,\n      GL_TEXTURE_2D$2,\n      null,\n      0)\n\n    attach(GL_DEPTH_ATTACHMENT, framebuffer.depthAttachment)\n    attach(GL_STENCIL_ATTACHMENT, framebuffer.stencilAttachment)\n    attach(GL_DEPTH_STENCIL_ATTACHMENT, framebuffer.depthStencilAttachment)\n\n    // Check status code\n    var status = gl.checkFramebufferStatus(GL_FRAMEBUFFER$1)\n    if (!gl.isContextLost() && status !== GL_FRAMEBUFFER_COMPLETE$1) {\n      \n    }\n\n    gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebufferState.next ? framebufferState.next.framebuffer : null)\n    framebufferState.cur = framebufferState.next\n\n    // FIXME: Clear error code here.  This is a work around for a bug in\n    // headless-gl\n    gl.getError()\n  }\n\n  function createFBO (a0, a1) {\n    var framebuffer = new REGLFramebuffer()\n    stats.framebufferCount++\n\n    function reglFramebuffer (a, b) {\n      var i\n\n      \n\n      var width = 0\n      var height = 0\n\n      var needsDepth = true\n      var needsStencil = true\n\n      var colorBuffer = null\n      var colorTexture = true\n      var colorFormat = 'rgba'\n      var colorType = 'uint8'\n      var colorCount = 1\n\n      var depthBuffer = null\n      var stencilBuffer = null\n      var depthStencilBuffer = null\n      var depthStencilTexture = false\n\n      if (typeof a === 'number') {\n        width = a | 0\n        height = (b | 0) || width\n      } else if (!a) {\n        width = height = 1\n      } else {\n        \n        var options = a\n\n        if ('shape' in options) {\n          var shape = options.shape\n          \n          width = shape[0]\n          height = shape[1]\n        } else {\n          if ('radius' in options) {\n            width = height = options.radius\n          }\n          if ('width' in options) {\n            width = options.width\n          }\n          if ('height' in options) {\n            height = options.height\n          }\n        }\n\n        if ('color' in options ||\n            'colors' in options) {\n          colorBuffer =\n            options.color ||\n            options.colors\n          if (Array.isArray(colorBuffer)) {\n            \n          }\n        }\n\n        if (!colorBuffer) {\n          if ('colorCount' in options) {\n            colorCount = options.colorCount | 0\n            \n          }\n\n          if ('colorTexture' in options) {\n            colorTexture = !!options.colorTexture\n            colorFormat = 'rgba4'\n          }\n\n          if ('colorType' in options) {\n            colorType = options.colorType\n            if (!colorTexture) {\n              if (colorType === 'half float' || colorType === 'float16') {\n                \n                colorFormat = 'rgba16f'\n              } else if (colorType === 'float' || colorType === 'float32') {\n                \n                colorFormat = 'rgba32f'\n              }\n            } else {\n              \n              \n            }\n            \n          }\n\n          if ('colorFormat' in options) {\n            colorFormat = options.colorFormat\n            if (colorTextureFormats.indexOf(colorFormat) >= 0) {\n              colorTexture = true\n            } else if (colorRenderbufferFormats.indexOf(colorFormat) >= 0) {\n              colorTexture = false\n            } else {\n              \n            }\n          }\n        }\n\n        if ('depthTexture' in options || 'depthStencilTexture' in options) {\n          depthStencilTexture = !!(options.depthTexture ||\n            options.depthStencilTexture)\n          \n        }\n\n        if ('depth' in options) {\n          if (typeof options.depth === 'boolean') {\n            needsDepth = options.depth\n          } else {\n            depthBuffer = options.depth\n            needsStencil = false\n          }\n        }\n\n        if ('stencil' in options) {\n          if (typeof options.stencil === 'boolean') {\n            needsStencil = options.stencil\n          } else {\n            stencilBuffer = options.stencil\n            needsDepth = false\n          }\n        }\n\n        if ('depthStencil' in options) {\n          if (typeof options.depthStencil === 'boolean') {\n            needsDepth = needsStencil = options.depthStencil\n          } else {\n            depthStencilBuffer = options.depthStencil\n            needsDepth = false\n            needsStencil = false\n          }\n        }\n      }\n\n      // parse attachments\n      var colorAttachments = null\n      var depthAttachment = null\n      var stencilAttachment = null\n      var depthStencilAttachment = null\n\n      // Set up color attachments\n      if (Array.isArray(colorBuffer)) {\n        colorAttachments = colorBuffer.map(parseAttachment)\n      } else if (colorBuffer) {\n        colorAttachments = [parseAttachment(colorBuffer)]\n      } else {\n        colorAttachments = new Array(colorCount)\n        for (i = 0; i < colorCount; ++i) {\n          colorAttachments[i] = allocAttachment(\n            width,\n            height,\n            colorTexture,\n            colorFormat,\n            colorType)\n        }\n      }\n\n      \n      \n\n      width = width || colorAttachments[0].width\n      height = height || colorAttachments[0].height\n\n      if (depthBuffer) {\n        depthAttachment = parseAttachment(depthBuffer)\n      } else if (needsDepth && !needsStencil) {\n        depthAttachment = allocAttachment(\n          width,\n          height,\n          depthStencilTexture,\n          'depth',\n          'uint32')\n      }\n\n      if (stencilBuffer) {\n        stencilAttachment = parseAttachment(stencilBuffer)\n      } else if (needsStencil && !needsDepth) {\n        stencilAttachment = allocAttachment(\n          width,\n          height,\n          false,\n          'stencil',\n          'uint8')\n      }\n\n      if (depthStencilBuffer) {\n        depthStencilAttachment = parseAttachment(depthStencilBuffer)\n      } else if (!depthBuffer && !stencilBuffer && needsStencil && needsDepth) {\n        depthStencilAttachment = allocAttachment(\n          width,\n          height,\n          depthStencilTexture,\n          'depth stencil',\n          'depth stencil')\n      }\n\n      \n\n      var commonColorAttachmentSize = null\n\n      for (i = 0; i < colorAttachments.length; ++i) {\n        incRefAndCheckShape(colorAttachments[i], width, height)\n        \n\n        if (colorAttachments[i] && colorAttachments[i].texture) {\n          var colorAttachmentSize =\n              textureFormatChannels[colorAttachments[i].texture._texture.format] *\n              textureTypeSizes[colorAttachments[i].texture._texture.type]\n\n          if (commonColorAttachmentSize === null) {\n            commonColorAttachmentSize = colorAttachmentSize\n          } else {\n            // We need to make sure that all color attachments have the same number of bitplanes\n            // (that is, the same numer of bits per pixel)\n            // This is required by the GLES2.0 standard. See the beginning of Chapter 4 in that document.\n            \n          }\n        }\n      }\n      incRefAndCheckShape(depthAttachment, width, height)\n      \n      incRefAndCheckShape(stencilAttachment, width, height)\n      \n      incRefAndCheckShape(depthStencilAttachment, width, height)\n      \n\n      // decrement references\n      decFBORefs(framebuffer)\n\n      framebuffer.width = width\n      framebuffer.height = height\n\n      framebuffer.colorAttachments = colorAttachments\n      framebuffer.depthAttachment = depthAttachment\n      framebuffer.stencilAttachment = stencilAttachment\n      framebuffer.depthStencilAttachment = depthStencilAttachment\n\n      reglFramebuffer.color = colorAttachments.map(unwrapAttachment)\n      reglFramebuffer.depth = unwrapAttachment(depthAttachment)\n      reglFramebuffer.stencil = unwrapAttachment(stencilAttachment)\n      reglFramebuffer.depthStencil = unwrapAttachment(depthStencilAttachment)\n\n      reglFramebuffer.width = framebuffer.width\n      reglFramebuffer.height = framebuffer.height\n\n      updateFramebuffer(framebuffer)\n\n      return reglFramebuffer\n    }\n\n    function resize (w_, h_) {\n      \n\n      var w = Math.max(w_ | 0, 1)\n      var h = Math.max((h_ | 0) || w, 1)\n      if (w === framebuffer.width && h === framebuffer.height) {\n        return reglFramebuffer\n      }\n\n      // resize all buffers\n      var colorAttachments = framebuffer.colorAttachments\n      for (var i = 0; i < colorAttachments.length; ++i) {\n        resizeAttachment(colorAttachments[i], w, h)\n      }\n      resizeAttachment(framebuffer.depthAttachment, w, h)\n      resizeAttachment(framebuffer.stencilAttachment, w, h)\n      resizeAttachment(framebuffer.depthStencilAttachment, w, h)\n\n      framebuffer.width = reglFramebuffer.width = w\n      framebuffer.height = reglFramebuffer.height = h\n\n      updateFramebuffer(framebuffer)\n\n      return reglFramebuffer\n    }\n\n    reglFramebuffer(a0, a1)\n\n    return extend(reglFramebuffer, {\n      resize: resize,\n      _reglType: 'framebuffer',\n      _framebuffer: framebuffer,\n      destroy: function () {\n        destroy(framebuffer)\n        decFBORefs(framebuffer)\n      },\n      use: function (block) {\n        framebufferState.setFBO({\n          framebuffer: reglFramebuffer\n        }, block)\n      }\n    })\n  }\n\n  function createCubeFBO (options) {\n    var faces = Array(6)\n\n    function reglFramebufferCube (a) {\n      var i\n\n      \n\n      var params = {\n        color: null\n      }\n\n      var radius = 0\n\n      var colorBuffer = null\n      var colorFormat = 'rgba'\n      var colorType = 'uint8'\n      var colorCount = 1\n\n      if (typeof a === 'number') {\n        radius = a | 0\n      } else if (!a) {\n        radius = 1\n      } else {\n        \n        var options = a\n\n        if ('shape' in options) {\n          var shape = options.shape\n          \n          \n          radius = shape[0]\n        } else {\n          if ('radius' in options) {\n            radius = options.radius | 0\n          }\n          if ('width' in options) {\n            radius = options.width | 0\n            if ('height' in options) {\n              \n            }\n          } else if ('height' in options) {\n            radius = options.height | 0\n          }\n        }\n\n        if ('color' in options ||\n            'colors' in options) {\n          colorBuffer =\n            options.color ||\n            options.colors\n          if (Array.isArray(colorBuffer)) {\n            \n          }\n        }\n\n        if (!colorBuffer) {\n          if ('colorCount' in options) {\n            colorCount = options.colorCount | 0\n            \n          }\n\n          if ('colorType' in options) {\n            \n            colorType = options.colorType\n          }\n\n          if ('colorFormat' in options) {\n            colorFormat = options.colorFormat\n            \n          }\n        }\n\n        if ('depth' in options) {\n          params.depth = options.depth\n        }\n\n        if ('stencil' in options) {\n          params.stencil = options.stencil\n        }\n\n        if ('depthStencil' in options) {\n          params.depthStencil = options.depthStencil\n        }\n      }\n\n      var colorCubes\n      if (colorBuffer) {\n        if (Array.isArray(colorBuffer)) {\n          colorCubes = []\n          for (i = 0; i < colorBuffer.length; ++i) {\n            colorCubes[i] = colorBuffer[i]\n          }\n        } else {\n          colorCubes = [ colorBuffer ]\n        }\n      } else {\n        colorCubes = Array(colorCount)\n        var cubeMapParams = {\n          radius: radius,\n          format: colorFormat,\n          type: colorType\n        }\n        for (i = 0; i < colorCount; ++i) {\n          colorCubes[i] = textureState.createCube(cubeMapParams)\n        }\n      }\n\n      // Check color cubes\n      params.color = Array(colorCubes.length)\n      for (i = 0; i < colorCubes.length; ++i) {\n        var cube = colorCubes[i]\n        \n        radius = radius || cube.width\n        \n        params.color[i] = {\n          target: GL_TEXTURE_CUBE_MAP_POSITIVE_X$2,\n          data: colorCubes[i]\n        }\n      }\n\n      for (i = 0; i < 6; ++i) {\n        for (var j = 0; j < colorCubes.length; ++j) {\n          params.color[j].target = GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + i\n        }\n        // reuse depth-stencil attachments across all cube maps\n        if (i > 0) {\n          params.depth = faces[0].depth\n          params.stencil = faces[0].stencil\n          params.depthStencil = faces[0].depthStencil\n        }\n        if (faces[i]) {\n          (faces[i])(params)\n        } else {\n          faces[i] = createFBO(params)\n        }\n      }\n\n      return extend(reglFramebufferCube, {\n        width: radius,\n        height: radius,\n        color: colorCubes\n      })\n    }\n\n    function resize (radius_) {\n      var i\n      var radius = radius_ | 0\n      \n\n      if (radius === reglFramebufferCube.width) {\n        return reglFramebufferCube\n      }\n\n      var colors = reglFramebufferCube.color\n      for (i = 0; i < colors.length; ++i) {\n        colors[i].resize(radius)\n      }\n\n      for (i = 0; i < 6; ++i) {\n        faces[i].resize(radius)\n      }\n\n      reglFramebufferCube.width = reglFramebufferCube.height = radius\n\n      return reglFramebufferCube\n    }\n\n    reglFramebufferCube(options)\n\n    return extend(reglFramebufferCube, {\n      faces: faces,\n      resize: resize,\n      _reglType: 'framebufferCube',\n      destroy: function () {\n        faces.forEach(function (f) {\n          f.destroy()\n        })\n      }\n    })\n  }\n\n  function restoreFramebuffers () {\n    framebufferState.cur = null\n    framebufferState.next = null\n    framebufferState.dirty = true\n    values(framebufferSet).forEach(function (fb) {\n      fb.framebuffer = gl.createFramebuffer()\n      updateFramebuffer(fb)\n    })\n  }\n\n  return extend(framebufferState, {\n    getFramebuffer: function (object) {\n      if (typeof object === 'function' && object._reglType === 'framebuffer') {\n        var fbo = object._framebuffer\n        if (fbo instanceof REGLFramebuffer) {\n          return fbo\n        }\n      }\n      return null\n    },\n    create: createFBO,\n    createCube: createCubeFBO,\n    clear: function () {\n      values(framebufferSet).forEach(destroy)\n    },\n    restore: restoreFramebuffers\n  })\n}\n\nvar GL_FLOAT$5 = 5126\nvar GL_ARRAY_BUFFER$1 = 34962\nvar GL_ELEMENT_ARRAY_BUFFER$1 = 34963\n\nfunction AttributeRecord () {\n  this.state = 0\n\n  this.x = 0.0\n  this.y = 0.0\n  this.z = 0.0\n  this.w = 0.0\n\n  this.buffer = null\n  this.size = 0\n  this.normalized = false\n  this.type = GL_FLOAT$5\n  this.offset = 0\n  this.stride = 0\n  this.divisor = 0\n}\n\nfunction wrapAttributeState (\n  gl,\n  extensions,\n  limits,\n  stats,\n  bufferState,\n  elementState,\n  drawState) {\n  var NUM_ATTRIBUTES = limits.maxAttributes\n  var attributeBindings = new Array(NUM_ATTRIBUTES)\n  for (var i = 0; i < NUM_ATTRIBUTES; ++i) {\n    attributeBindings[i] = new AttributeRecord()\n  }\n  var vaoCount = 0\n  var vaoSet = {}\n\n  var state = {\n    Record: AttributeRecord,\n    scope: {},\n    state: attributeBindings,\n    currentVAO: null,\n    targetVAO: null,\n    restore: extVAO() ? restoreVAO : function () {},\n    createVAO: createVAO,\n    getVAO: getVAO,\n    destroyBuffer: destroyBuffer,\n    setVAO: extVAO() ? setVAOEXT : setVAOEmulated,\n    clear: extVAO() ? destroyVAOEXT : function () {}\n  }\n\n  function destroyBuffer (buffer) {\n    for (var i = 0; i < attributeBindings.length; ++i) {\n      var record = attributeBindings[i]\n      if (record.buffer === buffer) {\n        gl.disableVertexAttribArray(i)\n        record.buffer = null\n      }\n    }\n  }\n\n  function extVAO () {\n    return extensions.oes_vertex_array_object\n  }\n\n  function extInstanced () {\n    return extensions.angle_instanced_arrays\n  }\n\n  function getVAO (vao) {\n    if (typeof vao === 'function' && vao._vao) {\n      return vao._vao\n    }\n    return null\n  }\n\n  function setVAOEXT (vao) {\n    if (vao === state.currentVAO) {\n      return\n    }\n    var ext = extVAO()\n    if (vao) {\n      ext.bindVertexArrayOES(vao.vao)\n    } else {\n      ext.bindVertexArrayOES(null)\n    }\n    state.currentVAO = vao\n  }\n\n  function setVAOEmulated (vao) {\n    if (vao === state.currentVAO) {\n      return\n    }\n    if (vao) {\n      vao.bindAttrs()\n    } else {\n      var exti = extInstanced()\n      for (var i = 0; i < attributeBindings.length; ++i) {\n        var binding = attributeBindings[i]\n        if (binding.buffer) {\n          gl.enableVertexAttribArray(i)\n          binding.buffer.bind()\n          gl.vertexAttribPointer(i, binding.size, binding.type, binding.normalized, binding.stride, binding.offfset)\n          if (exti && binding.divisor) {\n            exti.vertexAttribDivisorANGLE(i, binding.divisor)\n          }\n        } else {\n          gl.disableVertexAttribArray(i)\n          gl.vertexAttrib4f(i, binding.x, binding.y, binding.z, binding.w)\n        }\n      }\n      if (drawState.elements) {\n        gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, drawState.elements.buffer.buffer)\n      } else {\n        gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null)\n      }\n    }\n    state.currentVAO = vao\n  }\n\n  function destroyVAOEXT () {\n    values(vaoSet).forEach(function (vao) {\n      vao.destroy()\n    })\n  }\n\n  function REGLVAO () {\n    this.id = ++vaoCount\n    this.attributes = []\n    this.elements = null\n    this.ownsElements = false\n    this.count = 0\n    this.offset = 0\n    this.instances = -1\n    this.primitive = 4\n    var extension = extVAO()\n    if (extension) {\n      this.vao = extension.createVertexArrayOES()\n    } else {\n      this.vao = null\n    }\n    vaoSet[this.id] = this\n    this.buffers = []\n  }\n\n  REGLVAO.prototype.bindAttrs = function () {\n    var exti = extInstanced()\n    var attributes = this.attributes\n    for (var i = 0; i < attributes.length; ++i) {\n      var attr = attributes[i]\n      if (attr.buffer) {\n        gl.enableVertexAttribArray(i)\n        gl.bindBuffer(GL_ARRAY_BUFFER$1, attr.buffer.buffer)\n        gl.vertexAttribPointer(i, attr.size, attr.type, attr.normalized, attr.stride, attr.offset)\n        if (exti && attr.divisor) {\n          exti.vertexAttribDivisorANGLE(i, attr.divisor)\n        }\n      } else {\n        gl.disableVertexAttribArray(i)\n        gl.vertexAttrib4f(i, attr.x, attr.y, attr.z, attr.w)\n      }\n    }\n    for (var j = attributes.length; j < NUM_ATTRIBUTES; ++j) {\n      gl.disableVertexAttribArray(j)\n    }\n    var elements = elementState.getElements(this.elements)\n    if (elements) {\n      gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, elements.buffer.buffer)\n    } else {\n      gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null)\n    }\n  }\n\n  REGLVAO.prototype.refresh = function () {\n    var ext = extVAO()\n    if (ext) {\n      ext.bindVertexArrayOES(this.vao)\n      this.bindAttrs()\n      state.currentVAO = null\n      ext.bindVertexArrayOES(null)\n    }\n  }\n\n  REGLVAO.prototype.destroy = function () {\n    if (this.vao) {\n      var extension = extVAO()\n      if (this === state.currentVAO) {\n        state.currentVAO = null\n        extension.bindVertexArrayOES(null)\n      }\n      extension.deleteVertexArrayOES(this.vao)\n      this.vao = null\n    }\n    if (this.ownsElements) {\n      this.elements.destroy()\n      this.elements = null\n      this.ownsElements = false\n    }\n    if (vaoSet[this.id]) {\n      delete vaoSet[this.id]\n      stats.vaoCount -= 1\n    }\n  }\n\n  function restoreVAO () {\n    var ext = extVAO()\n    if (ext) {\n      values(vaoSet).forEach(function (vao) {\n        vao.refresh()\n      })\n    }\n  }\n\n  function createVAO (_attr) {\n    var vao = new REGLVAO()\n    stats.vaoCount += 1\n\n    function updateVAO (options) {\n      var attributes\n      if (Array.isArray(options)) {\n        attributes = options\n        if (vao.elements && vao.ownsElements) {\n          vao.elements.destroy()\n        }\n        vao.elements = null\n        vao.ownsElements = false\n        vao.offset = 0\n        vao.count = 0\n        vao.instances = -1\n        vao.primitive = 4\n      } else {\n        \n        \n        if (options.elements) {\n          var elements = options.elements\n          if (vao.ownsElements) {\n            if (typeof elements === 'function' && elements._reglType === 'elements') {\n              vao.elements.destroy()\n              vao.ownsElements = false\n            } else {\n              vao.elements(elements)\n              vao.ownsElements = false\n            }\n          } else if (elementState.getElements(options.elements)) {\n            vao.elements = options.elements\n            vao.ownsElements = false\n          } else {\n            vao.elements = elementState.create(options.elements)\n            vao.ownsElements = true\n          }\n        } else {\n          vao.elements = null\n          vao.ownsElements = false\n        }\n        attributes = options.attributes\n\n        // set default vao\n        vao.offset = 0\n        vao.count = -1\n        vao.instances = -1\n        vao.primitive = 4\n\n        // copy element properties\n        if (vao.elements) {\n          vao.count = vao.elements._elements.vertCount\n          vao.primitive = vao.elements._elements.primType\n        }\n\n        if ('offset' in options) {\n          vao.offset = options.offset | 0\n        }\n        if ('count' in options) {\n          vao.count = options.count | 0\n        }\n        if ('instances' in options) {\n          vao.instances = options.instances | 0\n        }\n        if ('primitive' in options) {\n          \n          vao.primitive = primTypes[options.primitive]\n        }\n\n        \n        \n      }\n\n      \n      \n\n      var bufUpdated = {}\n      var nattributes = vao.attributes\n      nattributes.length = attributes.length\n      for (var i = 0; i < attributes.length; ++i) {\n        var spec = attributes[i]\n        var rec = nattributes[i] = new AttributeRecord()\n        var data = spec.data || spec\n        if (Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data)) {\n          var buf\n          if (vao.buffers[i]) {\n            buf = vao.buffers[i]\n            if (isTypedArray(data) && buf._buffer.byteLength >= data.byteLength) {\n              buf.subdata(data)\n            } else {\n              buf.destroy()\n              vao.buffers[i] = null\n            }\n          }\n          if (!vao.buffers[i]) {\n            buf = vao.buffers[i] = bufferState.create(spec, GL_ARRAY_BUFFER$1, false, true)\n          }\n          rec.buffer = bufferState.getBuffer(buf)\n          rec.size = rec.buffer.dimension | 0\n          rec.normalized = false\n          rec.type = rec.buffer.dtype\n          rec.offset = 0\n          rec.stride = 0\n          rec.divisor = 0\n          rec.state = 1\n          bufUpdated[i] = 1\n        } else if (bufferState.getBuffer(spec)) {\n          rec.buffer = bufferState.getBuffer(spec)\n          rec.size = rec.buffer.dimension | 0\n          rec.normalized = false\n          rec.type = rec.buffer.dtype\n          rec.offset = 0\n          rec.stride = 0\n          rec.divisor = 0\n          rec.state = 1\n        } else if (bufferState.getBuffer(spec.buffer)) {\n          rec.buffer = bufferState.getBuffer(spec.buffer)\n          rec.size = ((+spec.size) || rec.buffer.dimension) | 0\n          rec.normalized = !!spec.normalized || false\n          if ('type' in spec) {\n            \n            rec.type = glTypes[spec.type]\n          } else {\n            rec.type = rec.buffer.dtype\n          }\n          rec.offset = (spec.offset || 0) | 0\n          rec.stride = (spec.stride || 0) | 0\n          rec.divisor = (spec.divisor || 0) | 0\n          rec.state = 1\n\n          \n          \n          \n          \n          \n        } else if ('x' in spec) {\n          \n          rec.x = +spec.x || 0\n          rec.y = +spec.y || 0\n          rec.z = +spec.z || 0\n          rec.w = +spec.w || 0\n          rec.state = 2\n        } else {\n          \n        }\n      }\n\n      // retire unused buffers\n      for (var j = 0; j < vao.buffers.length; ++j) {\n        if (!bufUpdated[j] && vao.buffers[j]) {\n          vao.buffers[j].destroy()\n          vao.buffers[j] = null\n        }\n      }\n\n      vao.refresh()\n      return updateVAO\n    }\n\n    updateVAO.destroy = function () {\n      for (var j = 0; j < vao.buffers.length; ++j) {\n        if (vao.buffers[j]) {\n          vao.buffers[j].destroy()\n        }\n      }\n      vao.buffers.length = 0\n\n      if (vao.ownsElements) {\n        vao.elements.destroy()\n        vao.elements = null\n        vao.ownsElements = false\n      }\n\n      vao.destroy()\n    }\n\n    updateVAO._vao = vao\n    updateVAO._reglType = 'vao'\n\n    return updateVAO(_attr)\n  }\n\n  return state\n}\n\nvar GL_FRAGMENT_SHADER = 35632\nvar GL_VERTEX_SHADER = 35633\n\nvar GL_ACTIVE_UNIFORMS = 0x8B86\nvar GL_ACTIVE_ATTRIBUTES = 0x8B89\n\nfunction wrapShaderState (gl, stringStore, stats, config) {\n  // ===================================================\n  // glsl compilation and linking\n  // ===================================================\n  var fragShaders = {}\n  var vertShaders = {}\n\n  function ActiveInfo (name, id, location, info) {\n    this.name = name\n    this.id = id\n    this.location = location\n    this.info = info\n  }\n\n  function insertActiveInfo (list, info) {\n    for (var i = 0; i < list.length; ++i) {\n      if (list[i].id === info.id) {\n        list[i].location = info.location\n        return\n      }\n    }\n    list.push(info)\n  }\n\n  function getShader (type, id, command) {\n    var cache = type === GL_FRAGMENT_SHADER ? fragShaders : vertShaders\n    var shader = cache[id]\n\n    if (!shader) {\n      var source = stringStore.str(id)\n      shader = gl.createShader(type)\n      gl.shaderSource(shader, source)\n      gl.compileShader(shader)\n      \n      cache[id] = shader\n    }\n\n    return shader\n  }\n\n  // ===================================================\n  // program linking\n  // ===================================================\n  var programCache = {}\n  var programList = []\n\n  var PROGRAM_COUNTER = 0\n\n  function REGLProgram (fragId, vertId) {\n    this.id = PROGRAM_COUNTER++\n    this.fragId = fragId\n    this.vertId = vertId\n    this.program = null\n    this.uniforms = []\n    this.attributes = []\n    this.refCount = 1\n\n    if (config.profile) {\n      this.stats = {\n        uniformsCount: 0,\n        attributesCount: 0\n      }\n    }\n  }\n\n  function linkProgram (desc, command, attributeLocations) {\n    var i, info\n\n    // -------------------------------\n    // compile & link\n    // -------------------------------\n    var fragShader = getShader(GL_FRAGMENT_SHADER, desc.fragId)\n    var vertShader = getShader(GL_VERTEX_SHADER, desc.vertId)\n\n    var program = desc.program = gl.createProgram()\n    gl.attachShader(program, fragShader)\n    gl.attachShader(program, vertShader)\n    if (attributeLocations) {\n      for (i = 0; i < attributeLocations.length; ++i) {\n        var binding = attributeLocations[i]\n        gl.bindAttribLocation(program, binding[0], binding[1])\n      }\n    }\n\n    gl.linkProgram(program)\n    \n\n    // -------------------------------\n    // grab uniforms\n    // -------------------------------\n    var numUniforms = gl.getProgramParameter(program, GL_ACTIVE_UNIFORMS)\n    if (config.profile) {\n      desc.stats.uniformsCount = numUniforms\n    }\n    var uniforms = desc.uniforms\n    for (i = 0; i < numUniforms; ++i) {\n      info = gl.getActiveUniform(program, i)\n      if (info) {\n        if (info.size > 1) {\n          for (var j = 0; j < info.size; ++j) {\n            var name = info.name.replace('[0]', '[' + j + ']')\n            insertActiveInfo(uniforms, new ActiveInfo(\n              name,\n              stringStore.id(name),\n              gl.getUniformLocation(program, name),\n              info))\n          }\n        } else {\n          insertActiveInfo(uniforms, new ActiveInfo(\n            info.name,\n            stringStore.id(info.name),\n            gl.getUniformLocation(program, info.name),\n            info))\n        }\n      }\n    }\n\n    // -------------------------------\n    // grab attributes\n    // -------------------------------\n    var numAttributes = gl.getProgramParameter(program, GL_ACTIVE_ATTRIBUTES)\n    if (config.profile) {\n      desc.stats.attributesCount = numAttributes\n    }\n\n    var attributes = desc.attributes\n    for (i = 0; i < numAttributes; ++i) {\n      info = gl.getActiveAttrib(program, i)\n      if (info) {\n        insertActiveInfo(attributes, new ActiveInfo(\n          info.name,\n          stringStore.id(info.name),\n          gl.getAttribLocation(program, info.name),\n          info))\n      }\n    }\n  }\n\n  if (config.profile) {\n    stats.getMaxUniformsCount = function () {\n      var m = 0\n      programList.forEach(function (desc) {\n        if (desc.stats.uniformsCount > m) {\n          m = desc.stats.uniformsCount\n        }\n      })\n      return m\n    }\n\n    stats.getMaxAttributesCount = function () {\n      var m = 0\n      programList.forEach(function (desc) {\n        if (desc.stats.attributesCount > m) {\n          m = desc.stats.attributesCount\n        }\n      })\n      return m\n    }\n  }\n\n  function restoreShaders () {\n    fragShaders = {}\n    vertShaders = {}\n    for (var i = 0; i < programList.length; ++i) {\n      linkProgram(programList[i], null, programList[i].attributes.map(function (info) {\n        return [info.location, info.name]\n      }))\n    }\n  }\n\n  return {\n    clear: function () {\n      var deleteShader = gl.deleteShader.bind(gl)\n      values(fragShaders).forEach(deleteShader)\n      fragShaders = {}\n      values(vertShaders).forEach(deleteShader)\n      vertShaders = {}\n\n      programList.forEach(function (desc) {\n        gl.deleteProgram(desc.program)\n      })\n      programList.length = 0\n      programCache = {}\n\n      stats.shaderCount = 0\n    },\n\n    program: function (vertId, fragId, command, attribLocations) {\n      \n      \n\n      var cache = programCache[fragId]\n      if (!cache) {\n        cache = programCache[fragId] = {}\n      }\n      var prevProgram = cache[vertId]\n      if (prevProgram) {\n        prevProgram.refCount++\n        if (!attribLocations) {\n          return prevProgram\n        }\n      }\n      var program = new REGLProgram(fragId, vertId)\n      stats.shaderCount++\n      linkProgram(program, command, attribLocations)\n      if (!prevProgram) {\n        cache[vertId] = program\n      }\n      programList.push(program)\n      return extend(program, {\n        destroy: function () {\n          program.refCount--\n          if (program.refCount <= 0) {\n            gl.deleteProgram(program.program)\n            var idx = programList.indexOf(program)\n            programList.splice(idx, 1)\n            stats.shaderCount--\n          }\n          // no program is linked to this vert anymore\n          if (cache[program.vertId].refCount <= 0) {\n            gl.deleteShader(vertShaders[program.vertId])\n            delete vertShaders[program.vertId]\n            delete programCache[program.fragId][program.vertId]\n          }\n          // no program is linked to this frag anymore\n          if (!Object.keys(programCache[program.fragId]).length) {\n            gl.deleteShader(fragShaders[program.fragId])\n            delete fragShaders[program.fragId]\n            delete programCache[program.fragId]\n          }\n        }\n      })\n    },\n\n    restore: restoreShaders,\n\n    shader: getShader,\n\n    frag: -1,\n    vert: -1\n  }\n}\n\nvar GL_RGBA$3 = 6408\nvar GL_UNSIGNED_BYTE$6 = 5121\nvar GL_PACK_ALIGNMENT = 0x0D05\nvar GL_FLOAT$6 = 0x1406 // 5126\n\nfunction wrapReadPixels (\n  gl,\n  framebufferState,\n  reglPoll,\n  context,\n  glAttributes,\n  extensions,\n  limits) {\n  function readPixelsImpl (input) {\n    var type\n    if (framebufferState.next === null) {\n      \n      type = GL_UNSIGNED_BYTE$6\n    } else {\n      \n      type = framebufferState.next.colorAttachments[0].texture._texture.type\n\n      \n    }\n\n    var x = 0\n    var y = 0\n    var width = context.framebufferWidth\n    var height = context.framebufferHeight\n    var data = null\n\n    if (isTypedArray(input)) {\n      data = input\n    } else if (input) {\n      \n      x = input.x | 0\n      y = input.y | 0\n      \n      \n      width = (input.width || (context.framebufferWidth - x)) | 0\n      height = (input.height || (context.framebufferHeight - y)) | 0\n      data = input.data || null\n    }\n\n    // sanity check input.data\n    if (data) {\n      if (type === GL_UNSIGNED_BYTE$6) {\n        \n      } else if (type === GL_FLOAT$6) {\n        \n      }\n    }\n\n    \n    \n\n    // Update WebGL state\n    reglPoll()\n\n    // Compute size\n    var size = width * height * 4\n\n    // Allocate data\n    if (!data) {\n      if (type === GL_UNSIGNED_BYTE$6) {\n        data = new Uint8Array(size)\n      } else if (type === GL_FLOAT$6) {\n        data = data || new Float32Array(size)\n      }\n    }\n\n    // Type check\n    \n    \n\n    // Run read pixels\n    gl.pixelStorei(GL_PACK_ALIGNMENT, 4)\n    gl.readPixels(x, y, width, height, GL_RGBA$3,\n      type,\n      data)\n\n    return data\n  }\n\n  function readPixelsFBO (options) {\n    var result\n    framebufferState.setFBO({\n      framebuffer: options.framebuffer\n    }, function () {\n      result = readPixelsImpl(options)\n    })\n    return result\n  }\n\n  function readPixels (options) {\n    if (!options || !('framebuffer' in options)) {\n      return readPixelsImpl(options)\n    } else {\n      return readPixelsFBO(options)\n    }\n  }\n\n  return readPixels\n}\n\n/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2 Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n * Also http://anmar.eu.org/projects/jssha2/\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_sha256(s)    { return rstr2hex(rstr_sha256(str2rstr_utf8(s))); }\n/*\n * Calculate the sha256 of a raw string\n */\nfunction rstr_sha256(s)\n{\n  return binb2rstr(binb_sha256(rstr2binb(s), s.length * 8));\n}\n\n/*\n * Calculate the HMAC-sha256 of a key and some data (raw strings)\n */\nfunction rstr_hmac_sha256(key, data)\n{\n  var bkey = rstr2binb(key);\n  if(bkey.length > 16) bkey = binb_sha256(bkey, key.length * 8);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = binb_sha256(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n  return binb2rstr(binb_sha256(opad.concat(hash), 512 + 256));\n}\n\n/*\n * Convert a raw string to a hex string\n */\nfunction rstr2hex(input)\n{\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var output = \"\";\n  var x;\n  for(var i = 0; i < input.length; i++)\n  {\n    x = input.charCodeAt(i);\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\n           +  hex_tab.charAt( x        & 0x0F);\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to a base-64 string\n */\nfunction rstr2b64(input)\n{\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var output = \"\";\n  var len = input.length;\n  for(var i = 0; i < len; i += 3)\n  {\n    var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\n    }\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to an arbitrary string encoding\n */\nfunction rstr2any(input, encoding)\n{\n  var divisor = encoding.length;\n  var remainders = Array();\n  var i, q, x, quotient;\n\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\n  var dividend = Array(Math.ceil(input.length / 2));\n  for(i = 0; i < dividend.length; i++)\n  {\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n  }\n\n  /*\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. We stop when the dividend is zero.\n   * All remainders are stored for later use.\n   */\n  while(dividend.length > 0)\n  {\n    quotient = Array();\n    x = 0;\n    for(i = 0; i < dividend.length; i++)\n    {\n      x = (x << 16) + dividend[i];\n      q = Math.floor(x / divisor);\n      x -= q * divisor;\n      if(quotient.length > 0 || q > 0)\n        quotient[quotient.length] = q;\n    }\n    remainders[remainders.length] = x;\n    dividend = quotient;\n  }\n\n  /* Convert the remainders to the output string */\n  var output = \"\";\n  for(i = remainders.length - 1; i >= 0; i--)\n    output += encoding.charAt(remainders[i]);\n\n  /* Append leading zero equivalents */\n  var full_length = Math.ceil(input.length * 8 /\n                                    (Math.log(encoding.length) / Math.log(2)))\n  for(i = output.length; i < full_length; i++)\n    output = encoding[0] + output;\n\n  return output;\n}\n\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */\nfunction str2rstr_utf8(input)\n{\n  var output = \"\";\n  var i = -1;\n  var x, y;\n\n  while(++i < input.length)\n  {\n    /* Decode utf-16 surrogate pairs */\n    x = input.charCodeAt(i);\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\n    {\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n      i++;\n    }\n\n    /* Encode output as utf-8 */\n    if(x <= 0x7F)\n      output += String.fromCharCode(x);\n    else if(x <= 0x7FF)\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0xFFFF)\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0x1FFFFF)\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                                    0x80 | ((x >>> 12) & 0x3F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction rstr2binb(input)\n{\n  var output = Array(input.length >> 2);\n  for(var i = 0; i < output.length; i++)\n    output[i] = 0;\n  for(var i = 0; i < input.length * 8; i += 8)\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\n  return output;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2rstr(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length * 32; i += 8)\n    output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\n  return output;\n}\n\n/*\n * Main sha256 function, with its support functions\n */\nfunction sha256_S (X, n) {return ( X >>> n ) | (X << (32 - n));}\nfunction sha256_R (X, n) {return ( X >>> n );}\nfunction sha256_Ch(x, y, z) {return ((x & y) ^ ((~x) & z));}\nfunction sha256_Maj(x, y, z) {return ((x & y) ^ (x & z) ^ (y & z));}\nfunction sha256_Sigma0256(x) {return (sha256_S(x, 2) ^ sha256_S(x, 13) ^ sha256_S(x, 22));}\nfunction sha256_Sigma1256(x) {return (sha256_S(x, 6) ^ sha256_S(x, 11) ^ sha256_S(x, 25));}\nfunction sha256_Gamma0256(x) {return (sha256_S(x, 7) ^ sha256_S(x, 18) ^ sha256_R(x, 3));}\nfunction sha256_Gamma1256(x) {return (sha256_S(x, 17) ^ sha256_S(x, 19) ^ sha256_R(x, 10));}\nvar sha256_K = new Array\n(\n  1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993,\n  -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987,\n  1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522,\n  264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986,\n  -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585,\n  113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,\n  1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885,\n  -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344,\n  430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,\n  1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872,\n  -1866530822, -1538233109, -1090935817, -965641998\n);\n\nfunction binb_sha256(m, l)\n{\n  var HASH = new Array(1779033703, -1150833019, 1013904242, -1521486534,\n                       1359893119, -1694144372, 528734635, 1541459225);\n  var W = new Array(64);\n  var a, b, c, d, e, f, g, h;\n  var i, j, T1, T2;\n\n  /* append padding */\n  m[l >> 5] |= 0x80 << (24 - l % 32);\n  m[((l + 64 >> 9) << 4) + 15] = l;\n\n  for(i = 0; i < m.length; i += 16)\n  {\n    a = HASH[0];\n    b = HASH[1];\n    c = HASH[2];\n    d = HASH[3];\n    e = HASH[4];\n    f = HASH[5];\n    g = HASH[6];\n    h = HASH[7];\n\n    for(j = 0; j < 64; j++)\n    {\n      if (j < 16) W[j] = m[j + i];\n      else W[j] = safe_add(safe_add(safe_add(sha256_Gamma1256(W[j - 2]), W[j - 7]),\n                                            sha256_Gamma0256(W[j - 15])), W[j - 16]);\n\n      T1 = safe_add(safe_add(safe_add(safe_add(h, sha256_Sigma1256(e)), sha256_Ch(e, f, g)),\n                                                          sha256_K[j]), W[j]);\n      T2 = safe_add(sha256_Sigma0256(a), sha256_Maj(a, b, c));\n      h = g;\n      g = f;\n      f = e;\n      e = safe_add(d, T1);\n      d = c;\n      c = b;\n      b = a;\n      a = safe_add(T1, T2);\n    }\n\n    HASH[0] = safe_add(a, HASH[0]);\n    HASH[1] = safe_add(b, HASH[1]);\n    HASH[2] = safe_add(c, HASH[2]);\n    HASH[3] = safe_add(d, HASH[3]);\n    HASH[4] = safe_add(e, HASH[4]);\n    HASH[5] = safe_add(f, HASH[5]);\n    HASH[6] = safe_add(g, HASH[6]);\n    HASH[7] = safe_add(h, HASH[7]);\n  }\n  return HASH;\n}\n\nfunction safe_add (x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\nfunction slice (x) {\n  return Array.prototype.slice.call(x)\n}\n\nfunction join (x) {\n  return slice(x).join('')\n}\n\nfunction createEnvironment (options) {\n  var cache = options && options.cache\n\n  // Unique variable id counter\n  var varCounter = 0\n\n  // Linked values are passed from this scope into the generated code block\n  // Calling link() passes a value into the generated scope and returns\n  // the variable name which it is bound to\n  var linkedNames = []\n  var linkedValues = []\n  var isStable = []\n  function link (value, options) {\n    var stable = options && options.stable\n    if (!stable) {\n      for (var i = 0; i < linkedValues.length; ++i) {\n        if (linkedValues[i] === value && !isStable[i]) {\n          return linkedNames[i]\n        }\n      }\n    }\n\n    var name = 'g' + (varCounter++)\n    linkedNames.push(name)\n    linkedValues.push(value)\n    isStable.push(stable)\n    return name\n  }\n\n  // create a code block\n  function block () {\n    var code = []\n    function push () {\n      code.push.apply(code, slice(arguments))\n    }\n\n    var vars = []\n    function def () {\n      var name = 'v' + (varCounter++)\n      vars.push(name)\n\n      if (arguments.length > 0) {\n        code.push(name, '=')\n        code.push.apply(code, slice(arguments))\n        code.push(';')\n      }\n\n      return name\n    }\n\n    return extend(push, {\n      def: def,\n      toString: function () {\n        return join([\n          (vars.length > 0 ? 'var ' + vars.join(',') + ';' : ''),\n          join(code)\n        ])\n      }\n    })\n  }\n\n  function scope () {\n    var entry = block()\n    var exit = block()\n\n    var entryToString = entry.toString\n    var exitToString = exit.toString\n\n    function save (object, prop) {\n      exit(object, prop, '=', entry.def(object, prop), ';')\n    }\n\n    return extend(function () {\n      entry.apply(entry, slice(arguments))\n    }, {\n      def: entry.def,\n      entry: entry,\n      exit: exit,\n      save: save,\n      set: function (object, prop, value) {\n        save(object, prop)\n        entry(object, prop, '=', value, ';')\n      },\n      toString: function () {\n        return entryToString() + exitToString()\n      }\n    })\n  }\n\n  function conditional () {\n    var pred = join(arguments)\n    var thenBlock = scope()\n    var elseBlock = scope()\n\n    var thenToString = thenBlock.toString\n    var elseToString = elseBlock.toString\n\n    return extend(thenBlock, {\n      then: function () {\n        thenBlock.apply(thenBlock, slice(arguments))\n        return this\n      },\n      else: function () {\n        elseBlock.apply(elseBlock, slice(arguments))\n        return this\n      },\n      toString: function () {\n        var elseClause = elseToString()\n        if (elseClause) {\n          elseClause = 'else{' + elseClause + '}'\n        }\n        return join([\n          'if(', pred, '){',\n          thenToString(),\n          '}', elseClause\n        ])\n      }\n    })\n  }\n\n  // procedure list\n  var globalBlock = block()\n  var procedures = {}\n  function proc (name, count) {\n    var args = []\n    function arg () {\n      var name = 'a' + args.length\n      args.push(name)\n      return name\n    }\n\n    count = count || 0\n    for (var i = 0; i < count; ++i) {\n      arg()\n    }\n\n    var body = scope()\n    var bodyToString = body.toString\n\n    var result = procedures[name] = extend(body, {\n      arg: arg,\n      toString: function () {\n        return join([\n          'function(', args.join(), '){',\n          bodyToString(),\n          '}'\n        ])\n      }\n    })\n\n    return result\n  }\n\n  function compile () {\n    var code = ['\"use strict\";',\n      globalBlock,\n      'return {']\n    Object.keys(procedures).forEach(function (name) {\n      code.push('\"', name, '\":', procedures[name].toString(), ',')\n    })\n    code.push('}')\n    var src = join(code)\n      .replace(/;/g, ';\\n')\n      .replace(/}/g, '}\\n')\n      .replace(/{/g, '{\\n')\n\n    var key\n    if (cache) {\n      key = hex_sha256(src);\n\n      if (cache[key]) {\n        return cache[key].apply(null, linkedValues)\n      }\n    }\n\n    var proc = Function.apply(null, linkedNames.concat(src))\n\n    if (cache) {\n      cache[key] = proc\n    }\n    return proc.apply(null, linkedValues)\n  }\n\n  return {\n    global: globalBlock,\n    link: link,\n    block: block,\n    proc: proc,\n    scope: scope,\n    cond: conditional,\n    compile: compile\n  }\n}\n\n// \"cute\" names for vector components\nvar CUTE_COMPONENTS = 'xyzw'.split('')\n\nvar GL_UNSIGNED_BYTE$7 = 5121\n\nvar ATTRIB_STATE_POINTER = 1\nvar ATTRIB_STATE_CONSTANT = 2\n\nvar DYN_FUNC$1 = 0\nvar DYN_PROP$1 = 1\nvar DYN_CONTEXT$1 = 2\nvar DYN_STATE$1 = 3\nvar DYN_THUNK = 4\nvar DYN_CONSTANT$1 = 5\nvar DYN_ARRAY$1 = 6\n\nvar S_DITHER = 'dither'\nvar S_BLEND_ENABLE = 'blend.enable'\nvar S_BLEND_COLOR = 'blend.color'\nvar S_BLEND_EQUATION = 'blend.equation'\nvar S_BLEND_FUNC = 'blend.func'\nvar S_DEPTH_ENABLE = 'depth.enable'\nvar S_DEPTH_FUNC = 'depth.func'\nvar S_DEPTH_RANGE = 'depth.range'\nvar S_DEPTH_MASK = 'depth.mask'\nvar S_COLOR_MASK = 'colorMask'\nvar S_CULL_ENABLE = 'cull.enable'\nvar S_CULL_FACE = 'cull.face'\nvar S_FRONT_FACE = 'frontFace'\nvar S_LINE_WIDTH = 'lineWidth'\nvar S_POLYGON_OFFSET_ENABLE = 'polygonOffset.enable'\nvar S_POLYGON_OFFSET_OFFSET = 'polygonOffset.offset'\nvar S_SAMPLE_ALPHA = 'sample.alpha'\nvar S_SAMPLE_ENABLE = 'sample.enable'\nvar S_SAMPLE_COVERAGE = 'sample.coverage'\nvar S_STENCIL_ENABLE = 'stencil.enable'\nvar S_STENCIL_MASK = 'stencil.mask'\nvar S_STENCIL_FUNC = 'stencil.func'\nvar S_STENCIL_OPFRONT = 'stencil.opFront'\nvar S_STENCIL_OPBACK = 'stencil.opBack'\nvar S_SCISSOR_ENABLE = 'scissor.enable'\nvar S_SCISSOR_BOX = 'scissor.box'\nvar S_VIEWPORT = 'viewport'\n\nvar S_PROFILE = 'profile'\n\nvar S_FRAMEBUFFER = 'framebuffer'\nvar S_VERT = 'vert'\nvar S_FRAG = 'frag'\nvar S_ELEMENTS = 'elements'\nvar S_PRIMITIVE = 'primitive'\nvar S_COUNT = 'count'\nvar S_OFFSET = 'offset'\nvar S_INSTANCES = 'instances'\nvar S_VAO = 'vao'\n\nvar SUFFIX_WIDTH = 'Width'\nvar SUFFIX_HEIGHT = 'Height'\n\nvar S_FRAMEBUFFER_WIDTH = S_FRAMEBUFFER + SUFFIX_WIDTH\nvar S_FRAMEBUFFER_HEIGHT = S_FRAMEBUFFER + SUFFIX_HEIGHT\nvar S_VIEWPORT_WIDTH = S_VIEWPORT + SUFFIX_WIDTH\nvar S_VIEWPORT_HEIGHT = S_VIEWPORT + SUFFIX_HEIGHT\nvar S_DRAWINGBUFFER = 'drawingBuffer'\nvar S_DRAWINGBUFFER_WIDTH = S_DRAWINGBUFFER + SUFFIX_WIDTH\nvar S_DRAWINGBUFFER_HEIGHT = S_DRAWINGBUFFER + SUFFIX_HEIGHT\n\nvar NESTED_OPTIONS = [\n  S_BLEND_FUNC,\n  S_BLEND_EQUATION,\n  S_STENCIL_FUNC,\n  S_STENCIL_OPFRONT,\n  S_STENCIL_OPBACK,\n  S_SAMPLE_COVERAGE,\n  S_VIEWPORT,\n  S_SCISSOR_BOX,\n  S_POLYGON_OFFSET_OFFSET\n]\n\nvar GL_ARRAY_BUFFER$2 = 34962\nvar GL_ELEMENT_ARRAY_BUFFER$2 = 34963\n\nvar GL_CULL_FACE = 0x0B44\nvar GL_BLEND = 0x0BE2\nvar GL_DITHER = 0x0BD0\nvar GL_STENCIL_TEST = 0x0B90\nvar GL_DEPTH_TEST = 0x0B71\nvar GL_SCISSOR_TEST = 0x0C11\nvar GL_POLYGON_OFFSET_FILL = 0x8037\nvar GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E\nvar GL_SAMPLE_COVERAGE = 0x80A0\n\nvar GL_FLOAT$7 = 5126\nvar GL_FLOAT_VEC2 = 35664\nvar GL_FLOAT_VEC3 = 35665\nvar GL_FLOAT_VEC4 = 35666\nvar GL_INT$2 = 5124\nvar GL_INT_VEC2 = 35667\nvar GL_INT_VEC3 = 35668\nvar GL_INT_VEC4 = 35669\nvar GL_BOOL = 35670\nvar GL_BOOL_VEC2 = 35671\nvar GL_BOOL_VEC3 = 35672\nvar GL_BOOL_VEC4 = 35673\nvar GL_FLOAT_MAT2 = 35674\nvar GL_FLOAT_MAT3 = 35675\nvar GL_FLOAT_MAT4 = 35676\nvar GL_SAMPLER_2D = 35678\nvar GL_SAMPLER_CUBE = 35680\n\nvar GL_TRIANGLES$1 = 4\n\nvar GL_FRONT = 1028\nvar GL_BACK = 1029\nvar GL_CW = 0x0900\nvar GL_CCW = 0x0901\nvar GL_MIN_EXT = 0x8007\nvar GL_MAX_EXT = 0x8008\nvar GL_ALWAYS = 519\nvar GL_KEEP = 7680\nvar GL_ZERO = 0\nvar GL_ONE = 1\nvar GL_FUNC_ADD = 0x8006\nvar GL_LESS = 513\n\nvar GL_FRAMEBUFFER$2 = 0x8D40\nvar GL_COLOR_ATTACHMENT0$2 = 0x8CE0\n\nvar blendFuncs = {\n  '0': 0,\n  '1': 1,\n  'zero': 0,\n  'one': 1,\n  'src color': 768,\n  'one minus src color': 769,\n  'src alpha': 770,\n  'one minus src alpha': 771,\n  'dst color': 774,\n  'one minus dst color': 775,\n  'dst alpha': 772,\n  'one minus dst alpha': 773,\n  'constant color': 32769,\n  'one minus constant color': 32770,\n  'constant alpha': 32771,\n  'one minus constant alpha': 32772,\n  'src alpha saturate': 776\n}\n\nvar compareFuncs = {\n  'never': 512,\n  'less': 513,\n  '<': 513,\n  'equal': 514,\n  '=': 514,\n  '==': 514,\n  '===': 514,\n  'lequal': 515,\n  '<=': 515,\n  'greater': 516,\n  '>': 516,\n  'notequal': 517,\n  '!=': 517,\n  '!==': 517,\n  'gequal': 518,\n  '>=': 518,\n  'always': 519\n}\n\nvar stencilOps = {\n  '0': 0,\n  'zero': 0,\n  'keep': 7680,\n  'replace': 7681,\n  'increment': 7682,\n  'decrement': 7683,\n  'increment wrap': 34055,\n  'decrement wrap': 34056,\n  'invert': 5386\n}\n\nvar orientationType = {\n  'cw': GL_CW,\n  'ccw': GL_CCW\n}\n\nfunction isBufferArgs (x) {\n  return Array.isArray(x) ||\n    isTypedArray(x) ||\n    isNDArrayLike(x)\n}\n\n// Make sure viewport is processed first\nfunction sortState (state) {\n  return state.sort(function (a, b) {\n    if (a === S_VIEWPORT) {\n      return -1\n    } else if (b === S_VIEWPORT) {\n      return 1\n    }\n    return (a < b) ? -1 : 1\n  })\n}\n\nfunction Declaration (thisDep, contextDep, propDep, append) {\n  this.thisDep = thisDep\n  this.contextDep = contextDep\n  this.propDep = propDep\n  this.append = append\n}\n\nfunction isStatic (decl) {\n  return decl && !(decl.thisDep || decl.contextDep || decl.propDep)\n}\n\nfunction createStaticDecl (append) {\n  return new Declaration(false, false, false, append)\n}\n\nfunction createDynamicDecl (dyn, append) {\n  var type = dyn.type\n  if (type === DYN_FUNC$1) {\n    var numArgs = dyn.data.length\n    return new Declaration(\n      true,\n      numArgs >= 1,\n      numArgs >= 2,\n      append)\n  } else if (type === DYN_THUNK) {\n    var data = dyn.data\n    return new Declaration(\n      data.thisDep,\n      data.contextDep,\n      data.propDep,\n      append)\n  } else if (type === DYN_CONSTANT$1) {\n    return new Declaration(\n      false,\n      false,\n      false,\n      append)\n  } else if (type === DYN_ARRAY$1) {\n    var thisDep = false\n    var contextDep = false\n    var propDep = false\n    for (var i = 0; i < dyn.data.length; ++i) {\n      var subDyn = dyn.data[i]\n      if (subDyn.type === DYN_PROP$1) {\n        propDep = true\n      } else if (subDyn.type === DYN_CONTEXT$1) {\n        contextDep = true\n      } else if (subDyn.type === DYN_STATE$1) {\n        thisDep = true\n      } else if (subDyn.type === DYN_FUNC$1) {\n        thisDep = true\n        var subArgs = subDyn.data\n        if (subArgs >= 1) {\n          contextDep = true\n        }\n        if (subArgs >= 2) {\n          propDep = true\n        }\n      } else if (subDyn.type === DYN_THUNK) {\n        thisDep = thisDep || subDyn.data.thisDep\n        contextDep = contextDep || subDyn.data.contextDep\n        propDep = propDep || subDyn.data.propDep\n      }\n    }\n    return new Declaration(\n      thisDep,\n      contextDep,\n      propDep,\n      append)\n  } else {\n    return new Declaration(\n      type === DYN_STATE$1,\n      type === DYN_CONTEXT$1,\n      type === DYN_PROP$1,\n      append)\n  }\n}\n\nvar SCOPE_DECL = new Declaration(false, false, false, function () {})\n\nfunction reglCore (\n  gl,\n  stringStore,\n  extensions,\n  limits,\n  bufferState,\n  elementState,\n  textureState,\n  framebufferState,\n  uniformState,\n  attributeState,\n  shaderState,\n  drawState,\n  contextState,\n  timer,\n  cachedCode,\n  config) {\n  var AttributeRecord = attributeState.Record\n\n  var blendEquations = {\n    'add': 32774,\n    'subtract': 32778,\n    'reverse subtract': 32779\n  }\n  if (extensions.ext_blend_minmax) {\n    blendEquations.min = GL_MIN_EXT\n    blendEquations.max = GL_MAX_EXT\n  }\n\n  var extInstancing = extensions.angle_instanced_arrays\n  var extDrawBuffers = extensions.webgl_draw_buffers\n  var extVertexArrays = extensions.oes_vertex_array_object\n\n  // ===================================================\n  // ===================================================\n  // WEBGL STATE\n  // ===================================================\n  // ===================================================\n  var currentState = {\n    dirty: true,\n    profile: config.profile\n  }\n  var nextState = {}\n  var GL_STATE_NAMES = []\n  var GL_FLAGS = {}\n  var GL_VARIABLES = {}\n\n  function propName (name) {\n    return name.replace('.', '_')\n  }\n\n  function stateFlag (sname, cap, init) {\n    var name = propName(sname)\n    GL_STATE_NAMES.push(sname)\n    nextState[name] = currentState[name] = !!init\n    GL_FLAGS[name] = cap\n  }\n\n  function stateVariable (sname, func, init) {\n    var name = propName(sname)\n    GL_STATE_NAMES.push(sname)\n    if (Array.isArray(init)) {\n      currentState[name] = init.slice()\n      nextState[name] = init.slice()\n    } else {\n      currentState[name] = nextState[name] = init\n    }\n    GL_VARIABLES[name] = func\n  }\n  \n  function hasVariableReference (exp) {\n    if (!isNaN(exp)) {\n      return false;\n    }\n    // strengthen this function if variable values can be non-(null/number) literals.\n    return true;\n  }\n\n  // Dithering\n  stateFlag(S_DITHER, GL_DITHER)\n\n  // Blending\n  stateFlag(S_BLEND_ENABLE, GL_BLEND)\n  stateVariable(S_BLEND_COLOR, 'blendColor', [0, 0, 0, 0])\n  stateVariable(S_BLEND_EQUATION, 'blendEquationSeparate',\n    [GL_FUNC_ADD, GL_FUNC_ADD])\n  stateVariable(S_BLEND_FUNC, 'blendFuncSeparate',\n    [GL_ONE, GL_ZERO, GL_ONE, GL_ZERO])\n\n  // Depth\n  stateFlag(S_DEPTH_ENABLE, GL_DEPTH_TEST, true)\n  stateVariable(S_DEPTH_FUNC, 'depthFunc', GL_LESS)\n  stateVariable(S_DEPTH_RANGE, 'depthRange', [0, 1])\n  stateVariable(S_DEPTH_MASK, 'depthMask', true)\n\n  // Color mask\n  stateVariable(S_COLOR_MASK, S_COLOR_MASK, [true, true, true, true])\n\n  // Face culling\n  stateFlag(S_CULL_ENABLE, GL_CULL_FACE)\n  stateVariable(S_CULL_FACE, 'cullFace', GL_BACK)\n\n  // Front face orientation\n  stateVariable(S_FRONT_FACE, S_FRONT_FACE, GL_CCW)\n\n  // Line width\n  stateVariable(S_LINE_WIDTH, S_LINE_WIDTH, 1)\n\n  // Polygon offset\n  stateFlag(S_POLYGON_OFFSET_ENABLE, GL_POLYGON_OFFSET_FILL)\n  stateVariable(S_POLYGON_OFFSET_OFFSET, 'polygonOffset', [0, 0])\n\n  // Sample coverage\n  stateFlag(S_SAMPLE_ALPHA, GL_SAMPLE_ALPHA_TO_COVERAGE)\n  stateFlag(S_SAMPLE_ENABLE, GL_SAMPLE_COVERAGE)\n  stateVariable(S_SAMPLE_COVERAGE, 'sampleCoverage', [1, false])\n\n  // Stencil\n  stateFlag(S_STENCIL_ENABLE, GL_STENCIL_TEST)\n  stateVariable(S_STENCIL_MASK, 'stencilMask', -1)\n  stateVariable(S_STENCIL_FUNC, 'stencilFunc', [GL_ALWAYS, 0, -1])\n  stateVariable(S_STENCIL_OPFRONT, 'stencilOpSeparate',\n    [GL_FRONT, GL_KEEP, GL_KEEP, GL_KEEP])\n  stateVariable(S_STENCIL_OPBACK, 'stencilOpSeparate',\n    [GL_BACK, GL_KEEP, GL_KEEP, GL_KEEP])\n\n  // Scissor\n  stateFlag(S_SCISSOR_ENABLE, GL_SCISSOR_TEST)\n  stateVariable(S_SCISSOR_BOX, 'scissor',\n    [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight])\n\n  // Viewport\n  stateVariable(S_VIEWPORT, S_VIEWPORT,\n    [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight])\n\n  // ===================================================\n  // ===================================================\n  // ENVIRONMENT\n  // ===================================================\n  // ===================================================\n  var sharedState = {\n    gl: gl,\n    context: contextState,\n    strings: stringStore,\n    next: nextState,\n    current: currentState,\n    draw: drawState,\n    elements: elementState,\n    buffer: bufferState,\n    shader: shaderState,\n    attributes: attributeState.state,\n    vao: attributeState,\n    uniforms: uniformState,\n    framebuffer: framebufferState,\n    extensions: extensions,\n\n    timer: timer,\n    isBufferArgs: isBufferArgs\n  }\n\n  var sharedConstants = {\n    primTypes: primTypes,\n    compareFuncs: compareFuncs,\n    blendFuncs: blendFuncs,\n    blendEquations: blendEquations,\n    stencilOps: stencilOps,\n    glTypes: glTypes,\n    orientationType: orientationType\n  }\n\n  \n\n  if (extDrawBuffers) {\n    sharedConstants.backBuffer = [GL_BACK]\n    sharedConstants.drawBuffer = loop(limits.maxDrawbuffers, function (i) {\n      if (i === 0) {\n        return [0]\n      }\n      return loop(i, function (j) {\n        return GL_COLOR_ATTACHMENT0$2 + j\n      })\n    })\n  }\n\n  var drawCallCounter = 0\n  function createREGLEnvironment () {\n    var env = createEnvironment({cache: cachedCode})\n    var link = env.link\n    var global = env.global\n    env.id = drawCallCounter++\n\n    env.batchId = '0'\n\n    // link shared state\n    var SHARED = link(sharedState)\n    var shared = env.shared = {\n      props: 'a0'\n    }\n    Object.keys(sharedState).forEach(function (prop) {\n      shared[prop] = global.def(SHARED, '.', prop)\n    })\n\n    // Inject runtime assertion stuff for debug builds\n    \n\n    // Copy GL state variables over\n    var nextVars = env.next = {}\n    var currentVars = env.current = {}\n    Object.keys(GL_VARIABLES).forEach(function (variable) {\n      if (Array.isArray(currentState[variable])) {\n        nextVars[variable] = global.def(shared.next, '.', variable)\n        currentVars[variable] = global.def(shared.current, '.', variable)\n      }\n    })\n\n    // Initialize shared constants\n    var constants = env.constants = {}\n    Object.keys(sharedConstants).forEach(function (name) {\n      constants[name] = global.def(JSON.stringify(sharedConstants[name]))\n    })\n\n    // Helper function for calling a block\n    env.invoke = function (block, x) {\n      switch (x.type) {\n        case DYN_FUNC$1:\n          var argList = [\n            'this',\n            shared.context,\n            shared.props,\n            env.batchId\n          ]\n          return block.def(\n            link(x.data), '.call(',\n            argList.slice(0, Math.max(x.data.length + 1, 4)),\n            ')')\n        case DYN_PROP$1:\n          return block.def(shared.props, x.data)\n        case DYN_CONTEXT$1:\n          return block.def(shared.context, x.data)\n        case DYN_STATE$1:\n          return block.def('this', x.data)\n        case DYN_THUNK:\n          x.data.append(env, block)\n          return x.data.ref\n        case DYN_CONSTANT$1:\n          return x.data.toString()\n        case DYN_ARRAY$1:\n          return x.data.map(function (y) {\n            return env.invoke(block, y)\n          })\n      }\n    }\n\n    env.attribCache = {}\n\n    var scopeAttribs = {}\n    env.scopeAttrib = function (name) {\n      var id = stringStore.id(name)\n      if (id in scopeAttribs) {\n        return scopeAttribs[id]\n      }\n      var binding = attributeState.scope[id]\n      if (!binding) {\n        binding = attributeState.scope[id] = new AttributeRecord()\n      }\n      var result = scopeAttribs[id] = link(binding)\n      return result\n    }\n\n    return env\n  }\n\n  // ===================================================\n  // ===================================================\n  // PARSING\n  // ===================================================\n  // ===================================================\n  function parseProfile (options) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    var profileEnable\n    if (S_PROFILE in staticOptions) {\n      var value = !!staticOptions[S_PROFILE]\n      profileEnable = createStaticDecl(function (env, scope) {\n        return value\n      })\n      profileEnable.enable = value\n    } else if (S_PROFILE in dynamicOptions) {\n      var dyn = dynamicOptions[S_PROFILE]\n      profileEnable = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      })\n    }\n\n    return profileEnable\n  }\n\n  function parseFramebuffer (options, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    if (S_FRAMEBUFFER in staticOptions) {\n      var framebuffer = staticOptions[S_FRAMEBUFFER]\n      if (framebuffer) {\n        framebuffer = framebufferState.getFramebuffer(framebuffer)\n        \n        return createStaticDecl(function (env, block) {\n          var FRAMEBUFFER = env.link(framebuffer)\n          var shared = env.shared\n          block.set(\n            shared.framebuffer,\n            '.next',\n            FRAMEBUFFER)\n          var CONTEXT = shared.context\n          block.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_WIDTH,\n            FRAMEBUFFER + '.width')\n          block.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_HEIGHT,\n            FRAMEBUFFER + '.height')\n          return FRAMEBUFFER\n        })\n      } else {\n        return createStaticDecl(function (env, scope) {\n          var shared = env.shared\n          scope.set(\n            shared.framebuffer,\n            '.next',\n            'null')\n          var CONTEXT = shared.context\n          scope.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_WIDTH,\n            CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH)\n          scope.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_HEIGHT,\n            CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT)\n          return 'null'\n        })\n      }\n    } else if (S_FRAMEBUFFER in dynamicOptions) {\n      var dyn = dynamicOptions[S_FRAMEBUFFER]\n      return createDynamicDecl(dyn, function (env, scope) {\n        var FRAMEBUFFER_FUNC = env.invoke(scope, dyn)\n        var shared = env.shared\n        var FRAMEBUFFER_STATE = shared.framebuffer\n        var FRAMEBUFFER = scope.def(\n          FRAMEBUFFER_STATE, '.getFramebuffer(', FRAMEBUFFER_FUNC, ')')\n\n        \n\n        scope.set(\n          FRAMEBUFFER_STATE,\n          '.next',\n          FRAMEBUFFER)\n        var CONTEXT = shared.context\n        scope.set(\n          CONTEXT,\n          '.' + S_FRAMEBUFFER_WIDTH,\n          FRAMEBUFFER + '?' + FRAMEBUFFER + '.width:' +\n          CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH)\n        scope.set(\n          CONTEXT,\n          '.' + S_FRAMEBUFFER_HEIGHT,\n          FRAMEBUFFER +\n          '?' + FRAMEBUFFER + '.height:' +\n          CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT)\n        return FRAMEBUFFER\n      })\n    } else {\n      return null\n    }\n  }\n\n  function parseViewportScissor (options, framebuffer, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    function parseBox (param) {\n      if (param in staticOptions) {\n        var box = staticOptions[param]\n        \n\n        var isStatic = true\n        var x = box.x | 0\n        var y = box.y | 0\n        var w, h\n        if ('width' in box) {\n          w = box.width | 0\n          \n        } else {\n          isStatic = false\n        }\n        if ('height' in box) {\n          h = box.height | 0\n          \n        } else {\n          isStatic = false\n        }\n\n        return new Declaration(\n          !isStatic && framebuffer && framebuffer.thisDep,\n          !isStatic && framebuffer && framebuffer.contextDep,\n          !isStatic && framebuffer && framebuffer.propDep,\n          function (env, scope) {\n            var CONTEXT = env.shared.context\n            var BOX_W = w\n            if (!('width' in box)) {\n              BOX_W = scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', x)\n            }\n            var BOX_H = h\n            if (!('height' in box)) {\n              BOX_H = scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', y)\n            }\n            return [x, y, BOX_W, BOX_H]\n          })\n      } else if (param in dynamicOptions) {\n        var dynBox = dynamicOptions[param]\n        var result = createDynamicDecl(dynBox, function (env, scope) {\n          var BOX = env.invoke(scope, dynBox)\n\n          \n\n          var CONTEXT = env.shared.context\n          var BOX_X = scope.def(BOX, '.x|0')\n          var BOX_Y = scope.def(BOX, '.y|0')\n          var BOX_W = scope.def(\n            '\"width\" in ', BOX, '?', BOX, '.width|0:',\n            '(', CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', BOX_X, ')')\n          var BOX_H = scope.def(\n            '\"height\" in ', BOX, '?', BOX, '.height|0:',\n            '(', CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', BOX_Y, ')')\n\n          \n\n          return [BOX_X, BOX_Y, BOX_W, BOX_H]\n        })\n        if (framebuffer) {\n          result.thisDep = result.thisDep || framebuffer.thisDep\n          result.contextDep = result.contextDep || framebuffer.contextDep\n          result.propDep = result.propDep || framebuffer.propDep\n        }\n        return result\n      } else if (framebuffer) {\n        return new Declaration(\n          framebuffer.thisDep,\n          framebuffer.contextDep,\n          framebuffer.propDep,\n          function (env, scope) {\n            var CONTEXT = env.shared.context\n            return [\n              0, 0,\n              scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH),\n              scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT)]\n          })\n      } else {\n        return null\n      }\n    }\n\n    var viewport = parseBox(S_VIEWPORT)\n\n    if (viewport) {\n      var prevViewport = viewport\n      viewport = new Declaration(\n        viewport.thisDep,\n        viewport.contextDep,\n        viewport.propDep,\n        function (env, scope) {\n          var VIEWPORT = prevViewport.append(env, scope)\n          var CONTEXT = env.shared.context\n          scope.set(\n            CONTEXT,\n            '.' + S_VIEWPORT_WIDTH,\n            VIEWPORT[2])\n          scope.set(\n            CONTEXT,\n            '.' + S_VIEWPORT_HEIGHT,\n            VIEWPORT[3])\n          return VIEWPORT\n        })\n    }\n\n    return {\n      viewport: viewport,\n      scissor_box: parseBox(S_SCISSOR_BOX)\n    }\n  }\n\n  function parseAttribLocations (options, attributes) {\n    var staticOptions = options.static\n    var staticProgram =\n      typeof staticOptions[S_FRAG] === 'string' &&\n      typeof staticOptions[S_VERT] === 'string'\n    if (staticProgram) {\n      if (Object.keys(attributes.dynamic).length > 0) {\n        return null\n      }\n      var staticAttributes = attributes.static\n      var sAttributes = Object.keys(staticAttributes)\n      if (sAttributes.length > 0 && typeof staticAttributes[sAttributes[0]] === 'number') {\n        var bindings = []\n        for (var i = 0; i < sAttributes.length; ++i) {\n          \n          bindings.push([staticAttributes[sAttributes[i]] | 0, sAttributes[i]])\n        }\n        return bindings\n      }\n    }\n    return null\n  }\n\n  function parseProgram (options, env, attribLocations) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    function parseShader (name) {\n      if (name in staticOptions) {\n        var id = stringStore.id(staticOptions[name])\n        \n        var result = createStaticDecl(function () {\n          return id\n        })\n        result.id = id\n        return result\n      } else if (name in dynamicOptions) {\n        var dyn = dynamicOptions[name]\n        return createDynamicDecl(dyn, function (env, scope) {\n          var str = env.invoke(scope, dyn)\n          var id = scope.def(env.shared.strings, '.id(', str, ')')\n          \n          return id\n        })\n      }\n      return null\n    }\n\n    var frag = parseShader(S_FRAG)\n    var vert = parseShader(S_VERT)\n\n    var program = null\n    var progVar\n    if (isStatic(frag) && isStatic(vert)) {\n      program = shaderState.program(vert.id, frag.id, null, attribLocations)\n      progVar = createStaticDecl(function (env, scope) {\n        return env.link(program)\n      })\n    } else {\n      progVar = new Declaration(\n        (frag && frag.thisDep) || (vert && vert.thisDep),\n        (frag && frag.contextDep) || (vert && vert.contextDep),\n        (frag && frag.propDep) || (vert && vert.propDep),\n        function (env, scope) {\n          var SHADER_STATE = env.shared.shader\n          var fragId\n          if (frag) {\n            fragId = frag.append(env, scope)\n          } else {\n            fragId = scope.def(SHADER_STATE, '.', S_FRAG)\n          }\n          var vertId\n          if (vert) {\n            vertId = vert.append(env, scope)\n          } else {\n            vertId = scope.def(SHADER_STATE, '.', S_VERT)\n          }\n          var progDef = SHADER_STATE + '.program(' + vertId + ',' + fragId\n          \n          return scope.def(progDef + ')')\n        })\n    }\n\n    return {\n      frag: frag,\n      vert: vert,\n      progVar: progVar,\n      program: program\n    }\n  }\n\n  function parseDraw (options, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    // TODO: should use VAO to get default values for offset properties\n    // should move vao parse into here and out of the old stuff\n\n    var staticDraw = {}\n    var vaoActive = false\n\n    function parseVAO () {\n      if (S_VAO in staticOptions) {\n        var vao = staticOptions[S_VAO]\n        if (vao !== null && attributeState.getVAO(vao) === null) {\n          vao = attributeState.createVAO(vao)\n        }\n\n        vaoActive = true\n        staticDraw.vao = vao\n\n        return createStaticDecl(function (env) {\n          var vaoRef = attributeState.getVAO(vao)\n          if (vaoRef) {\n            return env.link(vaoRef)\n          } else {\n            return 'null'\n          }\n        })\n      } else if (S_VAO in dynamicOptions) {\n        vaoActive = true\n        var dyn = dynamicOptions[S_VAO]\n        return createDynamicDecl(dyn, function (env, scope) {\n          var vaoRef = env.invoke(scope, dyn)\n          return scope.def(env.shared.vao + '.getVAO(' + vaoRef + ')')\n        })\n      }\n      return null\n    }\n\n    var vao = parseVAO()\n\n    var elementsActive = false\n\n    function parseElements () {\n      if (S_ELEMENTS in staticOptions) {\n        var elements = staticOptions[S_ELEMENTS]\n        staticDraw.elements = elements\n        if (isBufferArgs(elements)) {\n          var e = staticDraw.elements = elementState.create(elements, true)\n          elements = elementState.getElements(e)\n          elementsActive = true\n        } else if (elements) {\n          elements = elementState.getElements(elements)\n          elementsActive = true\n          \n        }\n\n        var result = createStaticDecl(function (env, scope) {\n          if (elements) {\n            var result = env.link(elements)\n            env.ELEMENTS = result\n            return result\n          }\n          env.ELEMENTS = null\n          return null\n        })\n        result.value = elements\n        return result\n      } else if (S_ELEMENTS in dynamicOptions) {\n        elementsActive = true\n\n        var dyn = dynamicOptions[S_ELEMENTS]\n        return createDynamicDecl(dyn, function (env, scope) {\n          var shared = env.shared\n\n          var IS_BUFFER_ARGS = shared.isBufferArgs\n          var ELEMENT_STATE = shared.elements\n\n          var elementDefn = env.invoke(scope, dyn)\n          var elements = scope.def('null')\n          var elementStream = scope.def(IS_BUFFER_ARGS, '(', elementDefn, ')')\n\n          var ifte = env.cond(elementStream)\n            .then(elements, '=', ELEMENT_STATE, '.createStream(', elementDefn, ');')\n            .else(elements, '=', ELEMENT_STATE, '.getElements(', elementDefn, ');')\n\n          \n\n          scope.entry(ifte)\n          scope.exit(\n            env.cond(elementStream)\n              .then(ELEMENT_STATE, '.destroyStream(', elements, ');'))\n\n          env.ELEMENTS = elements\n\n          return elements\n        })\n      } else if (vaoActive) {\n        return new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.elements + '.getElements(' + env.shared.vao + '.currentVAO.elements):null')\n          })\n      }\n      return null\n    }\n\n    var elements = parseElements()\n\n    function parsePrimitive () {\n      if (S_PRIMITIVE in staticOptions) {\n        var primitive = staticOptions[S_PRIMITIVE]\n        staticDraw.primitive = primitive\n        \n        return createStaticDecl(function (env, scope) {\n          return primTypes[primitive]\n        })\n      } else if (S_PRIMITIVE in dynamicOptions) {\n        var dynPrimitive = dynamicOptions[S_PRIMITIVE]\n        return createDynamicDecl(dynPrimitive, function (env, scope) {\n          var PRIM_TYPES = env.constants.primTypes\n          var prim = env.invoke(scope, dynPrimitive)\n          \n          return scope.def(PRIM_TYPES, '[', prim, ']')\n        })\n      } else if (elementsActive) {\n        if (isStatic(elements)) {\n          if (elements.value) {\n            return createStaticDecl(function (env, scope) {\n              return scope.def(env.ELEMENTS, '.primType')\n            })\n          } else {\n            return createStaticDecl(function () {\n              return GL_TRIANGLES$1\n            })\n          }\n        } else {\n          return new Declaration(\n            elements.thisDep,\n            elements.contextDep,\n            elements.propDep,\n            function (env, scope) {\n              var elements = env.ELEMENTS\n              return scope.def(elements, '?', elements, '.primType:', GL_TRIANGLES$1)\n            })\n        }\n      } else if (vaoActive) {\n        return new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.primitive:' + GL_TRIANGLES$1)\n          })\n      }\n      return null\n    }\n\n    function parseParam (param, isOffset) {\n      if (param in staticOptions) {\n        var value = staticOptions[param] | 0\n        if (isOffset) {\n          staticDraw.offset = value\n        } else {\n          staticDraw.instances = value\n        }\n        \n        return createStaticDecl(function (env, scope) {\n          if (isOffset) {\n            env.OFFSET = value\n          }\n          return value\n        })\n      } else if (param in dynamicOptions) {\n        var dynValue = dynamicOptions[param]\n        return createDynamicDecl(dynValue, function (env, scope) {\n          var result = env.invoke(scope, dynValue)\n          if (isOffset) {\n            env.OFFSET = result\n            \n          }\n          return result\n        })\n      } else if (isOffset) {\n        if (elementsActive) {\n          return createStaticDecl(function (env, scope) {\n            env.OFFSET = 0\n            return 0\n          })\n        } else if (vaoActive) {\n          return new Declaration(\n            vao.thisDep,\n            vao.contextDep,\n            vao.propDep,\n            function (env, scope) {\n              return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.offset:0')\n            })\n        }\n      } else if (vaoActive) {\n        return new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.instances:-1')\n          })\n      }\n      return null\n    }\n\n    var OFFSET = parseParam(S_OFFSET, true)\n\n    function parseVertCount () {\n      if (S_COUNT in staticOptions) {\n        var count = staticOptions[S_COUNT] | 0\n        staticDraw.count = count\n        \n        return createStaticDecl(function () {\n          return count\n        })\n      } else if (S_COUNT in dynamicOptions) {\n        var dynCount = dynamicOptions[S_COUNT]\n        return createDynamicDecl(dynCount, function (env, scope) {\n          var result = env.invoke(scope, dynCount)\n          \n          return result\n        })\n      } else if (elementsActive) {\n        if (isStatic(elements)) {\n          if (elements) {\n            if (OFFSET) {\n              return new Declaration(\n                OFFSET.thisDep,\n                OFFSET.contextDep,\n                OFFSET.propDep,\n                function (env, scope) {\n                  var result = scope.def(\n                    env.ELEMENTS, '.vertCount-', env.OFFSET)\n\n                  \n\n                  return result\n                })\n            } else {\n              return createStaticDecl(function (env, scope) {\n                return scope.def(env.ELEMENTS, '.vertCount')\n              })\n            }\n          } else {\n            var result = createStaticDecl(function () {\n              return -1\n            })\n            \n            return result\n          }\n        } else {\n          var variable = new Declaration(\n            elements.thisDep || OFFSET.thisDep,\n            elements.contextDep || OFFSET.contextDep,\n            elements.propDep || OFFSET.propDep,\n            function (env, scope) {\n              var elements = env.ELEMENTS\n              if (env.OFFSET) {\n                return scope.def(elements, '?', elements, '.vertCount-',\n                  env.OFFSET, ':-1')\n              }\n              return scope.def(elements, '?', elements, '.vertCount:-1')\n            })\n          \n          return variable\n        }\n      } else if (vaoActive) {\n        var countVariable = new Declaration(\n          vao.thisDep,\n          vao.contextDep,\n          vao.propDep,\n          function (env, scope) {\n            return scope.def(env.shared.vao, '.currentVAO?', env.shared.vao, '.currentVAO.count:-1')\n          })\n        return countVariable\n      }\n      return null\n    }\n\n    var primitive = parsePrimitive()\n    var count = parseVertCount()\n    var instances = parseParam(S_INSTANCES, false)\n\n    return {\n      elements: elements,\n      primitive: primitive,\n      count: count,\n      instances: instances,\n      offset: OFFSET,\n      vao: vao,\n\n      vaoActive: vaoActive,\n      elementsActive: elementsActive,\n\n      // static draw props\n      static: staticDraw\n    }\n  }\n\n  function parseGLState (options, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    var STATE = {}\n\n    GL_STATE_NAMES.forEach(function (prop) {\n      var param = propName(prop)\n\n      function parseParam (parseStatic, parseDynamic) {\n        if (prop in staticOptions) {\n          var value = parseStatic(staticOptions[prop])\n          STATE[param] = createStaticDecl(function () {\n            return value\n          })\n        } else if (prop in dynamicOptions) {\n          var dyn = dynamicOptions[prop]\n          STATE[param] = createDynamicDecl(dyn, function (env, scope) {\n            return parseDynamic(env, scope, env.invoke(scope, dyn))\n          })\n        }\n      }\n\n      switch (prop) {\n        case S_CULL_ENABLE:\n        case S_BLEND_ENABLE:\n        case S_DITHER:\n        case S_STENCIL_ENABLE:\n        case S_DEPTH_ENABLE:\n        case S_SCISSOR_ENABLE:\n        case S_POLYGON_OFFSET_ENABLE:\n        case S_SAMPLE_ALPHA:\n        case S_SAMPLE_ENABLE:\n        case S_DEPTH_MASK:\n          return parseParam(\n            function (value) {\n              \n              return value\n            },\n            function (env, scope, value) {\n              \n              return value\n            })\n\n        case S_DEPTH_FUNC:\n          return parseParam(\n            function (value) {\n              \n              return compareFuncs[value]\n            },\n            function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs\n              \n              return scope.def(COMPARE_FUNCS, '[', value, ']')\n            })\n\n        case S_DEPTH_RANGE:\n          return parseParam(\n            function (value) {\n              \n              return value\n            },\n            function (env, scope, value) {\n              \n\n              var Z_NEAR = scope.def('+', value, '[0]')\n              var Z_FAR = scope.def('+', value, '[1]')\n              return [Z_NEAR, Z_FAR]\n            })\n\n        case S_BLEND_FUNC:\n          return parseParam(\n            function (value) {\n              \n              var srcRGB = ('srcRGB' in value ? value.srcRGB : value.src)\n              var srcAlpha = ('srcAlpha' in value ? value.srcAlpha : value.src)\n              var dstRGB = ('dstRGB' in value ? value.dstRGB : value.dst)\n              var dstAlpha = ('dstAlpha' in value ? value.dstAlpha : value.dst)\n              \n              \n              \n              \n\n              \n\n              return [\n                blendFuncs[srcRGB],\n                blendFuncs[dstRGB],\n                blendFuncs[srcAlpha],\n                blendFuncs[dstAlpha]\n              ]\n            },\n            function (env, scope, value) {\n              var BLEND_FUNCS = env.constants.blendFuncs\n\n              \n\n              function read (prefix, suffix) {\n                var func = scope.def(\n                  '\"', prefix, suffix, '\" in ', value,\n                  '?', value, '.', prefix, suffix,\n                  ':', value, '.', prefix)\n\n                \n\n                return func\n              }\n\n              var srcRGB = read('src', 'RGB')\n              var dstRGB = read('dst', 'RGB')\n\n              \n\n              var SRC_RGB = scope.def(BLEND_FUNCS, '[', srcRGB, ']')\n              var SRC_ALPHA = scope.def(BLEND_FUNCS, '[', read('src', 'Alpha'), ']')\n              var DST_RGB = scope.def(BLEND_FUNCS, '[', dstRGB, ']')\n              var DST_ALPHA = scope.def(BLEND_FUNCS, '[', read('dst', 'Alpha'), ']')\n\n              return [SRC_RGB, DST_RGB, SRC_ALPHA, DST_ALPHA]\n            })\n\n        case S_BLEND_EQUATION:\n          return parseParam(\n            function (value) {\n              if (typeof value === 'string') {\n                \n                return [\n                  blendEquations[value],\n                  blendEquations[value]\n                ]\n              } else if (typeof value === 'object') {\n                \n                \n                return [\n                  blendEquations[value.rgb],\n                  blendEquations[value.alpha]\n                ]\n              } else {\n                \n              }\n            },\n            function (env, scope, value) {\n              var BLEND_EQUATIONS = env.constants.blendEquations\n\n              var RGB = scope.def()\n              var ALPHA = scope.def()\n\n              var ifte = env.cond('typeof ', value, '===\"string\"')\n\n              \n\n              ifte.then(\n                RGB, '=', ALPHA, '=', BLEND_EQUATIONS, '[', value, '];')\n              ifte.else(\n                RGB, '=', BLEND_EQUATIONS, '[', value, '.rgb];',\n                ALPHA, '=', BLEND_EQUATIONS, '[', value, '.alpha];')\n\n              scope(ifte)\n\n              return [RGB, ALPHA]\n            })\n\n        case S_BLEND_COLOR:\n          return parseParam(\n            function (value) {\n              \n              return loop(4, function (i) {\n                return +value[i]\n              })\n            },\n            function (env, scope, value) {\n              \n              return loop(4, function (i) {\n                return scope.def('+', value, '[', i, ']')\n              })\n            })\n\n        case S_STENCIL_MASK:\n          return parseParam(\n            function (value) {\n              \n              return value | 0\n            },\n            function (env, scope, value) {\n              \n              return scope.def(value, '|0')\n            })\n\n        case S_STENCIL_FUNC:\n          return parseParam(\n            function (value) {\n              \n              var cmp = value.cmp || 'keep'\n              var ref = value.ref || 0\n              var mask = 'mask' in value ? value.mask : -1\n              \n              \n              \n              return [\n                compareFuncs[cmp],\n                ref,\n                mask\n              ]\n            },\n            function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs\n              \n              var cmp = scope.def(\n                '\"cmp\" in ', value,\n                '?', COMPARE_FUNCS, '[', value, '.cmp]',\n                ':', GL_KEEP)\n              var ref = scope.def(value, '.ref|0')\n              var mask = scope.def(\n                '\"mask\" in ', value,\n                '?', value, '.mask|0:-1')\n              return [cmp, ref, mask]\n            })\n\n        case S_STENCIL_OPFRONT:\n        case S_STENCIL_OPBACK:\n          return parseParam(\n            function (value) {\n              \n              var fail = value.fail || 'keep'\n              var zfail = value.zfail || 'keep'\n              var zpass = value.zpass || 'keep'\n              \n              \n              \n              return [\n                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                stencilOps[fail],\n                stencilOps[zfail],\n                stencilOps[zpass]\n              ]\n            },\n            function (env, scope, value) {\n              var STENCIL_OPS = env.constants.stencilOps\n\n              \n\n              function read (name) {\n                \n\n                return scope.def(\n                  '\"', name, '\" in ', value,\n                  '?', STENCIL_OPS, '[', value, '.', name, ']:',\n                  GL_KEEP)\n              }\n\n              return [\n                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                read('fail'),\n                read('zfail'),\n                read('zpass')\n              ]\n            })\n\n        case S_POLYGON_OFFSET_OFFSET:\n          return parseParam(\n            function (value) {\n              \n              var factor = value.factor | 0\n              var units = value.units | 0\n              \n              \n              return [factor, units]\n            },\n            function (env, scope, value) {\n              \n\n              var FACTOR = scope.def(value, '.factor|0')\n              var UNITS = scope.def(value, '.units|0')\n\n              return [FACTOR, UNITS]\n            })\n\n        case S_CULL_FACE:\n          return parseParam(\n            function (value) {\n              var face = 0\n              if (value === 'front') {\n                face = GL_FRONT\n              } else if (value === 'back') {\n                face = GL_BACK\n              }\n              \n              return face\n            },\n            function (env, scope, value) {\n              \n              return scope.def(value, '===\"front\"?', GL_FRONT, ':', GL_BACK)\n            })\n\n        case S_LINE_WIDTH:\n          return parseParam(\n            function (value) {\n              \n              return value\n            },\n            function (env, scope, value) {\n              \n\n              return value\n            })\n\n        case S_FRONT_FACE:\n          return parseParam(\n            function (value) {\n              \n              return orientationType[value]\n            },\n            function (env, scope, value) {\n              \n              return scope.def(value + '===\"cw\"?' + GL_CW + ':' + GL_CCW)\n            })\n\n        case S_COLOR_MASK:\n          return parseParam(\n            function (value) {\n              \n              return value.map(function (v) { return !!v })\n            },\n            function (env, scope, value) {\n              \n              return loop(4, function (i) {\n                return '!!' + value + '[' + i + ']'\n              })\n            })\n\n        case S_SAMPLE_COVERAGE:\n          return parseParam(\n            function (value) {\n              \n              var sampleValue = 'value' in value ? value.value : 1\n              var sampleInvert = !!value.invert\n              \n              return [sampleValue, sampleInvert]\n            },\n            function (env, scope, value) {\n              \n              var VALUE = scope.def(\n                '\"value\" in ', value, '?+', value, '.value:1')\n              var INVERT = scope.def('!!', value, '.invert')\n              return [VALUE, INVERT]\n            })\n      }\n    })\n\n    return STATE\n  }\n\n  function parseUniforms (uniforms, env) {\n    var staticUniforms = uniforms.static\n    var dynamicUniforms = uniforms.dynamic\n\n    var UNIFORMS = {}\n\n    Object.keys(staticUniforms).forEach(function (name) {\n      var value = staticUniforms[name]\n      var result\n      if (typeof value === 'number' ||\n          typeof value === 'boolean') {\n        result = createStaticDecl(function () {\n          return value\n        })\n      } else if (typeof value === 'function') {\n        var reglType = value._reglType\n        if (reglType === 'texture2d' ||\n            reglType === 'textureCube') {\n          result = createStaticDecl(function (env) {\n            return env.link(value)\n          })\n        } else if (reglType === 'framebuffer' ||\n                   reglType === 'framebufferCube') {\n          \n          result = createStaticDecl(function (env) {\n            return env.link(value.color[0])\n          })\n        } else {\n          \n        }\n      } else if (isArrayLike(value)) {\n        result = createStaticDecl(function (env) {\n          var ITEM = env.global.def('[',\n            loop(value.length, function (i) {\n              \n              return value[i]\n            }), ']')\n          return ITEM\n        })\n      } else {\n        \n      }\n      result.value = value\n      UNIFORMS[name] = result\n    })\n\n    Object.keys(dynamicUniforms).forEach(function (key) {\n      var dyn = dynamicUniforms[key]\n      UNIFORMS[key] = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      })\n    })\n\n    return UNIFORMS\n  }\n\n  function parseAttributes (attributes, env) {\n    var staticAttributes = attributes.static\n    var dynamicAttributes = attributes.dynamic\n\n    var attributeDefs = {}\n\n    Object.keys(staticAttributes).forEach(function (attribute) {\n      var value = staticAttributes[attribute]\n      var id = stringStore.id(attribute)\n\n      var record = new AttributeRecord()\n      if (isBufferArgs(value)) {\n        record.state = ATTRIB_STATE_POINTER\n        record.buffer = bufferState.getBuffer(\n          bufferState.create(value, GL_ARRAY_BUFFER$2, false, true))\n        record.type = 0\n      } else {\n        var buffer = bufferState.getBuffer(value)\n        if (buffer) {\n          record.state = ATTRIB_STATE_POINTER\n          record.buffer = buffer\n          record.type = 0\n        } else {\n          \n          if ('constant' in value) {\n            var constant = value.constant\n            record.buffer = 'null'\n            record.state = ATTRIB_STATE_CONSTANT\n            if (typeof constant === 'number') {\n              record.x = constant\n            } else {\n              \n              CUTE_COMPONENTS.forEach(function (c, i) {\n                if (i < constant.length) {\n                  record[c] = constant[i]\n                }\n              })\n            }\n          } else {\n            if (isBufferArgs(value.buffer)) {\n              buffer = bufferState.getBuffer(\n                bufferState.create(value.buffer, GL_ARRAY_BUFFER$2, false, true))\n            } else {\n              buffer = bufferState.getBuffer(value.buffer)\n            }\n            \n\n            var offset = value.offset | 0\n            \n\n            var stride = value.stride | 0\n            \n\n            var size = value.size | 0\n            \n\n            var normalized = !!value.normalized\n\n            var type = 0\n            if ('type' in value) {\n              \n              type = glTypes[value.type]\n            }\n\n            var divisor = value.divisor | 0\n            \n\n            record.buffer = buffer\n            record.state = ATTRIB_STATE_POINTER\n            record.size = size\n            record.normalized = normalized\n            record.type = type || buffer.dtype\n            record.offset = offset\n            record.stride = stride\n            record.divisor = divisor\n          }\n        }\n      }\n\n      attributeDefs[attribute] = createStaticDecl(function (env, scope) {\n        var cache = env.attribCache\n        if (id in cache) {\n          return cache[id]\n        }\n        var result = {\n          isStream: false\n        }\n        Object.keys(record).forEach(function (key) {\n          result[key] = record[key]\n        })\n        if (record.buffer) {\n          result.buffer = env.link(record.buffer)\n          result.type = result.type || (result.buffer + '.dtype')\n        }\n        cache[id] = result\n        return result\n      })\n    })\n\n    Object.keys(dynamicAttributes).forEach(function (attribute) {\n      var dyn = dynamicAttributes[attribute]\n\n      function appendAttributeCode (env, block) {\n        var VALUE = env.invoke(block, dyn)\n\n        var shared = env.shared\n        var constants = env.constants\n\n        var IS_BUFFER_ARGS = shared.isBufferArgs\n        var BUFFER_STATE = shared.buffer\n\n        // Perform validation on attribute\n        \n\n        // allocate names for result\n        var result = {\n          isStream: block.def(false)\n        }\n        var defaultRecord = new AttributeRecord()\n        defaultRecord.state = ATTRIB_STATE_POINTER\n        Object.keys(defaultRecord).forEach(function (key) {\n          result[key] = block.def('' + defaultRecord[key])\n        })\n\n        var BUFFER = result.buffer\n        var TYPE = result.type\n        block(\n          'if(', IS_BUFFER_ARGS, '(', VALUE, ')){',\n          result.isStream, '=true;',\n          BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, ');',\n          TYPE, '=', BUFFER, '.dtype;',\n          '}else{',\n          BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, ');',\n          'if(', BUFFER, '){',\n          TYPE, '=', BUFFER, '.dtype;',\n          '}else if(\"constant\" in ', VALUE, '){',\n          result.state, '=', ATTRIB_STATE_CONSTANT, ';',\n          'if(typeof ' + VALUE + '.constant === \"number\"){',\n          result[CUTE_COMPONENTS[0]], '=', VALUE, '.constant;',\n          CUTE_COMPONENTS.slice(1).map(function (n) {\n            return result[n]\n          }).join('='), '=0;',\n          '}else{',\n          CUTE_COMPONENTS.map(function (name, i) {\n            return (\n              result[name] + '=' + VALUE + '.constant.length>' + i +\n              '?' + VALUE + '.constant[' + i + ']:0;'\n            )\n          }).join(''),\n          '}}else{',\n          'if(', IS_BUFFER_ARGS, '(', VALUE, '.buffer)){',\n          BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, '.buffer);',\n          '}else{',\n          BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, '.buffer);',\n          '}',\n          TYPE, '=\"type\" in ', VALUE, '?',\n          constants.glTypes, '[', VALUE, '.type]:', BUFFER, '.dtype;',\n          result.normalized, '=!!', VALUE, '.normalized;')\n        function emitReadRecord (name) {\n          block(result[name], '=', VALUE, '.', name, '|0;')\n        }\n        emitReadRecord('size')\n        emitReadRecord('offset')\n        emitReadRecord('stride')\n        emitReadRecord('divisor')\n\n        block('}}')\n\n        block.exit(\n          'if(', result.isStream, '){',\n          BUFFER_STATE, '.destroyStream(', BUFFER, ');',\n          '}')\n\n        return result\n      }\n\n      attributeDefs[attribute] = createDynamicDecl(dyn, appendAttributeCode)\n    })\n\n    return attributeDefs\n  }\n\n  function parseContext (context) {\n    var staticContext = context.static\n    var dynamicContext = context.dynamic\n    var result = {}\n\n    Object.keys(staticContext).forEach(function (name) {\n      var value = staticContext[name]\n      result[name] = createStaticDecl(function (env, scope) {\n        if (typeof value === 'number' || typeof value === 'boolean') {\n          return '' + value\n        } else {\n          return env.link(value)\n        }\n      })\n    })\n\n    Object.keys(dynamicContext).forEach(function (name) {\n      var dyn = dynamicContext[name]\n      result[name] = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      })\n    })\n\n    return result\n  }\n\n  function parseArguments (options, attributes, uniforms, context, env) {\n    var staticOptions = options.static\n    var dynamicOptions = options.dynamic\n\n    \n\n    var attribLocations = parseAttribLocations(options, attributes)\n\n    var framebuffer = parseFramebuffer(options, env)\n    var viewportAndScissor = parseViewportScissor(options, framebuffer, env)\n    var draw = parseDraw(options, env)\n    var state = parseGLState(options, env)\n    var shader = parseProgram(options, env, attribLocations)\n\n    function copyBox (name) {\n      var defn = viewportAndScissor[name]\n      if (defn) {\n        state[name] = defn\n      }\n    }\n    copyBox(S_VIEWPORT)\n    copyBox(propName(S_SCISSOR_BOX))\n\n    var dirty = Object.keys(state).length > 0\n\n    var result = {\n      framebuffer: framebuffer,\n      draw: draw,\n      shader: shader,\n      state: state,\n      dirty: dirty,\n      scopeVAO: null,\n      drawVAO: null,\n      useVAO: false,\n      attributes: {}\n    }\n\n    result.profile = parseProfile(options, env)\n    result.uniforms = parseUniforms(uniforms, env)\n    result.drawVAO = result.scopeVAO = draw.vao\n    // special case: check if we can statically allocate a vertex array object for this program\n    if (!result.drawVAO &&\n      shader.program &&\n      !attribLocations &&\n      extensions.angle_instanced_arrays &&\n      draw.static.elements) {\n      var useVAO = true\n      var staticBindings = shader.program.attributes.map(function (attr) {\n        var binding = attributes.static[attr]\n        useVAO = useVAO && !!binding\n        return binding\n      })\n      if (useVAO && staticBindings.length > 0) {\n        var vao = attributeState.getVAO(attributeState.createVAO({\n          attributes: staticBindings,\n          elements: draw.static.elements\n        }))\n        result.drawVAO = new Declaration(null, null, null, function (env, scope) {\n          return env.link(vao)\n        })\n        result.useVAO = true\n      }\n    }\n    if (attribLocations) {\n      result.useVAO = true\n    } else {\n      result.attributes = parseAttributes(attributes, env)\n    }\n    result.context = parseContext(context, env)\n    return result\n  }\n\n  // ===================================================\n  // ===================================================\n  // COMMON UPDATE FUNCTIONS\n  // ===================================================\n  // ===================================================\n  function emitContext (env, scope, context) {\n    var shared = env.shared\n    var CONTEXT = shared.context\n\n    var contextEnter = env.scope()\n\n    Object.keys(context).forEach(function (name) {\n      scope.save(CONTEXT, '.' + name)\n      var defn = context[name]\n      var value = defn.append(env, scope)\n      if (Array.isArray(value)) {\n        contextEnter(CONTEXT, '.', name, '=[', value.join(), '];')\n      } else {\n        contextEnter(CONTEXT, '.', name, '=', value, ';')\n      }\n    })\n\n    scope(contextEnter)\n  }\n\n  // ===================================================\n  // ===================================================\n  // COMMON DRAWING FUNCTIONS\n  // ===================================================\n  // ===================================================\n  function emitPollFramebuffer (env, scope, framebuffer, skipCheck) {\n    var shared = env.shared\n\n    var GL = shared.gl\n    var FRAMEBUFFER_STATE = shared.framebuffer\n    var EXT_DRAW_BUFFERS\n    if (extDrawBuffers) {\n      EXT_DRAW_BUFFERS = scope.def(shared.extensions, '.webgl_draw_buffers')\n    }\n\n    var constants = env.constants\n\n    var DRAW_BUFFERS = constants.drawBuffer\n    var BACK_BUFFER = constants.backBuffer\n\n    var NEXT\n    if (framebuffer) {\n      NEXT = framebuffer.append(env, scope)\n    } else {\n      NEXT = scope.def(FRAMEBUFFER_STATE, '.next')\n    }\n\n    if (!skipCheck) {\n      scope('if(', NEXT, '!==', FRAMEBUFFER_STATE, '.cur){')\n    }\n    scope(\n      'if(', NEXT, '){',\n      GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',', NEXT, '.framebuffer);')\n    if (extDrawBuffers) {\n      scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(',\n        DRAW_BUFFERS, '[', NEXT, '.colorAttachments.length]);')\n    }\n    scope('}else{',\n      GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',null);')\n    if (extDrawBuffers) {\n      scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(', BACK_BUFFER, ');')\n    }\n    scope(\n      '}',\n      FRAMEBUFFER_STATE, '.cur=', NEXT, ';')\n    if (!skipCheck) {\n      scope('}')\n    }\n  }\n\n  function emitPollState (env, scope, args) {\n    var shared = env.shared\n\n    var GL = shared.gl\n\n    var CURRENT_VARS = env.current\n    var NEXT_VARS = env.next\n    var CURRENT_STATE = shared.current\n    var NEXT_STATE = shared.next\n\n    var block = env.cond(CURRENT_STATE, '.dirty')\n\n    GL_STATE_NAMES.forEach(function (prop) {\n      var param = propName(prop)\n      if (param in args.state) {\n        return\n      }\n\n      var NEXT, CURRENT\n      if (param in NEXT_VARS) {\n        NEXT = NEXT_VARS[param]\n        CURRENT = CURRENT_VARS[param]\n        var parts = loop(currentState[param].length, function (i) {\n          return block.def(NEXT, '[', i, ']')\n        })\n        block(env.cond(parts.map(function (p, i) {\n          return p + '!==' + CURRENT + '[' + i + ']'\n        }).join('||'))\n          .then(\n            GL, '.', GL_VARIABLES[param], '(', parts, ');',\n            parts.map(function (p, i) {\n              return CURRENT + '[' + i + ']=' + p\n            }).join(';'), ';'))\n      } else {\n        NEXT = block.def(NEXT_STATE, '.', param)\n        var ifte = env.cond(NEXT, '!==', CURRENT_STATE, '.', param)\n        block(ifte)\n        if (param in GL_FLAGS) {\n          ifte(\n            env.cond(NEXT)\n              .then(GL, '.enable(', GL_FLAGS[param], ');')\n              .else(GL, '.disable(', GL_FLAGS[param], ');'),\n            CURRENT_STATE, '.', param, '=', NEXT, ';')\n        } else {\n          ifte(\n            GL, '.', GL_VARIABLES[param], '(', NEXT, ');',\n            CURRENT_STATE, '.', param, '=', NEXT, ';')\n        }\n      }\n    })\n    if (Object.keys(args.state).length === 0) {\n      block(CURRENT_STATE, '.dirty=false;')\n    }\n    scope(block)\n  }\n\n  function emitSetOptions (env, scope, options, filter) {\n    var shared = env.shared\n    var CURRENT_VARS = env.current\n    var CURRENT_STATE = shared.current\n    var GL = shared.gl\n    var VALUE\n    sortState(Object.keys(options)).forEach(function (param) {\n      var defn = options[param]\n      if (filter && !filter(defn)) {\n        return\n      }\n      var variable = defn.append(env, scope)\n      if (GL_FLAGS[param]) {\n        var flag = GL_FLAGS[param]\n        if (isStatic(defn)) {\n          VALUE = env.link(variable, {stable: true})\n          scope(env.cond(VALUE)\n            .then(GL, '.enable(', flag, ');')\n            .else(GL, '.disable(', flag, ');'))\n          scope(CURRENT_STATE, '.', param, '=', VALUE, ';')\n        } else {\n          scope(env.cond(variable)\n            .then(GL, '.enable(', flag, ');')\n            .else(GL, '.disable(', flag, ');'))\n          scope(CURRENT_STATE, '.', param, '=', variable, ';')\n        }\n      } else if (isArrayLike(variable)) {\n        var CURRENT = CURRENT_VARS[param]\n        scope(\n          GL, '.', GL_VARIABLES[param], '(', variable, ');',\n          variable.map(function (v, i) {\n            return CURRENT + '[' + i + ']=' + v\n          }).join(';'), ';')\n      } else {\n        if (isStatic(defn)) {\n          VALUE = env.link(variable, {stable: true})\n          scope(\n            GL, '.', GL_VARIABLES[param], '(', VALUE, ');',\n            CURRENT_STATE, '.', param, '=', VALUE, ';')\n        } else {\n          scope(\n            GL, '.', GL_VARIABLES[param], '(', variable, ');',\n            CURRENT_STATE, '.', param, '=', variable, ';')\n        }\n      }\n    })\n  }\n\n  function injectExtensions (env, scope) {\n    if (extInstancing) {\n      env.instancing = scope.def(\n        env.shared.extensions, '.angle_instanced_arrays')\n    }\n  }\n\n  function emitProfile (env, scope, args, useScope, incrementCounter) {\n    var shared = env.shared\n    var STATS = env.stats\n    var CURRENT_STATE = shared.current\n    var TIMER = shared.timer\n    var profileArg = args.profile\n\n    function perfCounter () {\n      if (typeof performance === 'undefined') {\n        return 'Date.now()'\n      } else {\n        return 'performance.now()'\n      }\n    }\n\n    var CPU_START, QUERY_COUNTER\n    function emitProfileStart (block) {\n      CPU_START = scope.def()\n      block(CPU_START, '=', perfCounter(), ';')\n      if (typeof incrementCounter === 'string') {\n        block(STATS, '.count+=', incrementCounter, ';')\n      } else {\n        block(STATS, '.count++;')\n      }\n      if (timer) {\n        if (useScope) {\n          QUERY_COUNTER = scope.def()\n          block(QUERY_COUNTER, '=', TIMER, '.getNumPendingQueries();')\n        } else {\n          block(TIMER, '.beginQuery(', STATS, ');')\n        }\n      }\n    }\n\n    function emitProfileEnd (block) {\n      block(STATS, '.cpuTime+=', perfCounter(), '-', CPU_START, ';')\n      if (timer) {\n        if (useScope) {\n          block(TIMER, '.pushScopeStats(',\n            QUERY_COUNTER, ',',\n            TIMER, '.getNumPendingQueries(),',\n            STATS, ');')\n        } else {\n          block(TIMER, '.endQuery();')\n        }\n      }\n    }\n\n    function scopeProfile (value) {\n      var prev = scope.def(CURRENT_STATE, '.profile')\n      scope(CURRENT_STATE, '.profile=', value, ';')\n      scope.exit(CURRENT_STATE, '.profile=', prev, ';')\n    }\n\n    var USE_PROFILE\n    if (profileArg) {\n      if (isStatic(profileArg)) {\n        if (profileArg.enable) {\n          emitProfileStart(scope)\n          emitProfileEnd(scope.exit)\n          scopeProfile('true')\n        } else {\n          scopeProfile('false')\n        }\n        return\n      }\n      USE_PROFILE = profileArg.append(env, scope)\n      scopeProfile(USE_PROFILE)\n    } else {\n      USE_PROFILE = scope.def(CURRENT_STATE, '.profile')\n    }\n\n    var start = env.block()\n    emitProfileStart(start)\n    scope('if(', USE_PROFILE, '){', start, '}')\n    var end = env.block()\n    emitProfileEnd(end)\n    scope.exit('if(', USE_PROFILE, '){', end, '}')\n  }\n\n  function emitAttributes (env, scope, args, attributes, filter) {\n    var shared = env.shared\n\n    function typeLength (x) {\n      switch (x) {\n        case GL_FLOAT_VEC2:\n        case GL_INT_VEC2:\n        case GL_BOOL_VEC2:\n          return 2\n        case GL_FLOAT_VEC3:\n        case GL_INT_VEC3:\n        case GL_BOOL_VEC3:\n          return 3\n        case GL_FLOAT_VEC4:\n        case GL_INT_VEC4:\n        case GL_BOOL_VEC4:\n          return 4\n        default:\n          return 1\n      }\n    }\n\n    function emitBindAttribute (ATTRIBUTE, size, record) {\n      var GL = shared.gl\n\n      var LOCATION = scope.def(ATTRIBUTE, '.location')\n      var BINDING = scope.def(shared.attributes, '[', LOCATION, ']')\n\n      var STATE = record.state\n      var BUFFER = record.buffer\n      var CONST_COMPONENTS = [\n        record.x,\n        record.y,\n        record.z,\n        record.w\n      ]\n\n      var COMMON_KEYS = [\n        'buffer',\n        'normalized',\n        'offset',\n        'stride'\n      ]\n\n      function emitBuffer () {\n        scope(\n          'if(!', BINDING, '.buffer){',\n          GL, '.enableVertexAttribArray(', LOCATION, ');}')\n\n        var TYPE = record.type\n        var SIZE\n        if (!record.size) {\n          SIZE = size\n        } else {\n          SIZE = scope.def(record.size, '||', size)\n        }\n\n        scope('if(',\n          BINDING, '.type!==', TYPE, '||',\n          BINDING, '.size!==', SIZE, '||',\n          COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '!==' + record[key]\n          }).join('||'),\n          '){',\n          GL, '.bindBuffer(', GL_ARRAY_BUFFER$2, ',', BUFFER, '.buffer);',\n          GL, '.vertexAttribPointer(', [\n            LOCATION,\n            SIZE,\n            TYPE,\n            record.normalized,\n            record.stride,\n            record.offset\n          ], ');',\n          BINDING, '.type=', TYPE, ';',\n          BINDING, '.size=', SIZE, ';',\n          COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '=' + record[key] + ';'\n          }).join(''),\n          '}')\n\n        if (extInstancing) {\n          var DIVISOR = record.divisor\n          scope(\n            'if(', BINDING, '.divisor!==', DIVISOR, '){',\n            env.instancing, '.vertexAttribDivisorANGLE(', [LOCATION, DIVISOR], ');',\n            BINDING, '.divisor=', DIVISOR, ';}')\n        }\n      }\n\n      function emitConstant () {\n        scope(\n          'if(', BINDING, '.buffer){',\n          GL, '.disableVertexAttribArray(', LOCATION, ');',\n          BINDING, '.buffer=null;',\n          '}if(', CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '!==' + CONST_COMPONENTS[i]\n          }).join('||'), '){',\n          GL, '.vertexAttrib4f(', LOCATION, ',', CONST_COMPONENTS, ');',\n          CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '=' + CONST_COMPONENTS[i] + ';'\n          }).join(''),\n          '}')\n      }\n\n      if (STATE === ATTRIB_STATE_POINTER) {\n        emitBuffer()\n      } else if (STATE === ATTRIB_STATE_CONSTANT) {\n        emitConstant()\n      } else {\n        scope('if(', STATE, '===', ATTRIB_STATE_POINTER, '){')\n        emitBuffer()\n        scope('}else{')\n        emitConstant()\n        scope('}')\n      }\n    }\n\n    attributes.forEach(function (attribute) {\n      var name = attribute.name\n      var arg = args.attributes[name]\n      var record\n      if (arg) {\n        if (!filter(arg)) {\n          return\n        }\n        record = arg.append(env, scope)\n      } else {\n        if (!filter(SCOPE_DECL)) {\n          return\n        }\n        var scopeAttrib = env.scopeAttrib(name)\n        \n        record = {}\n        Object.keys(new AttributeRecord()).forEach(function (key) {\n          record[key] = scope.def(scopeAttrib, '.', key)\n        })\n      }\n      emitBindAttribute(\n        env.link(attribute), typeLength(attribute.info.type), record)\n    })\n  }\n\n  function emitUniforms (env, scope, args, uniforms, filter, isBatchInnerLoop) {\n    var shared = env.shared\n    var GL = shared.gl\n\n    var infix\n    for (var i = 0; i < uniforms.length; ++i) {\n      var uniform = uniforms[i]\n      var name = uniform.name\n      var type = uniform.info.type\n      var arg = args.uniforms[name]\n      var UNIFORM = env.link(uniform)\n      var LOCATION = UNIFORM + '.location'\n\n      var VALUE\n      if (arg) {\n        if (!filter(arg)) {\n          continue\n        }\n        if (isStatic(arg)) {\n          var value = arg.value\n          \n          if (type === GL_SAMPLER_2D || type === GL_SAMPLER_CUBE) {\n            \n            var TEX_VALUE = env.link(value._texture || value.color[0]._texture)\n            scope(GL, '.uniform1i(', LOCATION, ',', TEX_VALUE + '.bind());')\n            scope.exit(TEX_VALUE, '.unbind();')\n          } else if (\n            type === GL_FLOAT_MAT2 ||\n            type === GL_FLOAT_MAT3 ||\n            type === GL_FLOAT_MAT4) {\n            \n            var MAT_VALUE = env.global.def('new Float32Array([' +\n              Array.prototype.slice.call(value) + '])')\n            var dim = 2\n            if (type === GL_FLOAT_MAT3) {\n              dim = 3\n            } else if (type === GL_FLOAT_MAT4) {\n              dim = 4\n            }\n            scope(\n              GL, '.uniformMatrix', dim, 'fv(',\n              LOCATION, ',false,', MAT_VALUE, ');')\n          } else {\n            switch (type) {\n              case GL_FLOAT$7:\n                \n                infix = '1f'\n                break\n              case GL_FLOAT_VEC2:\n                \n                infix = '2f'\n                break\n              case GL_FLOAT_VEC3:\n                \n                infix = '3f'\n                break\n              case GL_FLOAT_VEC4:\n                \n                infix = '4f'\n                break\n              case GL_BOOL:\n                \n                infix = '1i'\n                break\n              case GL_INT$2:\n                \n                infix = '1i'\n                break\n              case GL_BOOL_VEC2:\n                \n                infix = '2i'\n                break\n              case GL_INT_VEC2:\n                \n                infix = '2i'\n                break\n              case GL_BOOL_VEC3:\n                \n                infix = '3i'\n                break\n              case GL_INT_VEC3:\n                \n                infix = '3i'\n                break\n              case GL_BOOL_VEC4:\n                \n                infix = '4i'\n                break\n              case GL_INT_VEC4:\n                \n                infix = '4i'\n                break\n            }\n            scope(GL, '.uniform', infix, '(', LOCATION, ',',\n              isArrayLike(value) ? Array.prototype.slice.call(value) : value,\n              ');')\n          }\n          continue\n        } else {\n          VALUE = arg.append(env, scope)\n        }\n      } else {\n        if (!filter(SCOPE_DECL)) {\n          continue\n        }\n        VALUE = scope.def(shared.uniforms, '[', stringStore.id(name), ']')\n      }\n\n      if (type === GL_SAMPLER_2D) {\n        \n        scope(\n          'if(', VALUE, '&&', VALUE, '._reglType===\"framebuffer\"){',\n          VALUE, '=', VALUE, '.color[0];',\n          '}')\n      } else if (type === GL_SAMPLER_CUBE) {\n        \n        scope(\n          'if(', VALUE, '&&', VALUE, '._reglType===\"framebufferCube\"){',\n          VALUE, '=', VALUE, '.color[0];',\n          '}')\n      }\n\n      // perform type validation\n      \n\n      var unroll = 1\n      switch (type) {\n        case GL_SAMPLER_2D:\n        case GL_SAMPLER_CUBE:\n          var TEX = scope.def(VALUE, '._texture')\n          scope(GL, '.uniform1i(', LOCATION, ',', TEX, '.bind());')\n          scope.exit(TEX, '.unbind();')\n          continue\n\n        case GL_INT$2:\n        case GL_BOOL:\n          infix = '1i'\n          break\n\n        case GL_INT_VEC2:\n        case GL_BOOL_VEC2:\n          infix = '2i'\n          unroll = 2\n          break\n\n        case GL_INT_VEC3:\n        case GL_BOOL_VEC3:\n          infix = '3i'\n          unroll = 3\n          break\n\n        case GL_INT_VEC4:\n        case GL_BOOL_VEC4:\n          infix = '4i'\n          unroll = 4\n          break\n\n        case GL_FLOAT$7:\n          infix = '1f'\n          break\n\n        case GL_FLOAT_VEC2:\n          infix = '2f'\n          unroll = 2\n          break\n\n        case GL_FLOAT_VEC3:\n          infix = '3f'\n          unroll = 3\n          break\n\n        case GL_FLOAT_VEC4:\n          infix = '4f'\n          unroll = 4\n          break\n\n        case GL_FLOAT_MAT2:\n          infix = 'Matrix2fv'\n          break\n\n        case GL_FLOAT_MAT3:\n          infix = 'Matrix3fv'\n          break\n\n        case GL_FLOAT_MAT4:\n          infix = 'Matrix4fv'\n          break\n      }\n\n      if (infix.charAt(0) === 'M') {\n        scope(GL, '.uniform', infix, '(', LOCATION, ',')\n        var matSize = Math.pow(type - GL_FLOAT_MAT2 + 2, 2)\n        var STORAGE = env.global.def('new Float32Array(', matSize, ')')\n        if (Array.isArray(VALUE)) {\n          scope(\n            'false,(',\n            loop(matSize, function (i) {\n              return STORAGE + '[' + i + ']=' + VALUE[i]\n            }), ',', STORAGE, ')')\n        } else {\n          scope(\n            'false,(Array.isArray(', VALUE, ')||', VALUE, ' instanceof Float32Array)?', VALUE, ':(',\n            loop(matSize, function (i) {\n              return STORAGE + '[' + i + ']=' + VALUE + '[' + i + ']'\n            }), ',', STORAGE, ')')\n        }\n        scope(');')\n      } else if (unroll > 1) {\n        var prev = []\n        var cur = []\n        for (var j = 0; j < unroll; ++j) {\n          if (Array.isArray(VALUE)) {\n            cur.push(VALUE[j])\n          } else {\n            cur.push(scope.def(VALUE + '[' + j + ']'))\n          }\n          if (isBatchInnerLoop) {\n            prev.push(scope.def())\n          }\n        }\n        if (isBatchInnerLoop) {\n          scope('if(!', env.batchId, '||', prev.map(function (p, i) {\n            return p + '!==' + cur[i]\n          }).join('||'), '){', prev.map(function (p, i) {\n            return p + '=' + cur[i] + ';'\n          }).join(''))\n        }\n        scope(GL, '.uniform', infix, '(', LOCATION, ',', cur.join(','), ');')\n        if (isBatchInnerLoop) {\n          scope('}')\n        }\n      } else {\n        \n        if (isBatchInnerLoop) {\n          var prevS = scope.def()\n          scope('if(!', env.batchId, '||', prevS, '!==', VALUE, '){',\n            prevS, '=', VALUE, ';')\n        }\n        scope(GL, '.uniform', infix, '(', LOCATION, ',', VALUE, ');')\n        if (isBatchInnerLoop) {\n          scope('}')\n        }\n      }\n    }\n  }\n\n  function emitDraw (env, outer, inner, args) {\n    var shared = env.shared\n    var GL = shared.gl\n    var DRAW_STATE = shared.draw\n\n    var drawOptions = args.draw\n\n    function emitElements () {\n      var defn = drawOptions.elements\n      var ELEMENTS\n      var scope = outer\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          scope = inner\n        }\n        ELEMENTS = defn.append(env, scope)\n        if (drawOptions.elementsActive) {\n          scope(\n            'if(' + ELEMENTS + ')' +\n            GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);')\n        }\n      } else {\n        ELEMENTS = scope.def()\n        scope(\n          ELEMENTS, '=', DRAW_STATE, '.', S_ELEMENTS, ';',\n          'if(', ELEMENTS, '){',\n          GL, '.bindBuffer(', GL_ELEMENT_ARRAY_BUFFER$2, ',', ELEMENTS, '.buffer.buffer);}',\n          'else if(', shared.vao, '.currentVAO){',\n          ELEMENTS, '=', env.shared.elements + '.getElements(' + shared.vao, '.currentVAO.elements);',\n          (!extVertexArrays ? 'if(' + ELEMENTS + ')' + GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);' : ''),\n          '}')\n      }\n      return ELEMENTS\n    }\n\n    function emitCount () {\n      var defn = drawOptions.count\n      var COUNT\n      var scope = outer\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          scope = inner\n        }\n        COUNT = defn.append(env, scope)\n        \n      } else {\n        COUNT = scope.def(DRAW_STATE, '.', S_COUNT)\n        \n      }\n      return COUNT\n    }\n\n    var ELEMENTS = emitElements()\n    function emitValue (name) {\n      var defn = drawOptions[name]\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          return defn.append(env, inner)\n        } else {\n          return defn.append(env, outer)\n        }\n      } else {\n        return outer.def(DRAW_STATE, '.', name)\n      }\n    }\n\n    var PRIMITIVE = emitValue(S_PRIMITIVE)\n    var OFFSET = emitValue(S_OFFSET)\n\n    var COUNT = emitCount()\n    if (typeof COUNT === 'number') {\n      if (COUNT === 0) {\n        return\n      }\n    } else {\n      inner('if(', COUNT, '){')\n      inner.exit('}')\n    }\n\n    var INSTANCES, EXT_INSTANCING\n    if (extInstancing) {\n      INSTANCES = emitValue(S_INSTANCES)\n      EXT_INSTANCING = env.instancing\n    }\n\n    var ELEMENT_TYPE = ELEMENTS + '.type'\n\n    var elementsStatic = drawOptions.elements && isStatic(drawOptions.elements) && !drawOptions.vaoActive\n\n    function emitInstancing () {\n      function drawElements () {\n        inner(EXT_INSTANCING, '.drawElementsInstancedANGLE(', [\n          PRIMITIVE,\n          COUNT,\n          ELEMENT_TYPE,\n          OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$7 + ')>>1)',\n          INSTANCES\n        ], ');')\n      }\n\n      function drawArrays () {\n        inner(EXT_INSTANCING, '.drawArraysInstancedANGLE(',\n          [PRIMITIVE, OFFSET, COUNT, INSTANCES], ');')\n      }\n\n      if (ELEMENTS && ELEMENTS !== 'null') {\n        if (!elementsStatic) {\n          inner('if(', ELEMENTS, '){')\n          drawElements()\n          inner('}else{')\n          drawArrays()\n          inner('}')\n        } else {\n          drawElements()\n        }\n      } else {\n        drawArrays()\n      }\n    }\n\n    function emitRegular () {\n      function drawElements () {\n        inner(GL + '.drawElements(' + [\n          PRIMITIVE,\n          COUNT,\n          ELEMENT_TYPE,\n          OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$7 + ')>>1)'\n        ] + ');')\n      }\n\n      function drawArrays () {\n        inner(GL + '.drawArrays(' + [PRIMITIVE, OFFSET, COUNT] + ');')\n      }\n\n      if (ELEMENTS && ELEMENTS !== 'null') {\n        if (!elementsStatic) {\n          inner('if(', ELEMENTS, '){')\n          drawElements()\n          inner('}else{')\n          drawArrays()\n          inner('}')\n        } else {\n          drawElements()\n        }\n      } else {\n        drawArrays()\n      }\n    }\n\n    if (extInstancing && (typeof INSTANCES !== 'number' || INSTANCES >= 0)) {\n      if (typeof INSTANCES === 'string') {\n        inner('if(', INSTANCES, '>0){')\n        emitInstancing()\n        inner('}else if(', INSTANCES, '<0){')\n        emitRegular()\n        inner('}')\n      } else {\n        emitInstancing()\n      }\n    } else {\n      emitRegular()\n    }\n  }\n\n  function createBody (emitBody, parentEnv, args, program, count) {\n    var env = createREGLEnvironment()\n    var scope = env.proc('body', count)\n    \n    if (extInstancing) {\n      env.instancing = scope.def(\n        env.shared.extensions, '.angle_instanced_arrays')\n    }\n    emitBody(env, scope, args, program)\n    return env.compile().body\n  }\n\n  // ===================================================\n  // ===================================================\n  // DRAW PROC\n  // ===================================================\n  // ===================================================\n  function emitDrawBody (env, draw, args, program) {\n    injectExtensions(env, draw)\n    if (args.useVAO) {\n      if (args.drawVAO) {\n        draw(env.shared.vao, '.setVAO(', args.drawVAO.append(env, draw), ');')\n      } else {\n        draw(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);')\n      }\n    } else {\n      draw(env.shared.vao, '.setVAO(null);')\n      emitAttributes(env, draw, args, program.attributes, function () {\n        return true\n      })\n    }\n    emitUniforms(env, draw, args, program.uniforms, function () {\n      return true\n    }, false)\n    emitDraw(env, draw, draw, args)\n  }\n\n  function emitDrawProc (env, args) {\n    var draw = env.proc('draw', 1)\n\n    injectExtensions(env, draw)\n\n    emitContext(env, draw, args.context)\n    emitPollFramebuffer(env, draw, args.framebuffer)\n\n    emitPollState(env, draw, args)\n    emitSetOptions(env, draw, args.state)\n\n    emitProfile(env, draw, args, false, true)\n\n    var program = args.shader.progVar.append(env, draw)\n    draw(env.shared.gl, '.useProgram(', program, '.program);')\n\n    if (args.shader.program) {\n      emitDrawBody(env, draw, args, args.shader.program)\n    } else {\n      draw(env.shared.vao, '.setVAO(null);')\n      var drawCache = env.global.def('{}')\n      var PROG_ID = draw.def(program, '.id')\n      var CACHED_PROC = draw.def(drawCache, '[', PROG_ID, ']')\n      draw(\n        env.cond(CACHED_PROC)\n          .then(CACHED_PROC, '.call(this,a0);')\n          .else(\n            CACHED_PROC, '=', drawCache, '[', PROG_ID, ']=',\n            env.link(function (program) {\n              return createBody(emitDrawBody, env, args, program, 1)\n            }), '(', program, ');',\n            CACHED_PROC, '.call(this,a0);'))\n    }\n\n    if (Object.keys(args.state).length > 0) {\n      draw(env.shared.current, '.dirty=true;')\n    }\n    if (env.shared.vao) {\n      draw(env.shared.vao, '.setVAO(null);')\n    }\n  }\n\n  // ===================================================\n  // ===================================================\n  // BATCH PROC\n  // ===================================================\n  // ===================================================\n\n  function emitBatchDynamicShaderBody (env, scope, args, program) {\n    env.batchId = 'a1'\n\n    injectExtensions(env, scope)\n\n    function all () {\n      return true\n    }\n\n    emitAttributes(env, scope, args, program.attributes, all)\n    emitUniforms(env, scope, args, program.uniforms, all, false)\n    emitDraw(env, scope, scope, args)\n  }\n\n  function emitBatchBody (env, scope, args, program) {\n    injectExtensions(env, scope)\n\n    var contextDynamic = args.contextDep\n\n    var BATCH_ID = scope.def()\n    var PROP_LIST = 'a0'\n    var NUM_PROPS = 'a1'\n    var PROPS = scope.def()\n    env.shared.props = PROPS\n    env.batchId = BATCH_ID\n\n    var outer = env.scope()\n    var inner = env.scope()\n\n    scope(\n      outer.entry,\n      'for(', BATCH_ID, '=0;', BATCH_ID, '<', NUM_PROPS, ';++', BATCH_ID, '){',\n      PROPS, '=', PROP_LIST, '[', BATCH_ID, '];',\n      inner,\n      '}',\n      outer.exit)\n\n    function isInnerDefn (defn) {\n      return ((defn.contextDep && contextDynamic) || defn.propDep)\n    }\n\n    function isOuterDefn (defn) {\n      return !isInnerDefn(defn)\n    }\n\n    if (args.needsContext) {\n      emitContext(env, inner, args.context)\n    }\n    if (args.needsFramebuffer) {\n      emitPollFramebuffer(env, inner, args.framebuffer)\n    }\n    emitSetOptions(env, inner, args.state, isInnerDefn)\n\n    if (args.profile && isInnerDefn(args.profile)) {\n      emitProfile(env, inner, args, false, true)\n    }\n\n    if (!program) {\n      var progCache = env.global.def('{}')\n      var PROGRAM = args.shader.progVar.append(env, inner)\n      var PROG_ID = inner.def(PROGRAM, '.id')\n      var CACHED_PROC = inner.def(progCache, '[', PROG_ID, ']')\n      inner(\n        env.shared.gl, '.useProgram(', PROGRAM, '.program);',\n        'if(!', CACHED_PROC, '){',\n        CACHED_PROC, '=', progCache, '[', PROG_ID, ']=',\n        env.link(function (program) {\n          return createBody(\n            emitBatchDynamicShaderBody, env, args, program, 2)\n        }), '(', PROGRAM, ');}',\n        CACHED_PROC, '.call(this,a0[', BATCH_ID, '],', BATCH_ID, ');')\n    } else {\n      if (args.useVAO) {\n        if (args.drawVAO) {\n          if (isInnerDefn(args.drawVAO)) {\n            // vao is a prop\n            inner(env.shared.vao, '.setVAO(', args.drawVAO.append(env, inner), ');')\n          } else {\n            // vao is invariant\n            outer(env.shared.vao, '.setVAO(', args.drawVAO.append(env, outer), ');')\n          }\n        } else {\n          // scoped vao binding\n          outer(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);')\n        }\n      } else {\n        outer(env.shared.vao, '.setVAO(null);')\n        emitAttributes(env, outer, args, program.attributes, isOuterDefn)\n        emitAttributes(env, inner, args, program.attributes, isInnerDefn)\n      }\n      emitUniforms(env, outer, args, program.uniforms, isOuterDefn, false)\n      emitUniforms(env, inner, args, program.uniforms, isInnerDefn, true)\n      emitDraw(env, outer, inner, args)\n    }\n  }\n\n  function emitBatchProc (env, args) {\n    var batch = env.proc('batch', 2)\n    env.batchId = '0'\n\n    injectExtensions(env, batch)\n\n    // Check if any context variables depend on props\n    var contextDynamic = false\n    var needsContext = true\n    Object.keys(args.context).forEach(function (name) {\n      contextDynamic = contextDynamic || args.context[name].propDep\n    })\n    if (!contextDynamic) {\n      emitContext(env, batch, args.context)\n      needsContext = false\n    }\n\n    // framebuffer state affects framebufferWidth/height context vars\n    var framebuffer = args.framebuffer\n    var needsFramebuffer = false\n    if (framebuffer) {\n      if (framebuffer.propDep) {\n        contextDynamic = needsFramebuffer = true\n      } else if (framebuffer.contextDep && contextDynamic) {\n        needsFramebuffer = true\n      }\n      if (!needsFramebuffer) {\n        emitPollFramebuffer(env, batch, framebuffer)\n      }\n    } else {\n      emitPollFramebuffer(env, batch, null)\n    }\n\n    // viewport is weird because it can affect context vars\n    if (args.state.viewport && args.state.viewport.propDep) {\n      contextDynamic = true\n    }\n\n    function isInnerDefn (defn) {\n      return (defn.contextDep && contextDynamic) || defn.propDep\n    }\n\n    // set webgl options\n    emitPollState(env, batch, args)\n    emitSetOptions(env, batch, args.state, function (defn) {\n      return !isInnerDefn(defn)\n    })\n\n    if (!args.profile || !isInnerDefn(args.profile)) {\n      emitProfile(env, batch, args, false, 'a1')\n    }\n\n    // Save these values to args so that the batch body routine can use them\n    args.contextDep = contextDynamic\n    args.needsContext = needsContext\n    args.needsFramebuffer = needsFramebuffer\n\n    // determine if shader is dynamic\n    var progDefn = args.shader.progVar\n    if ((progDefn.contextDep && contextDynamic) || progDefn.propDep) {\n      emitBatchBody(\n        env,\n        batch,\n        args,\n        null)\n    } else {\n      var PROGRAM = progDefn.append(env, batch)\n      batch(env.shared.gl, '.useProgram(', PROGRAM, '.program);')\n      if (args.shader.program) {\n        emitBatchBody(\n          env,\n          batch,\n          args,\n          args.shader.program)\n      } else {\n        batch(env.shared.vao, '.setVAO(null);')\n        var batchCache = env.global.def('{}')\n        var PROG_ID = batch.def(PROGRAM, '.id')\n        var CACHED_PROC = batch.def(batchCache, '[', PROG_ID, ']')\n        batch(\n          env.cond(CACHED_PROC)\n            .then(CACHED_PROC, '.call(this,a0,a1);')\n            .else(\n              CACHED_PROC, '=', batchCache, '[', PROG_ID, ']=',\n              env.link(function (program) {\n                return createBody(emitBatchBody, env, args, program, 2)\n              }), '(', PROGRAM, ');',\n              CACHED_PROC, '.call(this,a0,a1);'))\n      }\n    }\n\n    if (Object.keys(args.state).length > 0) {\n      batch(env.shared.current, '.dirty=true;')\n    }\n\n    if (env.shared.vao) {\n      batch(env.shared.vao, '.setVAO(null);')\n    }\n  }\n\n  // ===================================================\n  // ===================================================\n  // SCOPE COMMAND\n  // ===================================================\n  // ===================================================\n  function emitScopeProc (env, args) {\n    var scope = env.proc('scope', 3)\n    env.batchId = 'a2'\n\n    var shared = env.shared\n    var CURRENT_STATE = shared.current\n\n    emitContext(env, scope, args.context)\n\n    if (args.framebuffer) {\n      args.framebuffer.append(env, scope)\n    }\n\n    sortState(Object.keys(args.state)).forEach(function (name) {\n      var defn = args.state[name]\n      var value = defn.append(env, scope)\n      if (isArrayLike(value)) {\n        value.forEach(function (v, i) {\n          if (hasVariableReference(v)) {\n            scope.set(env.next[name], '[' + i + ']', v)\n          } else {\n            scope.set(env.next[name], '[' + i + ']', env.link(v, {stable: true}))\n          }\n        })\n      } else {\n        if (isStatic(defn)) {\n          scope.set(shared.next, '.' + name, env.link(value, {stable: true}))\n        } else {\n          scope.set(shared.next, '.' + name, value)\n        }\n      }\n    })\n\n    emitProfile(env, scope, args, true, true)\n\n    ;[S_ELEMENTS, S_OFFSET, S_COUNT, S_INSTANCES, S_PRIMITIVE].forEach(\n      function (opt) {\n        var variable = args.draw[opt]\n        if (!variable) {\n          return\n        }\n        var VARIABLE = variable.append(env, scope)\n        if (hasVariableReference(VARIABLE)) {\n          scope.set(shared.draw, '.' + opt, VARIABLE)\n        } else {\n          scope.set(shared.draw, '.' + opt, env.link(VARIABLE), {stable: true})\n        }\n      })\n\n    Object.keys(args.uniforms).forEach(function (opt) {\n      var value = args.uniforms[opt].append(env, scope)\n      if (Array.isArray(value)) {\n        value = '[' + value.map(function (v) {\n          if (hasVariableReference(v)) {\n            return v;\n          } else {\n            return env.link(v, {stable: true})\n          }\n        }) + ']'\n      }\n      scope.set(\n        shared.uniforms,\n        '[' + env.link(stringStore.id(opt), {stable: true}) + ']',\n        value)\n    })\n\n    Object.keys(args.attributes).forEach(function (name) {\n      var record = args.attributes[name].append(env, scope)\n      var scopeAttrib = env.scopeAttrib(name)\n      Object.keys(new AttributeRecord()).forEach(function (prop) {\n        scope.set(scopeAttrib, '.' + prop, record[prop])\n      })\n    })\n\n    if (args.scopeVAO) {\n      var VARIABLE = args.scopeVAO.append(env, scope)\n      if (hasVariableReference(VARIABLE)) {\n        scope.set(shared.vao, '.targetVAO', VARIABLE)\n      } else {\n        scope.set(shared.vao, '.targetVAO', env.link(VARIABLE, {stable: true}))\n      }\n    }\n\n    function saveShader (name) {\n      var shader = args.shader[name]\n      if (shader) {\n        var VARIABLE = shader.append(env, scope)\n        if (hasVariableReference(VARIABLE)) {\n          scope.set(shared.shader, '.' + name, VARIABLE)\n        } else {\n          scope.set(shared.shader, '.' + name, env.link(VARIABLE, {stable: true}))\n        }\n      }\n    }\n    saveShader(S_VERT)\n    saveShader(S_FRAG)\n\n    if (Object.keys(args.state).length > 0) {\n      scope(CURRENT_STATE, '.dirty=true;')\n      scope.exit(CURRENT_STATE, '.dirty=true;')\n    }\n\n    scope('a1(', env.shared.context, ',a0,', env.batchId, ');')\n  }\n\n  function isDynamicObject (object) {\n    if (typeof object !== 'object' || isArrayLike(object)) {\n      return\n    }\n    var props = Object.keys(object)\n    for (var i = 0; i < props.length; ++i) {\n      if (dynamic.isDynamic(object[props[i]])) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function splatObject (env, options, name) {\n    var object = options.static[name]\n    if (!object || !isDynamicObject(object)) {\n      return\n    }\n\n    var globals = env.global\n    var keys = Object.keys(object)\n    var thisDep = false\n    var contextDep = false\n    var propDep = false\n    var objectRef = env.global.def('{}')\n    keys.forEach(function (key) {\n      var value = object[key]\n      if (dynamic.isDynamic(value)) {\n        if (typeof value === 'function') {\n          value = object[key] = dynamic.unbox(value)\n        }\n        var deps = createDynamicDecl(value, null)\n        thisDep = thisDep || deps.thisDep\n        propDep = propDep || deps.propDep\n        contextDep = contextDep || deps.contextDep\n      } else {\n        globals(objectRef, '.', key, '=')\n        switch (typeof value) {\n          case 'number':\n            globals(value)\n            break\n          case 'string':\n            globals('\"', value, '\"')\n            break\n          case 'object':\n            if (Array.isArray(value)) {\n              globals('[', value.join(), ']')\n            }\n            break\n          default:\n            globals(env.link(value))\n            break\n        }\n        globals(';')\n      }\n    })\n\n    function appendBlock (env, block) {\n      keys.forEach(function (key) {\n        var value = object[key]\n        if (!dynamic.isDynamic(value)) {\n          return\n        }\n        var ref = env.invoke(block, value)\n        block(objectRef, '.', key, '=', ref, ';')\n      })\n    }\n\n    options.dynamic[name] = new dynamic.DynamicVariable(DYN_THUNK, {\n      thisDep: thisDep,\n      contextDep: contextDep,\n      propDep: propDep,\n      ref: objectRef,\n      append: appendBlock\n    })\n    delete options.static[name]\n  }\n\n  // ===========================================================================\n  // ===========================================================================\n  // MAIN DRAW COMMAND\n  // ===========================================================================\n  // ===========================================================================\n  function compileCommand (options, attributes, uniforms, context, stats) {\n    var env = createREGLEnvironment()\n\n    // link stats, so that we can easily access it in the program.\n    env.stats = env.link(stats)\n\n    // splat options and attributes to allow for dynamic nested properties\n    Object.keys(attributes.static).forEach(function (key) {\n      splatObject(env, attributes, key)\n    })\n    NESTED_OPTIONS.forEach(function (name) {\n      splatObject(env, options, name)\n    })\n\n    var args = parseArguments(options, attributes, uniforms, context, env)\n\n    if (args.shader.program) {\n      args.shader.program.attributes.sort(function (a, b) {\n        return a.name < b.name ? -1 : 1\n      })\n      args.shader.program.uniforms.sort(function (a, b) {\n        return a.name < b.name ? -1 : 1\n      })\n    }\n\n    emitDrawProc(env, args)\n    emitScopeProc(env, args)\n    emitBatchProc(env, args)\n\n    return extend(env.compile(), {\n      destroy: function () {\n        args.shader.program.destroy()\n      }\n    })\n  }\n\n  // ===========================================================================\n  // ===========================================================================\n  // POLL / REFRESH\n  // ===========================================================================\n  // ===========================================================================\n  return {\n    next: nextState,\n    current: currentState,\n    procs: (function () {\n      var env = createREGLEnvironment()\n      var poll = env.proc('poll')\n      var refresh = env.proc('refresh')\n      var common = env.block()\n      poll(common)\n      refresh(common)\n\n      var shared = env.shared\n      var GL = shared.gl\n      var NEXT_STATE = shared.next\n      var CURRENT_STATE = shared.current\n\n      common(CURRENT_STATE, '.dirty=false;')\n\n      emitPollFramebuffer(env, poll)\n      emitPollFramebuffer(env, refresh, null, true)\n\n      // Refresh updates all attribute state changes\n      var INSTANCING\n      if (extInstancing) {\n        INSTANCING = env.link(extInstancing)\n      }\n\n      // update vertex array bindings\n      if (extensions.oes_vertex_array_object) {\n        refresh(env.link(extensions.oes_vertex_array_object), '.bindVertexArrayOES(null);')\n      }\n      var BINDING = refresh.def(shared.attributes)\n      var TEMP_BINDING = refresh.def(0)\n\n      var ifte = env.cond(TEMP_BINDING, '.buffer')\n      ifte.then(\n        GL, '.enableVertexAttribArray(i);',\n        GL, '.bindBuffer(',\n        GL_ARRAY_BUFFER$2, ',',\n        TEMP_BINDING, '.buffer.buffer);',\n        GL, '.vertexAttribPointer(i,',\n        TEMP_BINDING, '.size,',\n        TEMP_BINDING, '.type,',\n        TEMP_BINDING, '.normalized,',\n        TEMP_BINDING, '.stride,',\n        TEMP_BINDING, '.offset);'\n      ).else(\n        GL, '.disableVertexAttribArray(i);',\n        GL, '.vertexAttrib4f(i,',\n        TEMP_BINDING, '.x,',\n        TEMP_BINDING, '.y,',\n        TEMP_BINDING, '.z,',\n        TEMP_BINDING, '.w);',\n        TEMP_BINDING, '.buffer=null;')\n      var MAX_ATTRIBUTES = env.link(limits.maxAttributes, {stable: true})\n      refresh(\n        'for(var i=0;i<', MAX_ATTRIBUTES, ';++i){',\n        TEMP_BINDING, '=', BINDING, '[i];',\n        ifte,\n        '}'\n      )\n\n      if (extInstancing) {\n        refresh(\n          'for(var i=0;i<', MAX_ATTRIBUTES, ';++i){',\n          INSTANCING, '.vertexAttribDivisorANGLE(i,',\n          BINDING, '[i].divisor);',\n          '}')\n      }\n      refresh(\n        env.shared.vao, '.currentVAO=null;',\n        env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);')\n\n      Object.keys(GL_FLAGS).forEach(function (flag) {\n        var cap = GL_FLAGS[flag]\n        var NEXT = common.def(NEXT_STATE, '.', flag)\n        var block = env.block()\n        block('if(', NEXT, '){',\n          GL, '.enable(', cap, ')}else{',\n          GL, '.disable(', cap, ')}',\n          CURRENT_STATE, '.', flag, '=', NEXT, ';')\n        refresh(block)\n        poll(\n          'if(', NEXT, '!==', CURRENT_STATE, '.', flag, '){',\n          block,\n          '}')\n      })\n\n      Object.keys(GL_VARIABLES).forEach(function (name) {\n        var func = GL_VARIABLES[name]\n        var init = currentState[name]\n        var NEXT, CURRENT\n        var block = env.block()\n        block(GL, '.', func, '(')\n        if (isArrayLike(init)) {\n          var n = init.length\n          NEXT = env.global.def(NEXT_STATE, '.', name)\n          CURRENT = env.global.def(CURRENT_STATE, '.', name)\n          block(\n            loop(n, function (i) {\n              return NEXT + '[' + i + ']'\n            }), ');',\n            loop(n, function (i) {\n              return CURRENT + '[' + i + ']=' + NEXT + '[' + i + '];'\n            }).join(''))\n          poll(\n            'if(', loop(n, function (i) {\n              return NEXT + '[' + i + ']!==' + CURRENT + '[' + i + ']'\n            }).join('||'), '){',\n            block,\n            '}')\n        } else {\n          NEXT = common.def(NEXT_STATE, '.', name)\n          CURRENT = common.def(CURRENT_STATE, '.', name)\n          block(\n            NEXT, ');',\n            CURRENT_STATE, '.', name, '=', NEXT, ';')\n          poll(\n            'if(', NEXT, '!==', CURRENT, '){',\n            block,\n            '}')\n        }\n        refresh(block)\n      })\n\n      return env.compile()\n    })(),\n    compile: compileCommand\n  }\n}\n\nfunction stats () {\n  return {\n    vaoCount: 0,\n    bufferCount: 0,\n    elementsCount: 0,\n    framebufferCount: 0,\n    shaderCount: 0,\n    textureCount: 0,\n    cubeCount: 0,\n    renderbufferCount: 0,\n    maxTextureUnits: 0\n  }\n}\n\nvar GL_QUERY_RESULT_EXT = 0x8866\nvar GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867\nvar GL_TIME_ELAPSED_EXT = 0x88BF\n\nvar createTimer = function (gl, extensions) {\n  if (!extensions.ext_disjoint_timer_query) {\n    return null\n  }\n\n  // QUERY POOL BEGIN\n  var queryPool = []\n  function allocQuery () {\n    return queryPool.pop() || extensions.ext_disjoint_timer_query.createQueryEXT()\n  }\n  function freeQuery (query) {\n    queryPool.push(query)\n  }\n  // QUERY POOL END\n\n  var pendingQueries = []\n  function beginQuery (stats) {\n    var query = allocQuery()\n    extensions.ext_disjoint_timer_query.beginQueryEXT(GL_TIME_ELAPSED_EXT, query)\n    pendingQueries.push(query)\n    pushScopeStats(pendingQueries.length - 1, pendingQueries.length, stats)\n  }\n\n  function endQuery () {\n    extensions.ext_disjoint_timer_query.endQueryEXT(GL_TIME_ELAPSED_EXT)\n  }\n\n  //\n  // Pending stats pool.\n  //\n  function PendingStats () {\n    this.startQueryIndex = -1\n    this.endQueryIndex = -1\n    this.sum = 0\n    this.stats = null\n  }\n  var pendingStatsPool = []\n  function allocPendingStats () {\n    return pendingStatsPool.pop() || new PendingStats()\n  }\n  function freePendingStats (pendingStats) {\n    pendingStatsPool.push(pendingStats)\n  }\n  // Pending stats pool end\n\n  var pendingStats = []\n  function pushScopeStats (start, end, stats) {\n    var ps = allocPendingStats()\n    ps.startQueryIndex = start\n    ps.endQueryIndex = end\n    ps.sum = 0\n    ps.stats = stats\n    pendingStats.push(ps)\n  }\n\n  // we should call this at the beginning of the frame,\n  // in order to update gpuTime\n  var timeSum = []\n  var queryPtr = []\n  function update () {\n    var ptr, i\n\n    var n = pendingQueries.length\n    if (n === 0) {\n      return\n    }\n\n    // Reserve space\n    queryPtr.length = Math.max(queryPtr.length, n + 1)\n    timeSum.length = Math.max(timeSum.length, n + 1)\n    timeSum[0] = 0\n    queryPtr[0] = 0\n\n    // Update all pending timer queries\n    var queryTime = 0\n    ptr = 0\n    for (i = 0; i < pendingQueries.length; ++i) {\n      var query = pendingQueries[i]\n      if (extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_AVAILABLE_EXT)) {\n        queryTime += extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_EXT)\n        freeQuery(query)\n      } else {\n        pendingQueries[ptr++] = query\n      }\n      timeSum[i + 1] = queryTime\n      queryPtr[i + 1] = ptr\n    }\n    pendingQueries.length = ptr\n\n    // Update all pending stat queries\n    ptr = 0\n    for (i = 0; i < pendingStats.length; ++i) {\n      var stats = pendingStats[i]\n      var start = stats.startQueryIndex\n      var end = stats.endQueryIndex\n      stats.sum += timeSum[end] - timeSum[start]\n      var startPtr = queryPtr[start]\n      var endPtr = queryPtr[end]\n      if (endPtr === startPtr) {\n        stats.stats.gpuTime += stats.sum / 1e6\n        freePendingStats(stats)\n      } else {\n        stats.startQueryIndex = startPtr\n        stats.endQueryIndex = endPtr\n        pendingStats[ptr++] = stats\n      }\n    }\n    pendingStats.length = ptr\n  }\n\n  return {\n    beginQuery: beginQuery,\n    endQuery: endQuery,\n    pushScopeStats: pushScopeStats,\n    update: update,\n    getNumPendingQueries: function () {\n      return pendingQueries.length\n    },\n    clear: function () {\n      queryPool.push.apply(queryPool, pendingQueries)\n      for (var i = 0; i < queryPool.length; i++) {\n        extensions.ext_disjoint_timer_query.deleteQueryEXT(queryPool[i])\n      }\n      pendingQueries.length = 0\n      queryPool.length = 0\n    },\n    restore: function () {\n      pendingQueries.length = 0\n      queryPool.length = 0\n    }\n  }\n}\n\nvar GL_COLOR_BUFFER_BIT = 16384\nvar GL_DEPTH_BUFFER_BIT = 256\nvar GL_STENCIL_BUFFER_BIT = 1024\n\nvar GL_ARRAY_BUFFER = 34962\n\nvar CONTEXT_LOST_EVENT = 'webglcontextlost'\nvar CONTEXT_RESTORED_EVENT = 'webglcontextrestored'\n\nvar DYN_PROP = 1\nvar DYN_CONTEXT = 2\nvar DYN_STATE = 3\n\nfunction find (haystack, needle) {\n  for (var i = 0; i < haystack.length; ++i) {\n    if (haystack[i] === needle) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction wrapREGL (args) {\n  var config = parseArgs(args)\n  if (!config) {\n    return null\n  }\n\n  var gl = config.gl\n  var glAttributes = gl.getContextAttributes()\n  var contextLost = gl.isContextLost()\n\n  var extensionState = createExtensionCache(gl, config)\n  if (!extensionState) {\n    return null\n  }\n\n  var stringStore = createStringStore()\n  var stats$$1 = stats()\n  var cachedCode = config.cachedCode || {};\n  var extensions = extensionState.extensions\n  var timer = createTimer(gl, extensions)\n\n  var START_TIME = clock()\n  var WIDTH = gl.drawingBufferWidth\n  var HEIGHT = gl.drawingBufferHeight\n\n  var contextState = {\n    tick: 0,\n    time: 0,\n    viewportWidth: WIDTH,\n    viewportHeight: HEIGHT,\n    framebufferWidth: WIDTH,\n    framebufferHeight: HEIGHT,\n    drawingBufferWidth: WIDTH,\n    drawingBufferHeight: HEIGHT,\n    pixelRatio: config.pixelRatio\n  }\n  var uniformState = {}\n  var drawState = {\n    elements: null,\n    primitive: 4, // GL_TRIANGLES\n    count: -1,\n    offset: 0,\n    instances: -1\n  }\n\n  var limits = wrapLimits(gl, extensions)\n  var bufferState = wrapBufferState(\n    gl,\n    stats$$1,\n    config,\n    destroyBuffer)\n  var elementState = wrapElementsState(gl, extensions, bufferState, stats$$1)\n  var attributeState = wrapAttributeState(\n    gl,\n    extensions,\n    limits,\n    stats$$1,\n    bufferState,\n    elementState,\n    drawState)\n  function destroyBuffer (buffer) {\n    return attributeState.destroyBuffer(buffer)\n  }\n  var shaderState = wrapShaderState(gl, stringStore, stats$$1, config)\n  var textureState = createTextureSet(\n    gl,\n    extensions,\n    limits,\n    function () { core.procs.poll() },\n    contextState,\n    stats$$1,\n    config)\n  var renderbufferState = wrapRenderbuffers(gl, extensions, limits, stats$$1, config)\n  var framebufferState = wrapFBOState(\n    gl,\n    extensions,\n    limits,\n    textureState,\n    renderbufferState,\n    stats$$1)\n  var core = reglCore(\n    gl,\n    stringStore,\n    extensions,\n    limits,\n    bufferState,\n    elementState,\n    textureState,\n    framebufferState,\n    uniformState,\n    attributeState,\n    shaderState,\n    drawState,\n    contextState,\n    timer,\n    cachedCode,\n    config)\n  var readPixels = wrapReadPixels(\n    gl,\n    framebufferState,\n    core.procs.poll,\n    contextState,\n    glAttributes, extensions, limits)\n\n  var nextState = core.next\n  var canvas = gl.canvas\n\n  var rafCallbacks = []\n  var lossCallbacks = []\n  var restoreCallbacks = []\n  var destroyCallbacks = [config.onDestroy]\n\n  var activeRAF = null\n  function handleRAF () {\n    if (rafCallbacks.length === 0) {\n      if (timer) {\n        timer.update()\n      }\n      activeRAF = null\n      return\n    }\n\n    // schedule next animation frame\n    activeRAF = raf.next(handleRAF)\n\n    // poll for changes\n    poll()\n\n    // fire a callback for all pending rafs\n    for (var i = rafCallbacks.length - 1; i >= 0; --i) {\n      var cb = rafCallbacks[i]\n      if (cb) {\n        cb(contextState, null, 0)\n      }\n    }\n\n    // flush all pending webgl calls\n    gl.flush()\n\n    // poll GPU timers *after* gl.flush so we don't delay command dispatch\n    if (timer) {\n      timer.update()\n    }\n  }\n\n  function startRAF () {\n    if (!activeRAF && rafCallbacks.length > 0) {\n      activeRAF = raf.next(handleRAF)\n    }\n  }\n\n  function stopRAF () {\n    if (activeRAF) {\n      raf.cancel(handleRAF)\n      activeRAF = null\n    }\n  }\n\n  function handleContextLoss (event) {\n    event.preventDefault()\n\n    // set context lost flag\n    contextLost = true\n\n    // pause request animation frame\n    stopRAF()\n\n    // lose context\n    lossCallbacks.forEach(function (cb) {\n      cb()\n    })\n  }\n\n  function handleContextRestored (event) {\n    // clear error code\n    gl.getError()\n\n    // clear context lost flag\n    contextLost = false\n\n    // refresh state\n    extensionState.restore()\n    shaderState.restore()\n    bufferState.restore()\n    textureState.restore()\n    renderbufferState.restore()\n    framebufferState.restore()\n    attributeState.restore()\n    if (timer) {\n      timer.restore()\n    }\n\n    // refresh state\n    core.procs.refresh()\n\n    // restart RAF\n    startRAF()\n\n    // restore context\n    restoreCallbacks.forEach(function (cb) {\n      cb()\n    })\n  }\n\n  if (canvas) {\n    canvas.addEventListener(CONTEXT_LOST_EVENT, handleContextLoss, false)\n    canvas.addEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored, false)\n  }\n\n  function destroy () {\n    rafCallbacks.length = 0\n    stopRAF()\n\n    if (canvas) {\n      canvas.removeEventListener(CONTEXT_LOST_EVENT, handleContextLoss)\n      canvas.removeEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored)\n    }\n\n    shaderState.clear()\n    framebufferState.clear()\n    renderbufferState.clear()\n    attributeState.clear()\n    textureState.clear()\n    elementState.clear()\n    bufferState.clear()\n\n    if (timer) {\n      timer.clear()\n    }\n\n    destroyCallbacks.forEach(function (cb) {\n      cb()\n    })\n  }\n\n  function compileProcedure (options) {\n    \n    \n\n    function flattenNestedOptions (options) {\n      var result = extend({}, options)\n      delete result.uniforms\n      delete result.attributes\n      delete result.context\n      delete result.vao\n\n      if ('stencil' in result && result.stencil.op) {\n        result.stencil.opBack = result.stencil.opFront = result.stencil.op\n        delete result.stencil.op\n      }\n\n      function merge (name) {\n        if (name in result) {\n          var child = result[name]\n          delete result[name]\n          Object.keys(child).forEach(function (prop) {\n            result[name + '.' + prop] = child[prop]\n          })\n        }\n      }\n      merge('blend')\n      merge('depth')\n      merge('cull')\n      merge('stencil')\n      merge('polygonOffset')\n      merge('scissor')\n      merge('sample')\n\n      if ('vao' in options) {\n        result.vao = options.vao\n      }\n\n      return result\n    }\n\n    function separateDynamic (object, useArrays) {\n      var staticItems = {}\n      var dynamicItems = {}\n      Object.keys(object).forEach(function (option) {\n        var value = object[option]\n        if (dynamic.isDynamic(value)) {\n          dynamicItems[option] = dynamic.unbox(value, option)\n          return\n        } else if (useArrays && Array.isArray(value)) {\n          for (var i = 0; i < value.length; ++i) {\n            if (dynamic.isDynamic(value[i])) {\n              dynamicItems[option] = dynamic.unbox(value, option)\n              return\n            }\n          }\n        }\n        staticItems[option] = value\n      })\n      return {\n        dynamic: dynamicItems,\n        static: staticItems\n      }\n    }\n\n    // Treat context variables separate from other dynamic variables\n    var context = separateDynamic(options.context || {}, true)\n    var uniforms = separateDynamic(options.uniforms || {}, true)\n    var attributes = separateDynamic(options.attributes || {}, false)\n    var opts = separateDynamic(flattenNestedOptions(options), false)\n\n    var stats$$1 = {\n      gpuTime: 0.0,\n      cpuTime: 0.0,\n      count: 0\n    }\n\n    var compiled = core.compile(opts, attributes, uniforms, context, stats$$1)\n\n    var draw = compiled.draw\n    var batch = compiled.batch\n    var scope = compiled.scope\n\n    // FIXME: we should modify code generation for batch commands so this\n    // isn't necessary\n    var EMPTY_ARRAY = []\n    function reserve (count) {\n      while (EMPTY_ARRAY.length < count) {\n        EMPTY_ARRAY.push(null)\n      }\n      return EMPTY_ARRAY\n    }\n\n    function REGLCommand (args, body) {\n      var i\n      if (contextLost) {\n        \n      }\n      if (typeof args === 'function') {\n        return scope.call(this, null, args, 0)\n      } else if (typeof body === 'function') {\n        if (typeof args === 'number') {\n          for (i = 0; i < args; ++i) {\n            scope.call(this, null, body, i)\n          }\n        } else if (Array.isArray(args)) {\n          for (i = 0; i < args.length; ++i) {\n            scope.call(this, args[i], body, i)\n          }\n        } else {\n          return scope.call(this, args, body, 0)\n        }\n      } else if (typeof args === 'number') {\n        if (args > 0) {\n          return batch.call(this, reserve(args | 0), args | 0)\n        }\n      } else if (Array.isArray(args)) {\n        if (args.length) {\n          return batch.call(this, args, args.length)\n        }\n      } else {\n        return draw.call(this, args)\n      }\n    }\n\n    return extend(REGLCommand, {\n      stats: stats$$1,\n      destroy: function () {\n        compiled.destroy()\n      }\n    })\n  }\n\n  var setFBO = framebufferState.setFBO = compileProcedure({\n    framebuffer: dynamic.define.call(null, DYN_PROP, 'framebuffer')\n  })\n\n  function clearImpl (_, options) {\n    var clearFlags = 0\n    core.procs.poll()\n\n    var c = options.color\n    if (c) {\n      gl.clearColor(+c[0] || 0, +c[1] || 0, +c[2] || 0, +c[3] || 0)\n      clearFlags |= GL_COLOR_BUFFER_BIT\n    }\n    if ('depth' in options) {\n      gl.clearDepth(+options.depth)\n      clearFlags |= GL_DEPTH_BUFFER_BIT\n    }\n    if ('stencil' in options) {\n      gl.clearStencil(options.stencil | 0)\n      clearFlags |= GL_STENCIL_BUFFER_BIT\n    }\n\n    \n    gl.clear(clearFlags)\n  }\n\n  function clear (options) {\n    \n    if ('framebuffer' in options) {\n      if (options.framebuffer &&\n          options.framebuffer_reglType === 'framebufferCube') {\n        for (var i = 0; i < 6; ++i) {\n          setFBO(extend({\n            framebuffer: options.framebuffer.faces[i]\n          }, options), clearImpl)\n        }\n      } else {\n        setFBO(options, clearImpl)\n      }\n    } else {\n      clearImpl(null, options)\n    }\n  }\n\n  function frame (cb) {\n    \n    rafCallbacks.push(cb)\n\n    function cancel () {\n      // FIXME:  should we check something other than equals cb here?\n      // what if a user calls frame twice with the same callback...\n      //\n      var i = find(rafCallbacks, cb)\n      \n      function pendingCancel () {\n        var index = find(rafCallbacks, pendingCancel)\n        rafCallbacks[index] = rafCallbacks[rafCallbacks.length - 1]\n        rafCallbacks.length -= 1\n        if (rafCallbacks.length <= 0) {\n          stopRAF()\n        }\n      }\n      rafCallbacks[i] = pendingCancel\n    }\n\n    startRAF()\n\n    return {\n      cancel: cancel\n    }\n  }\n\n  // poll viewport\n  function pollViewport () {\n    var viewport = nextState.viewport\n    var scissorBox = nextState.scissor_box\n    viewport[0] = viewport[1] = scissorBox[0] = scissorBox[1] = 0\n    contextState.viewportWidth =\n      contextState.framebufferWidth =\n      contextState.drawingBufferWidth =\n      viewport[2] =\n      scissorBox[2] = gl.drawingBufferWidth\n    contextState.viewportHeight =\n      contextState.framebufferHeight =\n      contextState.drawingBufferHeight =\n      viewport[3] =\n      scissorBox[3] = gl.drawingBufferHeight\n  }\n\n  function poll () {\n    contextState.tick += 1\n    contextState.time = now()\n    pollViewport()\n    core.procs.poll()\n  }\n\n  function refresh () {\n    textureState.refresh()\n    pollViewport()\n    core.procs.refresh()\n    if (timer) {\n      timer.update()\n    }\n  }\n\n  function now () {\n    return (clock() - START_TIME) / 1000.0\n  }\n\n  refresh()\n\n  function addListener (event, callback) {\n    \n\n    var callbacks\n    switch (event) {\n      case 'frame':\n        return frame(callback)\n      case 'lost':\n        callbacks = lossCallbacks\n        break\n      case 'restore':\n        callbacks = restoreCallbacks\n        break\n      case 'destroy':\n        callbacks = destroyCallbacks\n        break\n      default:\n        \n    }\n\n    callbacks.push(callback)\n    return {\n      cancel: function () {\n        for (var i = 0; i < callbacks.length; ++i) {\n          if (callbacks[i] === callback) {\n            callbacks[i] = callbacks[callbacks.length - 1]\n            callbacks.pop()\n            return\n          }\n        }\n      }\n    }\n  }\n\n  function getCachedCode() {\n    return cachedCode\n  }\n\n  function preloadCachedCode(moreCache) {\n    Object.entries(moreCache).forEach(function (kv) {\n      cachedCode[kv[0]] = kv[1]\n    })\n  }\n\n  var regl = extend(compileProcedure, {\n    // Clear current FBO\n    clear: clear,\n\n    // Short cuts for dynamic variables\n    prop: dynamic.define.bind(null, DYN_PROP),\n    context: dynamic.define.bind(null, DYN_CONTEXT),\n    this: dynamic.define.bind(null, DYN_STATE),\n\n    // executes an empty draw command\n    draw: compileProcedure({}),\n\n    // Resources\n    buffer: function (options) {\n      return bufferState.create(options, GL_ARRAY_BUFFER, false, false)\n    },\n    elements: function (options) {\n      return elementState.create(options, false)\n    },\n    texture: textureState.create2D,\n    cube: textureState.createCube,\n    renderbuffer: renderbufferState.create,\n    framebuffer: framebufferState.create,\n    framebufferCube: framebufferState.createCube,\n    vao: attributeState.createVAO,\n\n    // Expose context attributes\n    attributes: glAttributes,\n\n    // Frame rendering\n    frame: frame,\n    on: addListener,\n\n    // System limits\n    limits: limits,\n    hasExtension: function (name) {\n      return limits.extensions.indexOf(name.toLowerCase()) >= 0\n    },\n\n    // Read pixels\n    read: readPixels,\n\n    // Destroy regl and all associated resources\n    destroy: destroy,\n\n    // Direct GL state manipulation\n    _gl: gl,\n    _refresh: refresh,\n\n    poll: function () {\n      poll()\n      if (timer) {\n        timer.update()\n      }\n    },\n\n    // Current time\n    now: now,\n\n    // regl Statistics Information\n    stats: stats$$1,\n\n    // cache generated code\n    getCachedCode: getCachedCode,\n    preloadCachedCode: preloadCachedCode\n  })\n\n  config.onDone(null, regl)\n\n  return regl\n}\n\nreturn wrapREGL;\n\n})));\n", "// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n", "// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n", "// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n", "// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n", "/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== \"undefined\" ? Float32Array : Array;\nexport var RANDOM = Math.random;\nexport var ANGLE_ORDER = \"zyx\";\n\n/**\n * Symmetric round\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\n *\n * @param {Number} a value to round\n */\nexport function round(a) {\n  if (a >= 0) return Math.round(a);\n  return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\n}\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\nvar radian = 180 / Math.PI;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Convert Radian To Degree\n *\n * @param {Number} a Angle in Radians\n */\nexport function toDegree(a) {\n  return a * radian;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a          The first number to test.\n * @param {Number} b          The second number to test.\n * @param {Number} tolerance  Absolute or relative tolerance (default glMatrix.EPSILON)\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  var tolerance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return Math.abs(a - b) <= tolerance * Math.max(1, Math.abs(a), Math.abs(b));\n}", "import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n      a02 = a[2],\n      a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3 | null} out, or null if source matrix is not invertible\n */\nexport function invert(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b00 = b[0],\n    b01 = b[1],\n    b02 = b[2];\n  var b10 = b[3],\n    b11 = b[4],\n    b12 = b[5];\n  var b20 = b[6],\n    b21 = b[7],\n    b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    x = v[0],\n    y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a10 = a[3],\n    a11 = a[4],\n    a12 = a[5],\n    a20 = a[6],\n    a21 = a[7],\n    a22 = a[8],\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  var x = v[0],\n    y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n    c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n  var x = q[0],\n    y = q[1],\n    z = q[2],\n    w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2],\n    a03 = a[3];\n  var a10 = a[4],\n    a11 = a[5],\n    a12 = a[6],\n    a13 = a[7];\n  var a20 = a[8],\n    a21 = a[9],\n    a22 = a[10],\n    a23 = a[11];\n  var a30 = a[12],\n    a31 = a[13],\n    a32 = a[14],\n    a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8]);\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7],\n    a8 = a[8];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function slerp(out, a, b, t) {\n  var angle = Math.acos(Math.min(Math.max(dot(a, b), -1), 1));\n  var sinTotal = Math.sin(angle);\n  var ratioA = Math.sin((1 - t) * angle) / sinTotal;\n  var ratioB = Math.sin(t * angle) / sinTotal;\n  out[0] = ratioA * a[0] + ratioB * b[0];\n  out[1] = ratioA * a[1] + ratioB * b[1];\n  out[2] = ratioA * a[2] + ratioB * b[2];\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n    r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    bx = b[0],\n    by = b[1],\n    bz = b[2],\n    mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz)),\n    cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 3;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  out[2] = glMatrix.round(a[2]);\n  out[3] = glMatrix.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} out the receiving vector\n * @param {ReadonlyVec4} u the first vector\n * @param {ReadonlyVec4} v the second vector\n * @param {ReadonlyVec4} w the third vector\n * @returns {vec4} result\n */\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n    B = v[0] * w[2] - v[2] * w[0],\n    C = v[0] * w[3] - v[3] * w[0],\n    D = v[1] * w[2] - v[2] * w[1],\n    E = v[1] * w[3] - v[3] * w[1],\n    F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  var rand;\n  rand = glMatrix.RANDOM();\n  v1 = rand * 2 - 1;\n  v2 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s1 = v1 * v1 + v2 * v2;\n  rand = glMatrix.RANDOM();\n  v3 = rand * 2 - 1;\n  v4 = (4 * glMatrix.RANDOM() - 2) * Math.sqrt(rand * -rand + rand);\n  s2 = v3 * v3 + v4 * v4;\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q normalized quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  // Fast Vector Rotation using Quaternions by Robert Eisele\n  // https://raw.org/proof/vector-rotation-using-quaternions/\n\n  var qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3];\n  var vx = a[0],\n    vy = a[1],\n    vz = a[2];\n\n  // t = q x v\n  var tx = qy * vz - qz * vy;\n  var ty = qz * vx - qx * vz;\n  var tz = qx * vy - qy * vx;\n\n  // t = 2t\n  tx = tx + tx;\n  ty = ty + ty;\n  tz = tz + tz;\n\n  // v + w t + q x t\n  out[0] = vx + qw * tx + qy * tz - qz * ty;\n  out[1] = vy + qw * ty + qz * tx - qx * tz;\n  out[2] = vz + qw * tz + qx * ty - qy * tx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 4;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n\n/**\n * Quaternion in the format XYZW\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2],\n    bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var by = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bz = Math.sin(rad),\n    bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function exp(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\nexport function ln(out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n  var bx = b[0],\n    by = b[1],\n    bz = b[2],\n    bw = b[3];\n  var omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n  // calculate coefficients\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  var a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x Angle to rotate around X axis in degrees.\n * @param {Number} y Angle to rotate around Y axis in degrees.\n * @param {Number} z Angle to rotate around Z axis in degrees.\n * @param {'xyz'|'xzy'|'yxz'|'yzx'|'zxy'|'zyx'} order Intrinsic order for conversion, default is zyx.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n  var order = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : glMatrix.ANGLE_ORDER;\n  var halfToRad = Math.PI / 360;\n  x *= halfToRad;\n  z *= halfToRad;\n  y *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  switch (order) {\n    case \"xyz\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"xzy\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    case \"yxz\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz - sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    case \"yzx\":\n      out[0] = sx * cy * cz + cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"zxy\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz + sx * sy * cz;\n      out[3] = cx * cy * cz - sx * sy * sz;\n      break;\n    case \"zyx\":\n      out[0] = sx * cy * cz - cx * sy * sz;\n      out[1] = cx * sy * cz + sx * cy * sz;\n      out[2] = cx * cy * sz - sx * sy * cz;\n      out[3] = cx * cy * cz + sx * sy * sz;\n      break;\n    default:\n      throw new Error('Unknown angle order ' + order);\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a quaternion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport var clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport var fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport var copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport var set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport var add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport var scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport var dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport var lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport var length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport var squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport var normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport var exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions point approximately to the same direction.\n *\n * Both quaternions are assumed to be unit length.\n *\n * @param {ReadonlyQuat} a The first unit quaternion.\n * @param {ReadonlyQuat} b The second unit quaternion.\n * @returns {Boolean} True if the quaternions are equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(vec4.dot(a, b)) >= 1 - glMatrix.EPSILON;\n}\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * symmetric round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\nexport function round(out, a) {\n  out[0] = glMatrix.round(a[0]);\n  out[1] = glMatrix.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  var x = a[0],\n    y = a[1];\n  return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x * x + y * y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale === undefined ? 1.0 : scale;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n    p1 = a[1] - b[1],\n    sinC = Math.sin(rad),\n    cosC = Math.cos(rad);\n\n  //perform rotation and translate to correct position\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n\n/**\n * Get the smallest angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1];\n  return Math.abs(Math.atan2(ay * bx - ax * by, ax * bx + ay * by));\n}\n\n/**\n * Get the signed angle in the interval [-pi,pi] between two 2D vectors (positive if `a` is to the right of `b`)\n * \n * @param {ReadonlyVec2} a The first vector\n * @param {ReadonlyVec2} b The second vector\n * @returns {number} The signed angle in radians\n */\nexport function signedAngle(a, b) {\n  var ax = a[0],\n    ay = a[1],\n    bx = b[0],\n    by = b[1];\n  return Math.atan2(ax * by - ay * bx, ax * bx + ay * by);\n}\n\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  var a0 = a[0],\n    a1 = a[1];\n  var b0 = b[0],\n    b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport var len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport var sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport var mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport var div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport var dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport var sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport var sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n    if (!stride) {\n      stride = 2;\n    }\n    if (!offset) {\n      offset = 0;\n    }\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n    return a;\n  };\n}();", "export type SeedFn = () => number\nexport type SeedType = number | string | SeedFn | RNG\n\nexport default abstract class RNG {\n  abstract get name(): string\n\n  abstract next(): number\n\n  abstract seed(_seed?: SeedType, _opts?: Record<string, unknown>): void\n\n  abstract clone(_seed?: SeedType, _opts?: Record<string, unknown>): RNG\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _seed(seed: number, _opts?: Record<string, unknown>) {\n    // TODO: add entropy and stuff\n\n    if (seed === (seed || 0)) {\n      return seed\n    } else {\n      const strSeed = '' + seed\n      let s = 0\n\n      for (let k = 0; k < strSeed.length; ++k) {\n        s ^= strSeed.charCodeAt(k) | 0\n      }\n\n      return s\n    }\n  }\n}\n", "import RNG, { SeedFn } from '../rng'\n\nexport default class RNGFunction extends RNG {\n  _rng: SeedFn\n\n  constructor(thunk: SeedFn, opts?: Record<string, unknown>) {\n    super()\n\n    this.seed(thunk, opts)\n  }\n\n  get name() {\n    return 'function'\n  }\n\n  next() {\n    return this._rng()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  seed(thunk: SeedFn, _opts?: Record<string, unknown>) {\n    this._rng = thunk\n  }\n\n  clone(_: undefined, opts: Record<string, unknown>) {\n    return new RNGFunction(this._rng, opts)\n  }\n}\n", "import seedrandom from 'seedrandom'\n\nimport RNG from './rng'\nimport RNGFunction from './generators/function'\n\n/**\n * Construct an RNG with variable inputs. Used in calls to Random constructor\n * @param {...*} args - Distribution-specific arguments\n * @return RNG\n *\n * @example\n * new Random(RNGFactory(...args))\n */\nexport default <T extends any[]>(...args: T) => {\n  const [arg0 = 'default'] = args\n\n  switch (typeof arg0) {\n    case 'object':\n      if (arg0 instanceof RNG) {\n        return arg0\n      }\n      break\n\n    case 'function':\n      return new RNGFunction(arg0)\n\n    case 'number':\n    case 'string':\n    default:\n      return new RNGFunction(seedrandom(...args))\n  }\n\n  throw new Error(`invalid RNG \"${arg0}\"`)\n}\n", "import { Random } from '../random'\n\nexport default (random: Random, min = 0, max = 1) => {\n  return () => {\n    return random.next() * (max - min) + min\n  }\n}\n", "export function numberValidator(num: number) {\n  return new NumberValidator(num)\n}\n\nexport class NumberValidator {\n  private n: number\n  constructor(num: number) {\n    this.n = num\n  }\n\n  public isInt = (): this => {\n    if (Number.isInteger(this.n)) {\n      return this\n    }\n    throw new Error(`Expected number to be an integer, got ${this.n}`)\n  }\n\n  public isPositive = (): this => {\n    if (this.n > 0) {\n      return this\n    }\n    throw new Error(`Expected number to be positive, got ${this.n}`)\n  }\n\n  public lessThan = (v: number): this => {\n    if (this.n < v) {\n      return this\n    }\n    throw new Error(`Expected number to be less than ${v}, got ${this.n}`)\n  }\n\n  public greaterThanOrEqual = (v: number): this => {\n    if (this.n >= v) {\n      return this\n    }\n    throw new Error(\n      `Expected number to be greater than or equal to ${v}, got ${this.n}`\n    )\n  }\n\n  public greaterThan = (v: number): this => {\n    if (this.n > v) {\n      return this\n    }\n    throw new Error(`Expected number to be greater than ${v}, got ${this.n}`)\n  }\n}\n", "import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, min = 0, max = 1) => {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min\n    min = 0\n  }\n\n  numberValidator(min).isInt()\n  numberValidator(max).isInt()\n\n  return () => {\n    return Math.floor(random.next() * (max - min + 1) + min)\n  }\n}\n", "import { Random } from '../random'\n\nexport default (random: Random) => {\n  return () => {\n    return random.next() >= 0.5\n  }\n}\n", "import { Random } from '../random'\n\nexport default (random: Random, mu = 0, sigma = 1) => {\n  return () => {\n    let x: number, y: number, r: number\n\n    do {\n      x = random.next() * 2 - 1\n      y = random.next() * 2 - 1\n      r = x * x + y * y\n    } while (!r || r > 1)\n\n    return mu + sigma * y * Math.sqrt((-2 * Math.log(r)) / r)\n  }\n}\n", "import { Random } from '../random'\n\nexport default (random: Random, mu = 0, sigma = 1) => {\n  const normal = random.normal(mu, sigma)\n  return () => {\n    return Math.exp(normal())\n  }\n}\n", "import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, p = 0.5) => {\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1)\n\n  return () => {\n    return Math.floor(random.next() + p)\n  }\n}\n", "import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1, p = 0.5) => {\n  numberValidator(n).isInt().isPositive()\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1)\n\n  return () => {\n    let i = 0\n    let x = 0\n\n    while (i++ < n) {\n      if (random.next() < p) {\n        x++\n      }\n    }\n    return x\n  }\n}\n", "import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, p = 0.5) => {\n  numberValidator(p).greaterThan(0).lessThan(1)\n  const invLogP = 1.0 / Math.log(1.0 - p)\n\n  return () => {\n    return Math.floor(1 + Math.log(random.next()) * invLogP)\n  }\n}\n", "import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nconst logFactorialTable = [\n  0.0, 0.0, 0.69314718055994529, 1.791759469228055, 3.1780538303479458,\n  4.7874917427820458, 6.5792512120101012, 8.5251613610654147,\n  10.604602902745251, 12.801827480081469\n]\n\nconst logFactorial = (k: number) => {\n  return logFactorialTable[k]\n}\n\nconst logSqrt2PI = 0.91893853320467267\n\nexport default (random: Random, lambda = 1) => {\n  numberValidator(lambda).isPositive()\n\n  if (lambda < 10) {\n    // inversion method\n    const expMean = Math.exp(-lambda)\n\n    return () => {\n      let p = expMean\n      let x = 0\n      let u = random.next()\n\n      while (u > p) {\n        u = u - p\n        p = (lambda * p) / ++x\n      }\n\n      return x\n    }\n  } else {\n    // generative method\n    const smu = Math.sqrt(lambda)\n    const b = 0.931 + 2.53 * smu\n    const a = -0.059 + 0.02483 * b\n    const invAlpha = 1.1239 + 1.1328 / (b - 3.4)\n    const vR = 0.9277 - 3.6224 / (b - 2)\n\n    return () => {\n      while (true) {\n        let u\n        let v = random.next()\n\n        if (v <= 0.86 * vR) {\n          u = v / vR - 0.43\n          return Math.floor(\n            ((2 * a) / (0.5 - Math.abs(u)) + b) * u + lambda + 0.445\n          )\n        }\n\n        if (v >= vR) {\n          u = random.next() - 0.5\n        } else {\n          u = v / vR - 0.93\n          u = (u < 0 ? -0.5 : 0.5) - u\n          v = random.next() * vR\n        }\n\n        const us = 0.5 - Math.abs(u)\n        if (us < 0.013 && v > us) {\n          continue\n        }\n\n        const k = Math.floor(((2 * a) / us + b) * u + lambda + 0.445)\n        v = (v * invAlpha) / (a / (us * us) + b)\n\n        if (k >= 10) {\n          const t =\n            (k + 0.5) * Math.log(lambda / k) -\n            lambda -\n            logSqrt2PI +\n            k -\n            (1 / 12.0 - (1 / 360.0 - 1 / (1260.0 * k * k)) / (k * k)) / k\n\n          if (Math.log(v * smu) <= t) {\n            return k\n          }\n        } else if (k >= 0) {\n          const f = logFactorial(k) ?? 0\n\n          if (Math.log(v) <= k * Math.log(lambda) - lambda - f) {\n            return k\n          }\n        }\n      }\n    }\n  }\n}\n", "import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, lambda = 1) => {\n  numberValidator(lambda).isPositive()\n\n  return () => {\n    return -Math.log(1 - random.next()) / lambda\n  }\n}\n", "import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1) => {\n  numberValidator(n).isInt().greaterThanOrEqual(0)\n\n  return () => {\n    let sum = 0\n    for (let i = 0; i < n; ++i) {\n      sum += random.next()\n    }\n\n    return sum\n  }\n}\n", "import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1) => {\n  numberValidator(n).isInt().isPositive()\n  const irwinHall = random.irwinHall(n)\n\n  return () => {\n    return irwinHall() / n\n  }\n}\n", "import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, alpha = 1) => {\n  numberValidator(alpha).greaterThanOrEqual(0)\n  const invAlpha = 1.0 / alpha\n\n  return () => {\n    return 1.0 / Math.pow(1.0 - random.next(), invAlpha)\n  }\n}\n", "import RNG from '../rng'\n\nexport default class RNGMathRandom extends RNG {\n  get name() {\n    return 'default'\n  }\n\n  next() {\n    return Math.random()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  seed(_seed: unknown, _opts: Record<string, unknown>) {\n    // intentionally empty\n  }\n\n  clone() {\n    return new RNGMathRandom()\n  }\n}\n", "import RNG from './rng'\nimport RNGFactory from './rng-factory'\n\nimport uniform from './distributions/uniform'\nimport uniformInt from './distributions/uniform-int'\nimport uniformBoolean from './distributions/uniform-boolean'\nimport normal from './distributions/normal'\nimport logNormal from './distributions/log-normal'\nimport bernoulli from './distributions/bernoulli'\nimport binomial from './distributions/binomial'\nimport geometric from './distributions/geometric'\nimport poisson from './distributions/poisson'\nimport exponential from './distributions/exponential'\nimport irwinHall from './distributions/irwin-hall'\nimport bates from './distributions/bates'\nimport pareto from './distributions/pareto'\nimport RNGMathRandom from './generators/math-random'\n\n/**\n * Distribution function\n */\ninterface IDistFn<R> {\n  (random: Random, ...argv: any): R\n}\n\n/**\n * Distribution\n */\ninterface IDist<R> {\n  (): R\n}\n\n/**\n * Keyed cache entry\n */\ninterface ICacheEntry<T> {\n  key: string\n  distribution: () => T\n}\n\nexport { RNG, RNGFactory }\n\n/**\n * Seedable random number generator supporting many common distributions.\n *\n * Defaults to Math.random as its underlying pseudorandom number generator.\n *\n * @name Random\n * @class\n *\n * @param {RNG|function} [rng=Math.random] - Underlying pseudorandom number generator.\n */\nexport class Random {\n  protected _rng: RNG\n  protected _patch: typeof Math.random | undefined\n  protected _cache: {\n    [k: string]: ICacheEntry<any>\n  } = {}\n\n  constructor(rng?: RNG) {\n    if (rng && rng instanceof RNG) {\n      this.use(rng)\n    } else {\n      this.use(new RNGMathRandom())\n    }\n    this._cache = {}\n  }\n\n  /**\n   * @member {RNG} Underlying pseudo-random number generator\n   */\n  get rng() {\n    return this._rng\n  }\n\n  /**\n   * Creates a new `Random` instance, optionally specifying parameters to\n   * set a new seed.\n   *\n   * @see RNG.clone\n   *\n   * @param {string} [seed] - Optional seed for new RNG.\n   * @param {object} [opts] - Optional config for new RNG options.\n   * @return {Random}\n   */\n  clone<T>(...args: [T]): Random {\n    if (args.length) {\n      return new Random(RNGFactory(...args))\n    } else {\n      return new Random(this.rng.clone())\n    }\n  }\n\n  /**\n   * Sets the underlying pseudorandom number generator used via\n   * either an instance of `seedrandom`, a custom instance of RNG\n   * (for PRNG plugins), or a string specifying the PRNG to use\n   * along with an optional `seed` and `opts` to initialize the\n   * RNG.\n   *\n   * @example\n   * import random from 'random'\n   *\n   * random.use('example_seedrandom_string')\n   * // or\n   * random.use(seedrandom('kittens'))\n   * // or\n   * random.use(Math.random)\n   *\n   * @param {...*} args\n   */\n  use(...args: [RNG]) {\n    this._rng = RNGFactory(...args)\n  }\n\n  /**\n   * Patches `Math.random` with this Random instance's PRNG.\n   */\n  patch() {\n    if (this._patch) {\n      throw new Error('Math.random already patched')\n    }\n\n    this._patch = Math.random\n    Math.random = this.uniform()\n  }\n\n  /**\n   * Restores a previously patched `Math.random` to its original value.\n   */\n  unpatch() {\n    if (this._patch) {\n      Math.random = this._patch\n      delete this._patch\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // Uniform utility functions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Convenience wrapper around `this.rng.next()`\n   *\n   * Returns a floating point number in [0, 1).\n   *\n   * @return {number}\n   */\n  next = (): number => {\n    return this._rng.next()\n  }\n\n  /**\n   * Samples a uniform random floating point number, optionally specifying\n   * lower and upper bounds.\n   *\n   * Convence wrapper around `random.uniform()`\n   *\n   * @param {number} [min=0] - Lower bound (float, inclusive)\n   * @param {number} [max=1] - Upper bound (float, exclusive)\n   * @return {number}\n   */\n  float = (min?: number, max?: number): number => {\n    return this.uniform(min, max)()\n  }\n\n  /**\n   * Samples a uniform random integer, optionally specifying lower and upper\n   * bounds.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {number}\n   */\n  int = (min?: number, max?: number) => {\n    return this.uniformInt(min, max)()\n  }\n\n  /**\n   * Samples a uniform random integer, optionally specifying lower and upper\n   * bounds.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @alias `random.int`\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {number}\n   */\n  integer = (min?: number, max?: number) => {\n    return this.uniformInt(min, max)()\n  }\n\n  /**\n   * Samples a uniform random boolean value.\n   *\n   * Convence wrapper around `random.uniformBoolean()`\n   *\n   * @alias `random.boolean`\n   *\n   * @return {boolean}\n   */\n  bool = () => {\n    return this.uniformBoolean()()\n  }\n\n  /**\n   * Samples a uniform random boolean value.\n   *\n   * Convence wrapper around `random.uniformBoolean()`\n   *\n   * @return {boolean}\n   */\n  boolean = () => {\n    return this.uniformBoolean()()\n  }\n\n  /**\n   * Returns an item chosen uniformly at trandom from the given array.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @param {Array<T>} [array] - Lower bound (integer, inclusive)\n   * @return {T | undefined}\n   */\n  choice<T>(array: Array<T>): T | undefined {\n    if (!Array.isArray(array)) {\n      throw new Error(\n        `Random.choice expected input to be an array, got ${typeof array}`\n      )\n    }\n\n    const length = array?.length\n\n    if (length > 0) {\n      const index = this.uniformInt(0, length - 1)()\n      return array[index]\n    } else {\n      return undefined\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // Uniform distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).\n   *\n   * @param {number} [min=0] - Lower bound (float, inclusive)\n   * @param {number} [max=1] - Upper bound (float, exclusive)\n   * @return {function}\n   */\n  uniform = (min?: number, max?: number) => {\n    return this._memoize<number>('uniform', uniform, min, max)\n  }\n\n  /**\n   * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution).\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {function}\n   */\n  uniformInt = (min?: number, max?: number) => {\n    return this._memoize<number>('uniformInt', uniformInt, min, max)\n  }\n\n  /**\n   * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution),\n   * with two possible outcomes, `true` or `false.\n   *\n   * This method is analogous to flipping a coin.\n   *\n   * @return {function}\n   */\n  uniformBoolean = () => {\n    return this._memoize<boolean>('uniformBoolean', uniformBoolean)\n  }\n\n  // --------------------------------------------------------------------------\n  // Normal distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Normal distribution](https://en.wikipedia.org/wiki/Normal_distribution).\n   *\n   * @param {number} [mu=0] - Mean\n   * @param {number} [sigma=1] - Standard deviation\n   * @return {function}\n   */\n  normal = (mu?: number, sigma?: number) => {\n    return normal(this, mu, sigma)\n  }\n\n  /**\n   * Generates a [Log-normal distribution](https://en.wikipedia.org/wiki/Log-normal_distribution).\n   *\n   * @param {number} [mu=0] - Mean of underlying normal distribution\n   * @param {number} [sigma=1] - Standard deviation of underlying normal distribution\n   * @return {function}\n   */\n  logNormal = (mu?: number, sigma?: number) => {\n    return logNormal(this, mu, sigma)\n  }\n\n  // --------------------------------------------------------------------------\n  // Bernoulli distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Bernoulli distribution](https://en.wikipedia.org/wiki/Bernoulli_distribution).\n   *\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  bernoulli = (p?: number) => {\n    return bernoulli(this, p)\n  }\n\n  /**\n   * Generates a [Binomial distribution](https://en.wikipedia.org/wiki/Binomial_distribution).\n   *\n   * @param {number} [n=1] - Number of trials.\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  binomial = (n?: number, p?: number) => {\n    return binomial(this, n, p)\n  }\n\n  /**\n   * Generates a [Geometric distribution](https://en.wikipedia.org/wiki/Geometric_distribution).\n   *\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  geometric = (p?: number) => {\n    return geometric(this, p)\n  }\n\n  // --------------------------------------------------------------------------\n  // Poisson distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Poisson distribution](https://en.wikipedia.org/wiki/Poisson_distribution).\n   *\n   * @param {number} [lambda=1] - Mean (lambda > 0)\n   * @return {function}\n   */\n  poisson = (lambda?: number) => {\n    return poisson(this, lambda)\n  }\n\n  /**\n   * Generates an [Exponential distribution](https://en.wikipedia.org/wiki/Exponential_distribution).\n   *\n   * @param {number} [lambda=1] - Inverse mean (lambda > 0)\n   * @return {function}\n   */\n  exponential = (lambda?: number) => {\n    return exponential(this, lambda)\n  }\n\n  // --------------------------------------------------------------------------\n  // Misc distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates an [Irwin Hall distribution](https://en.wikipedia.org/wiki/Irwin%E2%80%93Hall_distribution).\n   *\n   * @param {number} [n=1] - Number of uniform samples to sum (n >= 0)\n   * @return {function}\n   */\n  irwinHall = (n?: number) => {\n    return irwinHall(this, n)\n  }\n\n  /**\n   * Generates a [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution).\n   *\n   * @param {number} [n=1] - Number of uniform samples to average (n >= 1)\n   * @return {function}\n   */\n  bates = (n?: number) => {\n    return bates(this, n)\n  }\n\n  /**\n   * Generates a [Pareto distribution](https://en.wikipedia.org/wiki/Pareto_distribution).\n   *\n   * @param {number} [alpha=1] - Alpha\n   * @return {function}\n   */\n  pareto = (alpha?: number) => {\n    return pareto(this, alpha)\n  }\n\n  // --------------------------------------------------------------------------\n  // Internal\n  // --------------------------------------------------------------------------\n\n  /**\n   * Memoizes distributions to ensure they're only created when necessary.\n   *\n   * Returns a thunk which that returns independent, identically distributed\n   * samples from the specified distribution.\n   *\n   * @private\n   *\n   * @param {string} label - Name of distribution\n   * @param {function} getter - Function which generates a new distribution\n   * @param {...*} args - Distribution-specific arguments\n   *\n   * @return {function}\n   */\n  _memoize<T>(label: string, getter: IDistFn<any>, ...args: any[]): IDist<T> {\n    const key = `${args.join(';')}`\n    let value = this._cache[label]\n\n    if (value === undefined || value.key !== key) {\n      value = {\n        key,\n        distribution: getter(this, ...args)\n      }\n      this._cache[label] = value\n    }\n\n    return value.distribution\n  }\n}\n\n// defaults to Math.random as its RNG\nexport default new Random()\n", "export default x => () => x;\n", "export default function ZoomEvent(type, {\n  sourceEvent,\n  target,\n  transform,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    transform: {value: transform, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n", "export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n", "export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n", "import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {select, pointer} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled, {passive: false})\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var currentTarget = event.currentTarget,\n        g = gesture(this, args, true).event(event),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = pointer(event, currentTarget),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.GLBench = factory());\n}(this, (function () { 'use strict';\n\n  var UISVG = \"<div class=\\\"gl-box\\\">\\n  <svg viewBox=\\\"0 0 55 60\\\">\\n    <text x=\\\"27\\\" y=\\\"56\\\" class=\\\"gl-fps\\\">00 FPS</text>\\n    <text x=\\\"28\\\" y=\\\"8\\\" class=\\\"gl-mem\\\"></text>\\n    <rect x=\\\"0\\\" y=\\\"14\\\" rx=\\\"4\\\" ry=\\\"4\\\" width=\\\"55\\\" height=\\\"32\\\"></rect>\\n    <polyline class=\\\"gl-chart\\\"></polyline>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-cpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-cpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M5.35 43c-.464 0-.812.377-.812.812v1.16c-.783.1972-1.421.812-1.595 1.624h-1.16c-.435 0-.812.348-.812.812s.348.812.812.812h1.102v1.653H1.812c-.464 0-.812.377-.812.812 0 .464.377.812.812.812h1.131c.1943.783.812 1.392 1.595 1.595v1.131c0 .464.377.812.812.812.464 0 .812-.377.812-.812V53.15h1.653v1.073c0 .464.377.812.812.812.464 0 .812-.377.812-.812v-1.131c.783-.1943 1.392-.812 1.595-1.595h1.131c.464 0 .812-.377.812-.812 0-.464-.377-.812-.812-.812h-1.073V48.22h1.102c.435 0 .812-.348.812-.812s-.348-.812-.812-.812h-1.16c-.1885-.783-.812-1.421-1.595-1.624v-1.131c0-.464-.377-.812-.812-.812-.464 0-.812.377-.812.812v1.073H6.162v-1.073c0-.464-.377-.812-.812-.812zm.58 3.48h2.088c.754 0 1.363.609 1.363 1.363v2.088c0 .754-.609 1.363-1.363 1.363H5.93c-.754 0-1.363-.609-1.363-1.363v-2.088c0-.754.609-1.363 1.363-1.363z\\\"/>\\n  </svg>\\n  <svg viewBox=\\\"0 0 14 60\\\" class=\\\"gl-gpu-svg\\\">\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"opacity\\\"/>\\n    <line x1=\\\"7\\\" y1=\\\"38\\\" x2=\\\"7\\\" y2=\\\"11\\\" class=\\\"gl-gpu\\\" stroke-dasharray=\\\"0 27\\\"/>\\n    <path d=\\\"M1.94775 43.3772a.736.736 0 10-.00416 1.472c.58535.00231.56465.1288.6348.3197.07015.18975.04933.43585.04933.43585l-.00653.05405v8.671a.736.736 0 101.472 0v-1.4145c.253.09522.52785.1495.81765.1495h5.267c1.2535 0 2.254-.9752 2.254-2.185v-3.105c0-1.2075-1.00625-2.185-2.254-2.185h-5.267c-.28865 0-.5635.05405-.8165.1495.01806-.16445.04209-.598-.1357-1.0787-.22425-.6072-.9499-1.2765-2.0125-1.2765zm2.9095 3.6455c.42435 0 .7659.36225.7659.8119v2.9785c0 .44965-.34155.8119-.7659.8119s-.7659-.36225-.7659-.8119v-2.9785c0-.44965.34155-.8119.7659-.8119zm4.117 0a2.3 2.3 0 012.3 2.3 2.3 2.3 0 01-2.3 2.3 2.3 2.3 0 01-2.3-2.3 2.3 2.3 0 012.3-2.3z\\\"/>\\n  </svg>\\n</div>\";\n\n  var UICSS = \"#gl-bench {\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:1000;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n}\\n\\n#gl-bench div {\\n  position: relative;\\n  display: block;\\n  margin: 4px;\\n  padding: 0 7px 0 10px;\\n  background: #6c6;\\n  border-radius: 15px;\\n  cursor: pointer;\\n  opacity: 0.9;\\n}\\n\\n#gl-bench svg {\\n  height: 60px;\\n  margin: 0 -1px;\\n}\\n\\n#gl-bench text {\\n  font-size: 12px;\\n  font-family: Helvetica,Arial,sans-serif;\\n  font-weight: 700;\\n  dominant-baseline: middle;\\n  text-anchor: middle;\\n}\\n\\n#gl-bench .gl-mem {\\n  font-size: 9px;\\n}\\n\\n#gl-bench line {\\n  stroke-width: 5;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n}\\n\\n#gl-bench polyline {\\n  fill: none;\\n  stroke: #112211;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 3.5;\\n}\\n\\n#gl-bench rect {\\n  fill: #448844;\\n}\\n\\n#gl-bench .opacity {\\n  stroke: #448844;\\n}\\n\";\n\n  class GLBench {\n\n    /** GLBench constructor\n     * @param { WebGLRenderingContext | WebGL2RenderingContext } gl context\n     * @param { Object | undefined } settings additional settings\n     */\n    constructor(gl, settings = {}) {\n      this.css = UICSS;\n      this.svg = UISVG;\n      this.paramLogger = () => {};\n      this.chartLogger = () => {};\n      this.chartLen = 20;\n      this.chartHz = 20;\n\n      this.names = [];\n      this.cpuAccums = [];\n      this.gpuAccums = [];  \n      this.activeAccums = [];\n      this.chart = new Array(this.chartLen);\n      this.now = () => (performance && performance.now) ? performance.now() : Date.now();\n      this.updateUI = () => {\n        [].forEach.call(this.nodes['gl-gpu-svg'], node => {\n          node.style.display = this.trackGPU ? 'inline' : 'none';\n        });\n      };\n\n      Object.assign(this, settings);\n      this.detected = 0;\n      this.finished = [];\n      this.isFramebuffer = 0;\n      this.frameId = 0;\n\n      // 120hz device detection\n      let rafId, n = 0, t0;\n      let loop = (t) => {\n        if (++n < 20) {\n          rafId = requestAnimationFrame(loop);\n        } else {\n          this.detected = Math.ceil(1e3 * n / (t - t0) / 70);\n          cancelAnimationFrame(rafId);\n        }\n        if (!t0) t0 = t;\n      };\n      requestAnimationFrame(loop);\n\n      // attach gpu profilers\n      if (gl) {\n        const glFinish = async (t, activeAccums) =>\n          Promise.resolve(setTimeout(() => {\n            gl.getError();\n            const dt = this.now() - t;\n            activeAccums.forEach((active, i) => {\n              if (active) this.gpuAccums[i] += dt;\n            });\n          }, 0));\n\n        const addProfiler = (fn, self, target) => function() {\n          const t = self.now();\n          fn.apply(target, arguments);\n          if (self.trackGPU) self.finished.push(glFinish(t, self.activeAccums.slice(0)));\n        };\n\n        ['drawArrays', 'drawElements', 'drawArraysInstanced',\n          'drawBuffers', 'drawElementsInstanced', 'drawRangeElements']\n          .forEach(fn => { if (gl[fn]) gl[fn] = addProfiler(gl[fn], this, gl); });\n\n        gl.getExtension = ((fn, self) => function() {\n          let ext = fn.apply(gl, arguments);\n          if (ext) {\n            ['drawElementsInstancedANGLE', 'drawBuffersWEBGL']\n              .forEach(fn => { if (ext[fn]) ext[fn] = addProfiler(ext[fn], self, ext); });\n          }\n          return ext;\n        })(gl.getExtension, this);\n      }\n\n      // init ui and ui loggers\n      if (!this.withoutUI) {\n        if (!this.dom) this.dom = document.body;\n        let elm = document.createElement('div');\n        elm.id = 'gl-bench';\n        this.dom.appendChild(elm);\n        this.dom.insertAdjacentHTML('afterbegin', '<style id=\"gl-bench-style\">' + this.css + '</style>');\n        this.dom = elm;\n        this.dom.addEventListener('click', () => {\n          this.trackGPU = !this.trackGPU;\n          this.updateUI();\n        });\n\n        this.paramLogger = ((logger, dom, names) => {\n          const classes = ['gl-cpu', 'gl-gpu', 'gl-mem', 'gl-fps', 'gl-gpu-svg', 'gl-chart'];\n          const nodes = Object.assign({}, classes);\n          classes.forEach(c => nodes[c] = dom.getElementsByClassName(c));\n          this.nodes = nodes;\n          return (i, cpu, gpu, mem, fps, totalTime, frameId) => {\n            nodes['gl-cpu'][i].style.strokeDasharray = (cpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-gpu'][i].style.strokeDasharray = (gpu * 0.27).toFixed(0) + ' 100';\n            nodes['gl-mem'][i].innerHTML = names[i] ? names[i] : (mem ? 'mem: ' + mem.toFixed(0) + 'mb' : '');\n            nodes['gl-fps'][i].innerHTML = fps.toFixed(0) + ' FPS';\n            logger(names[i], cpu, gpu, mem, fps, totalTime, frameId);\n          }\n        })(this.paramLogger, this.dom, this.names);\n\n        this.chartLogger = ((logger, dom) => {\n          let nodes = { 'gl-chart': dom.getElementsByClassName('gl-chart') };\n          return (i, chart, circularId) => {\n            let points = '';\n            let len = chart.length;\n            for (let i = 0; i < len; i++) {\n              let id = (circularId + i + 1) % len;\n              if (chart[id] != undefined) {\n                points = points + ' ' + (55 * i / (len - 1)).toFixed(1) + ','\n                  + (45 - chart[id] * 22 / 60 / this.detected).toFixed(1);\n              }\n            }\n            nodes['gl-chart'][i].setAttribute('points', points);\n            logger(this.names[i], chart, circularId);\n          }\n        })(this.chartLogger, this.dom);\n      }\n    }\n\n    /**\n     * Explicit UI add\n     * @param { string | undefined } name \n     */\n    addUI(name) {\n      if (this.names.indexOf(name) == -1) {\n        this.names.push(name);\n        if (this.dom) {\n          this.dom.insertAdjacentHTML('beforeend', this.svg);\n          this.updateUI();\n        }\n        this.cpuAccums.push(0);\n        this.gpuAccums.push(0);\n        this.activeAccums.push(false);\n      }\n    }\n\n    /**\n     * Increase frameID\n     * @param { number | undefined } now\n     */\n    nextFrame(now) {\n      this.frameId++;\n      const t = now ? now : this.now();\n\n      // params\n      if (this.frameId <= 1) {\n        this.paramFrame = this.frameId;\n        this.paramTime = t;\n      } else {\n        let duration = t - this.paramTime;\n        if (duration >= 1e3) {\n          const frameCount = this.frameId - this.paramFrame;\n          const fps = frameCount / duration * 1e3;\n          for (let i = 0; i < this.names.length; i++) {\n            const cpu = this.cpuAccums[i] / duration * 100,\n              gpu = this.gpuAccums[i] / duration * 100,\n              mem = (performance && performance.memory) ? performance.memory.usedJSHeapSize / (1 << 20) : 0;\n            this.paramLogger(i, cpu, gpu, mem, fps, duration, frameCount);\n            this.cpuAccums[i] = 0;\n            Promise.all(this.finished).then(() => {\n              this.gpuAccums[i] = 0;\n              this.finished = [];\n            });\n          }\n          this.paramFrame = this.frameId;\n          this.paramTime = t;\n        }\n      }\n\n      // chart\n      if (!this.detected || !this.chartFrame) {\n        this.chartFrame = this.frameId;\n        this.chartTime = t;\n        this.circularId = 0;\n      } else {\n        let timespan = t - this.chartTime;\n        let hz = this.chartHz * timespan / 1e3;\n        while (--hz > 0 && this.detected) {\n          const frameCount = this.frameId - this.chartFrame;\n          const fps = frameCount / timespan * 1e3;\n          this.chart[this.circularId % this.chartLen] = fps;\n          for (let i = 0; i < this.names.length; i++) {\n            this.chartLogger(i, this.chart, this.circularId);\n          }\n          this.circularId++;\n          this.chartFrame = this.frameId;\n          this.chartTime = t;\n        }\n      }\n    }\n\n    /**\n     * Begin named measurement\n     * @param { string | undefined } name\n     */\n    begin(name) {\n      this.updateAccums(name);\n    }\n\n    /**\n     * End named measure\n     * @param { string | undefined } name\n     */\n    end(name) {\n      this.updateAccums(name);\n    }\n\n    updateAccums(name) {\n      let nameId = this.names.indexOf(name);\n      if (nameId == -1) {\n        nameId = this.names.length;\n        this.addUI(name);\n      }\n\n      const t = this.now();\n      const dt = t - this.t0;\n      for (let i = 0; i < nameId + 1; i++) {\n        if (this.activeAccums[i]) {\n          this.cpuAccums[i] += dt;\n        }\n      }    this.activeAccums[nameId] = !this.activeAccums[nameId];\n      this.t0 = t;\n    }\n\n  }\n\n  return GLBench;\n\n})));\n"],
  "mappings": "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
  "names": ["global", "str", "raf", "name", "transpose", "stats", "destroyBuffer", "transposeData", "options", "color", "arrayShape", "a", "b", "a0", "a1", "a2", "a3", "a4", "a5", "i", "readPixels", "len", "proc", "AttributeRecord", "env", "isStatic", "id", "vao", "elements", "result", "primitive", "count", "uniform", "ELEMENTS", "COUNT", "program", "VARIABLE", "pendingStats", "stats$$1", "args", "regl", "global", "module", "define", "copy", "global", "module", "define", "copy", "global", "module", "define", "copy", "global", "module", "define", "me", "seed", "copy", "global", "module", "define", "me", "seed", "copy", "global", "module", "define", "copy", "global", "seedrandom", "prng", "seed", "copy", "t", "i", "j", "s", "require_seedrandom", "scale", "create", "fromValues", "len", "create", "create", "normalize", "len", "forEach", "create", "create", "normalize", "create", "fromValues", "dot", "normalize", "create", "forEach", "create", "RNG", "_seed", "seed", "_opts", "strSeed", "s", "k", "length", "charCodeAt", "RNGFunction", "thunk", "opts", "_rng", "next", "clone", "_", "args", "arg0", "seedrandom", "Error", "random", "min", "max", "numberValidator", "num", "NumberValidator", "n", "isInt", "Number", "isInteger", "isPositive", "lessThan", "v", "greaterThanOrEqual", "greaterThan", "undefined", "Math", "floor", "mu", "sigma", "x", "y", "r", "sqrt", "log", "normal", "exp", "p", "i", "invLogP", "logFactorialTable", "logFactorial", "logSqrt2PI", "lambda", "expMean", "u", "smu", "b", "a", "invAlpha", "vR", "abs", "us", "t", "f", "sum", "irwinHall", "alpha", "pow", "RNGMathRandom", "Random", "rng", "_patch", "_cache", "uniform", "uniformInt", "integer", "bool", "uniformBoolean", "_memoize", "logNormal", "bernoulli", "binomial", "geometric", "poisson", "exponential", "bates", "pareto", "use", "RNGFactory", "patch", "unpatch", "choice", "array", "Array", "isArray", "index", "label", "getter", "key", "join", "value", "distribution", "transform", "identity", "identity", "transform", "extent", "zoom_default", "translate", "scale", "event", "global", "this", "GLBench", "self", "fn", "len", "i"]
}
